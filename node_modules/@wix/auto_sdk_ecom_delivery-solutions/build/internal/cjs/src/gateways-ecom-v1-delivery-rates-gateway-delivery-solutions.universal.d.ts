import { NonNullablePaths } from '@wix/sdk-types';
export interface DeliveryRatesGateway {
    /**
     * @format GUID
     * @readonly
     */
    _id?: string | null;
}
export interface GetDeliverySolutionsRequest {
    /**
     * list of items to delivery that each of them points to delivery profile and delivery rule.
     * @minSize 1
     * @maxSize 300
     */
    lineItems: DeliverableItem[];
    /** Destination the items should deliver to */
    destination: Address;
    /**
     * Origin the items should deliver from
     * @deprecated Origin the items should deliver from
     * @targetRemovalDate 2025-04-01
     */
    origin?: Address;
    /**
     * Currency - Defaults to site's currency
     * @format CURRENCY
     */
    currency: string | null;
    /** Contact details */
    contactDetails?: FullAddressContactDetails;
    /** Measure unit - defaults to site's weight unit */
    weightUnit?: WeightUnit;
    /**
     * list of user preferences which are delivery options codes combined with delivery carrier app id
     * @maxSize 5
     */
    userPreferences?: UserPreference[];
    /**
     * Persistent ID that correlates between the various eCommerce elements: cart, checkout, and order.
     * @format GUID
     */
    purchaseFlowId?: string | null;
    /**
     * Reference to an external resource ID. Used to link the purchase flow to a specific entity in an external system.
     * For example, a Wix Pay Link ID.
     * @maxSize 20
     */
    externalReferences?: ExternalReference[];
}
export interface DeliverableItem {
    /**
     * The ID of the line item.
     * @minLength 1
     * @maxLength 100
     */
    _id?: string;
    /**
     * Item name.
     * @maxLength 400
     */
    name?: string;
    /**
     * The number of items ordered.
     * @max 999999999
     */
    quantity?: number;
    /** Reference to the item's origin catalog. */
    catalogReference?: CatalogReference;
    /** Physical properties of the item. */
    physicalProperties?: PhysicalProperties;
    /**
     * Price of a single item after discounts.
     * @format DECIMAL_VALUE
     * @decimalValue options { gte:0, maxScale:36 }
     */
    price?: string;
    /**
     * Total line item price before discounts.
     * @format DECIMAL_VALUE
     * @decimalValue options { gte:0, maxScale:36 }
     */
    totalPriceBeforeDiscount?: string | null;
    /**
     * Price of a single item before discounts.
     * @format DECIMAL_VALUE
     * @decimalValue options { gte:0, maxScale:36 }
     */
    priceBeforeDiscount?: string | null;
    /**
     * Total line item price after discounts. This is equal to `price` multiplied by `quantity`.
     * @format DECIMAL_VALUE
     * @decimalValue options { gte:0, maxScale:36 }
     */
    totalPrice?: string | null;
    /**
     * For delivery rates by delivery profile id
     * @format GUID
     */
    deliveryProfileId?: string | null;
    /** whether tax is included in line item price */
    taxIncludedInPrice?: boolean | null;
}
/** Used for grouping line items. Sent when an item is added to a cart, checkout, or order. */
export interface CatalogReference {
    /**
     * ID of the item within the catalog it belongs to.
     * @minLength 1
     * @maxLength 36
     */
    catalogItemId?: string;
    /**
     * ID of the app providing the catalog.
     *
     * You can get your app's ID from its page in the [app dashboard](https://dev.wix.com/dc3/my-apps/).
     *
     * For items from Wix catalogs, the following values always apply:
     * + Wix Stores: `"215238eb-22a5-4c36-9e7b-e7c08025e04e"`
     * + Wix Bookings: `"13d21c63-b5ec-5912-8397-c3a5ddb27a97"`
     * + Wix Restaurants: `"9a5d83fd-8570-482e-81ab-cfa88942ee60"`
     * @minLength 1
     */
    appId?: string;
    /**
     * Additional item details in key:value pairs. Use this optional field to provide more specificity with item selection. The `options` field values differ depending on which catalog is providing the items.
     *
     * For products and variants from a Wix Stores catalog, learn more about eCommerce integration ([SDK](https://dev.wix.com/docs/sdk/backend-modules/stores/catalog-v3/e-commerce-integration) | [REST](https://dev.wix.com/docs/rest/business-solutions/stores/catalog/e-commerce-integration)).
     */
    options?: Record<string, any> | null;
}
export interface PhysicalProperties {
    /** Line item weight. Measurement unit matches the weight unit specified in `weightUnit` in the request. */
    weight?: number | null;
    /**
     * Stock-keeping unit. Learn more about [SKUs](https://www.wix.com/encyclopedia/definition/stock-keeping-unit-sku).
     * @maxLength 40
     */
    sku?: string | null;
    /** Whether this line item is shippable. */
    shippable?: boolean;
}
/** Physical address */
export interface Address extends AddressStreetOneOf {
    /** Street name and number. */
    streetAddress?: StreetAddress;
    /** Main address line, usually street and number as free text. */
    addressLine1?: string | null;
    /**
     * Country code.
     * @format COUNTRY
     */
    country?: string | null;
    /** Subdivision. Usually a state, region, prefecture, or province code, according to [ISO 3166-2](https://en.wikipedia.org/wiki/ISO_3166-2). */
    subdivision?: string | null;
    /** City name. */
    city?: string | null;
    /** Zip/postal code. */
    postalCode?: string | null;
    /** Free text providing more detailed address info. Usually contains Apt, Suite, and Floor. */
    addressLine2?: string | null;
}
/** @oneof */
export interface AddressStreetOneOf {
    /** Street name and number. */
    streetAddress?: StreetAddress;
    /** Main address line, usually street and number as free text. */
    addressLine?: string | null;
}
export interface StreetAddress {
    /** Street number. */
    number?: string;
    /** Street name. */
    name?: string;
}
export interface AddressLocation {
    /** Address latitude. */
    latitude?: number | null;
    /** Address longitude. */
    longitude?: number | null;
}
export interface Subdivision {
    /** Short subdivision code. */
    code?: string;
    /** Subdivision full name. */
    name?: string;
}
export declare enum SubdivisionType {
    UNKNOWN_SUBDIVISION_TYPE = "UNKNOWN_SUBDIVISION_TYPE",
    /** State */
    ADMINISTRATIVE_AREA_LEVEL_1 = "ADMINISTRATIVE_AREA_LEVEL_1",
    /** County */
    ADMINISTRATIVE_AREA_LEVEL_2 = "ADMINISTRATIVE_AREA_LEVEL_2",
    /** City/town */
    ADMINISTRATIVE_AREA_LEVEL_3 = "ADMINISTRATIVE_AREA_LEVEL_3",
    /** Neighborhood/quarter */
    ADMINISTRATIVE_AREA_LEVEL_4 = "ADMINISTRATIVE_AREA_LEVEL_4",
    /** Street/block */
    ADMINISTRATIVE_AREA_LEVEL_5 = "ADMINISTRATIVE_AREA_LEVEL_5",
    /** ADMINISTRATIVE_AREA_LEVEL_0. Indicates the national political entity, and is typically the highest order type returned by the Geocoder. */
    COUNTRY = "COUNTRY"
}
/** Full contact details for an address */
export interface FullAddressContactDetails {
    /** Contact's first name. */
    firstName?: string | null;
    /** Contact's last name. */
    lastName?: string | null;
    /**
     * Contact's phone number.
     * @format PHONE
     */
    phone?: string | null;
    /** Contact's company name. */
    company?: string | null;
    /**
     * Email associated with the address.
     * @format EMAIL
     */
    email?: string | null;
    /** Tax info. Currently usable only in Brazil. */
    vatId?: VatId;
}
export interface VatId {
    /** Customer's tax ID. */
    _id?: string;
    /**
     * Tax type.
     *
     * Supported values:
     * + `CPF`: for individual tax payers
     * + `CNPJ`: for corporations
     */
    type?: VatType;
}
/** tax info types */
export declare enum VatType {
    UNSPECIFIED = "UNSPECIFIED",
    /** CPF - for individual tax payers. */
    CPF = "CPF",
    /** CNPJ - for corporations */
    CNPJ = "CNPJ"
}
export declare enum WeightUnit {
    /** Weight unit can't be classified due to an error. */
    UNSPECIFIED_WEIGHT_UNIT = "UNSPECIFIED_WEIGHT_UNIT",
    /** Kilograms. */
    KG = "KG",
    /** Pounds. */
    LB = "LB"
}
export interface UserPreference {
    /**
     * The delivery carrier app id
     * @format GUID
     */
    appId?: string | null;
    /**
     * The delivery option code
     * @maxLength 250
     */
    code?: string;
}
export interface ExternalReference {
    /**
     * ID of the app associated with the purchase flow.
     * For example, the Wix Pay Links app ID.
     * @format GUID
     * @immutable
     */
    appId?: string;
    /**
     * Reference to an external resource ID. Used to link the purchase flow to a specific entity in an external system.
     * For example, a Wix Pay Link ID.
     * @minLength 1
     * @maxLength 100
     * @immutable
     */
    resourceId?: string | null;
}
/**
 * Each delivery option has a list of items that can be delivered by it - the chosen one
 * on Errors throw a business error from TC to catch and trigger destination completion
 */
export interface GetDeliverySolutionsResponse {
    /**
     * Delivery Options with their associated items
     * @maxSize 300
     */
    deliverySolutions?: DeliverySolution[];
    /**
     * If a delivery carrier could not calculate rates, the error will be detailed here
     * @maxSize 50
     */
    errors?: DeliveryCarrierError[];
}
export interface DeliverySolution {
    /**
     * Unique code that acts as an ID for a shipping rate. For example, `"usps_std_overnight"`.
     * @maxLength 250
     */
    code?: string;
    /**
     * Delivery rate title. For example, `"USPS Standard Overnight Delivery"`, `"Standard"`, or `"First-Class Package International"`.
     * @maxLength 250
     */
    title?: string;
    /** Delivery logistics. */
    logistics?: DeliveryLogistics;
    /** Delivery cost. */
    cost?: DeliveryCost;
    /**
     * Delivery solution allocations to different delivery carriers and delivery regions
     * @minSize 1
     * @maxSize 300
     */
    deliveryAllocations?: DeliveryAllocation[];
    /** If the delivery solution is a partial and doesn't apply to all items. */
    partial?: boolean | null;
}
export interface DeliveryLogistics {
    /**
     * When the item is expected to be delivered in free text. For example, `"3-5 business days"`.
     * @maxLength 1000
     */
    deliveryTime?: string | null;
    /**
     * Instructions for delivery. For example, for pickup: `"Ensure to come during business hours, and please don't park in the disabled spot"`.
     * @maxLength 1000
     */
    instructions?: string | null;
    /** Pickup details. Should be returned only if order is for pickup. */
    pickupDetails?: PickupDetails;
    /** Date and Time of the delivery option */
    deliveryTimeSlot?: DeliveryTimeSlot;
}
export interface PickupDetails {
    /** Pickup address. */
    address?: Address;
    /**
     * Pickup method.
     *
     * Supported values:
     * + `"STORE_PICKUP"`: When pickup is from the merchant's brick and mortar store.
     * + `"PICKUP_POINT"`: When item is shipped to a specified pickup point.
     */
    pickupMethod?: PickupMethod;
}
export declare enum PickupMethod {
    UNKNOWN_METHOD = "UNKNOWN_METHOD",
    STORE_PICKUP = "STORE_PICKUP",
    PICKUP_POINT = "PICKUP_POINT"
}
export interface DeliveryTimeSlot {
    /** starting time of the delivery time slot */
    from?: Date | null;
    /** ending time of the delivery time slot */
    to?: Date | null;
}
export interface DeliveryCost {
    /**
     * The shipping rate's price. Must align with the [currency's decimal separator](https://en.wikipedia.org/wiki/ISO_4217#Active_codes).
     * @format DECIMAL_VALUE
     * @decimalValue options { gte:0, lte:1000000000000000 }
     */
    price?: string;
    /**
     * Currency of the shipping rate price as a 3-letter [ISO-4217 currency code](https://en.wikipedia.org/wiki/ISO_4217). Must align with the `currency` passed to the function under the `metadata` field.
     * @format CURRENCY
     */
    currency?: string;
    /**
     * Additional costs. For example, a handling fee for packaging fragile items.
     * @maxSize 100
     */
    additionalCharges?: AdditionalCharge[];
}
export interface AdditionalCharge {
    /** Additional charge type. */
    type?: ChargeType;
    /**
     * Description of the additional charge. For example, `"Handling fee of $5 applied for gift wrapping"`.
     * @maxLength 250
     */
    description?: string | null;
    /**
     * Cost of additional charge. For example, `12.5`.
     * @format DECIMAL_VALUE
     * @decimalValue options { gte:0, lte:1000000000000000 }
     */
    price?: string;
}
export declare enum ChargeType {
    HANDLING_FEE = "HANDLING_FEE"
}
export interface DeliveryAllocation {
    /** The delivery option's carrier details, could be multiple if the delivery option is a combination of multiple carriers */
    deliveryCarrier?: Carrier;
    /** The delivery region that are relevant for this delivery solution. */
    deliveryRegion?: Region;
    /** Populated if the delivery solution is a partially supplied by this carrier. */
    applicableLineItems?: ApplicableLineItems;
}
export interface Carrier {
    /**
     * The carrier app id
     * @format GUID
     */
    appId?: string | null;
    /**
     * Unique code that acts as an ID for a shipping rate. For example, `"usps_std_overnight"`.
     * @maxLength 250
     */
    code?: string;
}
export interface Region {
    /**
     * The delivery region id.
     * @format GUID
     */
    _id?: string | null;
    /**
     * The delivery region name.
     * @maxLength 100
     */
    name?: string | null;
}
export interface ApplicableLineItems {
    /**
     * Line items that the delivery solution is for.
     * @maxSize 300
     * @minLength 1
     * @maxLength 100
     */
    lineItemIds?: string[];
}
export interface DeliveryCarrierError {
    /**
     * The carrier app id
     * @format GUID
     */
    appId?: string | null;
    /** The error details */
    errorDetails?: Details;
}
export interface Details extends DetailsKindOneOf {
    applicationError?: ApplicationError;
    validationError?: ValidationError;
    systemError?: SystemError;
    /**
     * deprecated in API's - to enable migration from rendering arbitrary tracing to rest response
     * @deprecated
     */
    tracing?: Record<string, string>;
}
/** @oneof */
export interface DetailsKindOneOf {
    applicationError?: ApplicationError;
    validationError?: ValidationError;
    systemError?: SystemError;
}
export interface ApplicationError {
    /** Error code. */
    code?: string;
    /** Description of the error. */
    description?: string;
    /** Data related to the error. */
    data?: Record<string, any> | null;
}
/**
 * example result:
 * {
 * "fieldViolations": [
 * {
 * "field": "fieldA",
 * "description": "invalid music note. supported notes: [do,re,mi,fa,sol,la,ti]",
 * "violatedRule": "OTHER",
 * "ruleName": "INVALID_NOTE",
 * "data": {
 * "value": "FI"
 * }
 * },
 * {
 * "field": "fieldB",
 * "description": "field value out of range. supported range: [0-20]",
 * "violatedRule": "MAX",
 * "data": {
 * "threshold": 20
 * }
 * },
 * {
 * "field": "fieldC",
 * "description": "invalid phone number. provide a valid phone number of size: [7-12], supported characters: [0-9, +, -, (, )]",
 * "violatedRule": "FORMAT",
 * "data": {
 * "type": "PHONE"
 * }
 * }
 * ]
 * }
 */
export interface ValidationError {
    fieldViolations?: FieldViolation[];
}
export declare enum RuleType {
    VALIDATION = "VALIDATION",
    OTHER = "OTHER",
    MAX = "MAX",
    MIN = "MIN",
    MAX_LENGTH = "MAX_LENGTH",
    MIN_LENGTH = "MIN_LENGTH",
    MAX_SIZE = "MAX_SIZE",
    MIN_SIZE = "MIN_SIZE",
    FORMAT = "FORMAT",
    DECIMAL_LTE = "DECIMAL_LTE",
    DECIMAL_GTE = "DECIMAL_GTE",
    DECIMAL_LT = "DECIMAL_LT",
    DECIMAL_GT = "DECIMAL_GT",
    DECIMAL_MAX_SCALE = "DECIMAL_MAX_SCALE",
    INVALID_ENUM_VALUE = "INVALID_ENUM_VALUE",
    REQUIRED_FIELD = "REQUIRED_FIELD",
    FIELD_NOT_ALLOWED = "FIELD_NOT_ALLOWED",
    ONE_OF_ALIGNMENT = "ONE_OF_ALIGNMENT",
    EXACT_LENGTH = "EXACT_LENGTH",
    EXACT_SIZE = "EXACT_SIZE",
    REQUIRED_ONE_OF_FIELD = "REQUIRED_ONE_OF_FIELD"
}
export interface FieldViolation {
    field?: string;
    description?: string;
    violatedRule?: RuleType;
    /** applicable when violated_rule=OTHER */
    ruleName?: string | null;
    data?: Record<string, any> | null;
}
export interface SystemError {
    /** Error code. */
    errorCode?: string | null;
}
/**
 * Get Delivery Solutions for the given line items from all relevant delivery carriers
 * @param lineItems - list of items to delivery that each of them points to delivery profile and delivery rule.
 * @public
 * @documentationMaturity preview
 * @requiredField lineItems
 * @requiredField options.currency
 * @requiredField options.destination
 * @requiredField options.destination.country
 * @permissionId ECOM.DELIVERY_SOLUTION_READ
 * @applicableIdentity VISITOR
 * @returns Each delivery option has a list of items that can be delivered by it - the chosen one
 * on Errors throw a business error from TC to catch and trigger destination completion
 * @fqn wix.ecom.deliveryprofile.v1.DeliveryRates.GetDeliverySolutions
 */
export declare function getDeliverySolutions(lineItems: DeliverableItem[], options?: NonNullablePaths<GetDeliverySolutionsOptions, `currency` | `destination` | `destination.country`>): Promise<NonNullablePaths<GetDeliverySolutionsResponse, `deliverySolutions` | `deliverySolutions.${number}.code` | `deliverySolutions.${number}.title` | `deliverySolutions.${number}.logistics.pickupDetails.address.streetAddress.number` | `deliverySolutions.${number}.logistics.pickupDetails.address.streetAddress.name` | `deliverySolutions.${number}.logistics.pickupDetails.pickupMethod` | `deliverySolutions.${number}.cost.price` | `deliverySolutions.${number}.cost.currency` | `errors` | `errors.${number}.errorDetails.applicationError.code` | `errors.${number}.errorDetails.applicationError.description`>>;
export interface GetDeliverySolutionsOptions {
    /** Destination the items should deliver to */
    destination: Address;
    /**
     * Origin the items should deliver from
     * @deprecated Origin the items should deliver from
     * @targetRemovalDate 2025-04-01
     */
    origin?: Address;
    /**
     * Currency - Defaults to site's currency
     * @format CURRENCY
     */
    currency: string | null;
    /** Contact details */
    contactDetails?: FullAddressContactDetails;
    /** Measure unit - defaults to site's weight unit */
    weightUnit?: WeightUnit;
    /**
     * list of user preferences which are delivery options codes combined with delivery carrier app id
     * @maxSize 5
     */
    userPreferences?: UserPreference[];
    /**
     * Persistent ID that correlates between the various eCommerce elements: cart, checkout, and order.
     * @format GUID
     */
    purchaseFlowId?: string | null;
    /**
     * Reference to an external resource ID. Used to link the purchase flow to a specific entity in an external system.
     * For example, a Wix Pay Link ID.
     * @maxSize 20
     */
    externalReferences?: ExternalReference[];
}
