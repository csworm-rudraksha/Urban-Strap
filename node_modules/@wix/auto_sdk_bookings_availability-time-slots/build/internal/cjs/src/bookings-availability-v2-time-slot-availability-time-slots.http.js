"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getAvailabilityTimeSlot = exports.listAvailabilityTimeSlots = void 0;
const timestamp_1 = require("@wix/sdk-runtime/transformations/timestamp");
const timestamp_2 = require("@wix/sdk-runtime/transformations/timestamp");
const transform_paths_1 = require("@wix/sdk-runtime/transformations/transform-paths");
const rest_modules_1 = require("@wix/sdk-runtime/rest-modules");
function resolveComWixpressBookingsAvailabilityV2AvailabilityTimeSlotsUrl(opts) {
    const domainToMappings = {
        'www.wixapis.com': [
            {
                srcPath: '/_api/service-availability/v2/time-slots',
                destPath: '/v2/time-slots',
            },
            {
                srcPath: '/_api/service-availability/v2/multi-service-time-slots',
                destPath: '/v2/multi-service-time-slots',
            },
            {
                srcPath: '/service-availability/v2/time-slots',
                destPath: '/v2/time-slots',
            },
            {
                srcPath: '/service-availability/v2/multi-service-time-slots',
                destPath: '/v2/multi-service-time-slots',
            },
        ],
        '*.dev.wix-code.com': [
            {
                srcPath: '/_api/service-availability/v2/time-slots',
                destPath: '/v2/time-slots',
            },
            {
                srcPath: '/_api/service-availability/v2/multi-service-time-slots',
                destPath: '/v2/multi-service-time-slots',
            },
            {
                srcPath: '/service-availability/v2/time-slots',
                destPath: '/v2/time-slots',
            },
            {
                srcPath: '/service-availability/v2/multi-service-time-slots',
                destPath: '/v2/multi-service-time-slots',
            },
        ],
        'manage._base_domain_': [
            {
                srcPath: '/_api/service-availability/v2/time-slots',
                destPath: '/v2/time-slots',
            },
            {
                srcPath: '/_api/service-availability/v2/multi-service-time-slots',
                destPath: '/v2/multi-service-time-slots',
            },
            {
                srcPath: '/service-availability/v2/multi-service-time-slots',
                destPath: '/v2/multi-service-time-slots',
            },
            {
                srcPath: '/service-availability/v2/time-slots',
                destPath: '/v2/time-slots',
            },
        ],
        'www._base_domain_': [
            {
                srcPath: '/_api/service-availability/v2/time-slots',
                destPath: '/v2/time-slots',
            },
            {
                srcPath: '/_api/service-availability/v2/multi-service-time-slots',
                destPath: '/v2/multi-service-time-slots',
            },
        ],
        _: [
            {
                srcPath: '/_api/service-availability/v2/time-slots',
                destPath: '/v2/time-slots',
            },
            {
                srcPath: '/_api/service-availability/v2/multi-service-time-slots',
                destPath: '/v2/multi-service-time-slots',
            },
        ],
        'editor._base_domain_': [
            {
                srcPath: '/_api/service-availability/v2/multi-service-time-slots',
                destPath: '/v2/multi-service-time-slots',
            },
            {
                srcPath: '/_api/service-availability/v2/time-slots',
                destPath: '/v2/time-slots',
            },
        ],
        'blocks._base_domain_': [
            {
                srcPath: '/_api/service-availability/v2/multi-service-time-slots',
                destPath: '/v2/multi-service-time-slots',
            },
            {
                srcPath: '/_api/service-availability/v2/time-slots',
                destPath: '/v2/time-slots',
            },
        ],
        'create.editorx': [
            {
                srcPath: '/_api/service-availability/v2/multi-service-time-slots',
                destPath: '/v2/multi-service-time-slots',
            },
            {
                srcPath: '/_api/service-availability/v2/time-slots',
                destPath: '/v2/time-slots',
            },
        ],
    };
    return (0, rest_modules_1.resolveUrl)(Object.assign(opts, { domainToMappings }));
}
const PACKAGE_NAME = '@wix/auto_sdk_bookings_availability-time-slots';
/**
 * Retrieves a list of `TimeSlot`s that match the provided filters.
 *
 * <blockquote class="important">
 * <p><strong>Important:</strong>
 * Currently supported only for services of type <code class="grey-background">APPOINTMENT</code>.</p>
 * </blockquote>
 *
 * The request body __must__ include either:
 * + All of the following filters:  `serviceId`, `fromLocalDate`, `toLocalDate`, and `timeZone`.
 * You may add additional filters as you wish.
 * + A `cursorPaging` with a valid `cursor` from previous response.
 *
 *
 * Each [TimeSlot](https://bo.wix.com/wix-docs/rest/all-apis/wix-service-availability/availability-time-slots/time-slot-object) in response
 * represents the availability of the service in a specific location,
 * and has a `localStartDate` within the range of the provided `fromLocalDate` and `toLocalDate` exclusive.
 * The `localEndDate` of a `TimeSlot` is calculated as the sum of the `TimeSlot`'s `localStartDate` and the duration of the service.
 *
 * By default,
 * the response contains at most 1000 results.
 * If there are more than 1000 results, we return a `cursorPagingMetadata` with
 * a cursor for the next page of results, regardless of whether a `cursorPaging`
 * was provided in request.
 *
 * ### AvailableResources in response
 * The `TimeSlot`'s `AvailableResources` contains information about the resources that are available to provide the service
 * within the time slot. Each `AvailableResources` contains information about available resources of the same type.
 *
 * <blockquote class="important">
 * <p><strong>Important:</strong><br/>
 * By default,
 * if you don't specify <code class="grey-background">includeResourceTypeIds</code>
 * or <code class="grey-background">resourceIds</code> filters in request,
 * we return TimeSlots with an empty <code class="grey-background">AvailableResources</code>.
 * <br/><strong>Note:</strong><br/> Not specifying resources filters can be handy in case you want to avoid large response in flows that only
 * interested of whether the time slots are available. [Finding the next available slot within the next 3 months](https://bo.wix.com/wix-docs/rest/all-apis/service-availability/availability-time-slots/sample-flows?localViewerId=inbari#all-apis_service-availability_availability-time-slots_sample-flows_find-the-first-date-within-the-next-3-months-that-the-selected-service-is-available-for)
 * is an example for such flow.
 * </p>
 * </blockquote>
 *
 * If you wish to get a list of available resources for each `TimeSlot` you should either:
 * + provide `resourceIds` in request.
 * + provide `includeResourceTypeIds` in request.
 *
 * __Notes:__
 * + In both cases the returned TimeSlots contains  __up__ to 10 `AvailableResources` that match the provided filters.
 * Each `AvailableResources` contains __up__ to 10 available `resources` of the same type that match the provided filters.
 * + If an `AvailableResources` has more available resources which are not listed within it,
 * we return `AvailableResources`.`hasMoreAvailableResources` as true.
 * > __Note:__
 * > If you wish to get the full available resources list for a specific `TimeSlot`,
 * > you should call [GetAvailabilityTimeSlot](https://bo.wix.com/wix-docs/rest/all-apis/wix-service-availability/service-availability-time-slots/get-availability-time-slot).
 *
 *
 * ### Availability VS Bookability
 * An `available` time slot is not necessarily `bookable`.
 * The `bookable` field of a `TimeSlot` indicates whether a customer can book the service within the given time slot,
 * at a specific period of time.
 * Read more about [Availability VS Bookability](https://bo.wix.com/wix-docs/rest/all-apis/wix-service-availability/service-availability-time-slots/introduction#all-apis_wix-service-availability_service-availability-time-slots_introduction_availability-vs-bookability).
 *
 * By default,
 * + The response does not contains `unavailable` TimeSlots.
 * For example,
 * if there are no available resources to provide the service from `2024-01-30T14:30:00` to `2024-01-30T15:30:00`,
 * we don't return TimeSlots with `localStartDate` within this range.
 * + The response contains both `bookable` and `un-bookable` TimeSlots.
 * For example,
 * if the service has a booking policy which enforces booking the service up to 10 minutes before the session starts,
 * we return TimeSlots with the violating `localStartDate` with `bookable` as false.
 * If you wish to list only available __bookable__ TimeSlots you should pass `bookable` filter as true.
 *
 * <blockquote class="important">
 * <p><strong>Important:</strong>
 * Because of DST, there are edge cases where certain times either do not exist or exist twice for a local time zone.
 * Read more about <a href="https://bo.wix.com/wix-docs/rest/all-apis/service-availability/availability-time-slots/introduction?localViewerId=inbari#all-apis_service-availability_availability-time-slots_introduction_daylight-saving-time-dst-handling">DST Handling</a></p>
 * </blockquote>
 *
 *
 * ### ListAvailabilityTimeSlots runs with the following defaults
 * + `localStartDate` is sorted in `ASC` order
 * + `cursorPaging`.`limit` is `1000`
 */
function listAvailabilityTimeSlots(payload) {
    function __listAvailabilityTimeSlots({ host }) {
        const serializedData = (0, transform_paths_1.transformPaths)(payload, [
            {
                transformFn: timestamp_1.transformSDKTimestampToRESTTimestamp,
                paths: [{ path: 'bookingPolicyViolations.earliestBookingDate' }],
            },
        ]);
        const metadata = {
            entityFqdn: 'wix.bookings.availability.v2.time_slot',
            method: 'POST',
            methodFqn: 'com.wixpress.bookings.availability.v2.AvailabilityTimeSlots.ListAvailabilityTimeSlots',
            packageName: PACKAGE_NAME,
            url: resolveComWixpressBookingsAvailabilityV2AvailabilityTimeSlotsUrl({
                protoPath: '/v2/time-slots',
                data: serializedData,
                host,
            }),
            data: serializedData,
            transformResponse: (payload) => (0, transform_paths_1.transformPaths)(payload, [
                {
                    transformFn: timestamp_2.transformRESTTimestampToSDKTimestamp,
                    paths: [
                        { path: 'timeSlots.bookingPolicyViolations.earliestBookingDate' },
                    ],
                },
            ]),
        };
        return metadata;
    }
    return __listAvailabilityTimeSlots;
}
exports.listAvailabilityTimeSlots = listAvailabilityTimeSlots;
/**
 * Retrieves an available `TimeSlot` that match the provided filters.
 *
 * Throws `SlotNotFound` if there is no such available time slot.
 *
 * <blockquote class="important">
 * <p><strong>Important:</strong><br/>
 * Currently supported only for services of type <code class="grey-background">APPOINTMENT</code>.</p>
 * </blockquote>
 *
 * By default,
 * if you don't provide `includeResourceTypeIds` or `resourceIds` in request,
 * we return all `AvailableResources` with all `AvailableResources`.`resources` which are available to provide
 * the service within the time slot.
 *
 * If you specify `includeResourceTypeIds` or `resourceIds` in request,
 * the returned `TimeSlot` will contain only `AvailableResources` with at least one available resource
 * which match the given resources filters,
 * each contains all available resources out of those requested.
 *
 *
 * <blockquote class="tip">
 * <p><strong>Tip:</strong><br/>
 * Use this API in order to get the availability of a specific <code class="grey-background">TimeSlot</code> out of those returned from  <code class="grey-background">ListAvailabilityTimeSlots</code> API.</p>
 * </blockquote>
 */
function getAvailabilityTimeSlot(payload) {
    function __getAvailabilityTimeSlot({ host }) {
        const metadata = {
            entityFqdn: 'wix.bookings.availability.v2.time_slot',
            method: 'POST',
            methodFqn: 'com.wixpress.bookings.availability.v2.AvailabilityTimeSlots.GetAvailabilityTimeSlot',
            packageName: PACKAGE_NAME,
            url: resolveComWixpressBookingsAvailabilityV2AvailabilityTimeSlotsUrl({
                protoPath: '/v2/time-slots/get',
                data: payload,
                host,
            }),
            data: payload,
            transformResponse: (payload) => (0, transform_paths_1.transformPaths)(payload, [
                {
                    transformFn: timestamp_2.transformRESTTimestampToSDKTimestamp,
                    paths: [
                        { path: 'timeSlot.bookingPolicyViolations.earliestBookingDate' },
                    ],
                },
            ]),
        };
        return metadata;
    }
    return __getAvailabilityTimeSlot;
}
exports.getAvailabilityTimeSlot = getAvailabilityTimeSlot;
//# sourceMappingURL=bookings-availability-v2-time-slot-availability-time-slots.http.js.map