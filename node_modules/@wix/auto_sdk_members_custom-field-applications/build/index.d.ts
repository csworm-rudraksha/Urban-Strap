import { HttpClient, MaybeContext, BuildRESTFunction } from '@wix/sdk-types';
import { C as CustomFieldApplication, U as UpdateCustomFieldApplication, G as GetCustomFieldApplicationResponse, a as GetCustomFieldApplicationsResponse, b as GetMembersCustomFieldApplicationsResponse, c as GetRolesCustomFieldApplicationsResponse } from './members-v1-custom-field-application-custom-field-applications.universal-C9A9KNnP.js';
export { z as ActionEvent, e as ApplicationsWrapper, f as AppliesTo, A as AppliesToAppliesTo, i as CreateCustomFieldApplicationRequest, j as CreateCustomFieldApplicationResponse, r as CustomField, D as DeleteCustomFieldApplicationRequest, k as DeleteCustomFieldApplicationResponse, t as DomainEvent, u as DomainEventBodyOneOf, B as Empty, v as EntityCreatedEvent, y as EntityDeletedEvent, x as EntityUpdatedEvent, h as Exclusion, E as ExclusionType, g as ExclusionsWrapper, q as FieldApplication, F as FieldTypeType, n as GetCustomFieldApplicationRequest, o as GetCustomFieldApplicationsRequest, p as GetMembersCustomFieldApplicationsRequest, s as GetRolesCustomFieldApplicationsRequest, I as IdentificationData, J as IdentificationDataIdOneOf, M as MemberCustomFieldApplication, H as MessageEnvelope, O as Origin, P as Privacy, w as RestoreInfo, R as RoleCustomFieldApplication, d as Section, S as SocialTypeType, T as Type, l as UpdateCustomFieldApplicationRequest, m as UpdateCustomFieldApplicationResponse, W as WebhookIdentityType } from './members-v1-custom-field-application-custom-field-applications.universal-C9A9KNnP.js';

declare function createCustomFieldApplication$1(httpClient: HttpClient): CreateCustomFieldApplicationSignature;
interface CreateCustomFieldApplicationSignature {
    /**
     * Creates a custom field application.
     * @param - Custom field application details.
     * @returns The created custom field application.
     */
    (application: CustomFieldApplication): Promise<CustomFieldApplication>;
}
declare function deleteCustomFieldApplication$1(httpClient: HttpClient): DeleteCustomFieldApplicationSignature;
interface DeleteCustomFieldApplicationSignature {
    /**
     * Deletes a custom field application.
     *
     * When you delete the application, the field is automatically applied to all members.
     * @param - ID of the custom field with an application to delete.
     */
    (customFieldId: string): Promise<void>;
}
declare function updateCustomFieldApplication$1(httpClient: HttpClient): UpdateCustomFieldApplicationSignature;
interface UpdateCustomFieldApplicationSignature {
    /**
     * Updates a custom field application.
     *
     * Partial updates are not supported. Pass the whole `application` object in the request.
     * @param - Custom field ID.
     * @returns Updated custom field application.
     */
    (customFieldId: string, application: UpdateCustomFieldApplication): Promise<CustomFieldApplication>;
}
declare function getCustomFieldApplication$1(httpClient: HttpClient): GetCustomFieldApplicationSignature;
interface GetCustomFieldApplicationSignature {
    /**
     * Retrieves a custom field application.
     * @param - ID of the custom field with an application to retrieve.
     */
    (customFieldId: string): Promise<GetCustomFieldApplicationResponse>;
}
declare function getCustomFieldApplications$1(httpClient: HttpClient): GetCustomFieldApplicationsSignature;
interface GetCustomFieldApplicationsSignature {
    /**
     * Retrieves a list of custom field applications.
     * @param - List of IDs of the custom fields with applications to retrieve.
     */
    (customFieldIds: string[]): Promise<GetCustomFieldApplicationsResponse>;
}
declare function getMembersCustomFieldApplications$1(httpClient: HttpClient): GetMembersCustomFieldApplicationsSignature;
interface GetMembersCustomFieldApplicationsSignature {
    /**
     * Retrieves a list of fields that are applied to specified members.
     * @param - IDs of members with custom field applications to retrieve.
     */
    (memberIds: string[]): Promise<GetMembersCustomFieldApplicationsResponse>;
}
declare function getRolesCustomFieldApplications$1(httpClient: HttpClient): GetRolesCustomFieldApplicationsSignature;
interface GetRolesCustomFieldApplicationsSignature {
    /**
     * Retrieves a list of fields that are applied to specified roles.
     * @param - IDs of roles with custom field applications to retrieve.
     */
    (roleIds: string[]): Promise<GetRolesCustomFieldApplicationsResponse>;
}

declare const createCustomFieldApplication: MaybeContext<BuildRESTFunction<typeof createCustomFieldApplication$1> & typeof createCustomFieldApplication$1>;
declare const deleteCustomFieldApplication: MaybeContext<BuildRESTFunction<typeof deleteCustomFieldApplication$1> & typeof deleteCustomFieldApplication$1>;
declare const updateCustomFieldApplication: MaybeContext<BuildRESTFunction<typeof updateCustomFieldApplication$1> & typeof updateCustomFieldApplication$1>;
declare const getCustomFieldApplication: MaybeContext<BuildRESTFunction<typeof getCustomFieldApplication$1> & typeof getCustomFieldApplication$1>;
declare const getCustomFieldApplications: MaybeContext<BuildRESTFunction<typeof getCustomFieldApplications$1> & typeof getCustomFieldApplications$1>;
declare const getMembersCustomFieldApplications: MaybeContext<BuildRESTFunction<typeof getMembersCustomFieldApplications$1> & typeof getMembersCustomFieldApplications$1>;
declare const getRolesCustomFieldApplications: MaybeContext<BuildRESTFunction<typeof getRolesCustomFieldApplications$1> & typeof getRolesCustomFieldApplications$1>;

export { CustomFieldApplication, GetCustomFieldApplicationResponse, GetCustomFieldApplicationsResponse, GetMembersCustomFieldApplicationsResponse, GetRolesCustomFieldApplicationsResponse, UpdateCustomFieldApplication, createCustomFieldApplication, deleteCustomFieldApplication, getCustomFieldApplication, getCustomFieldApplications, getMembersCustomFieldApplications, getRolesCustomFieldApplications, updateCustomFieldApplication };
