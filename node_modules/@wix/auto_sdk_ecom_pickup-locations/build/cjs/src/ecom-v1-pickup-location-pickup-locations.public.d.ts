import { HttpClient } from '@wix/sdk-types';
import { AddDeliveryRegionOptions, AddDeliveryRegionResponse, BulkCreatePickupLocationResponse, BulkDeletePickupLocationResponse, BulkUpdatePickupLocationResponse, PickupLocation, PickupLocationsQueryBuilder, RemoveDeliveryRegionOptions, RemoveDeliveryRegionResponse, UpdatePickupLocation } from './ecom-v1-pickup-location-pickup-locations.universal.js';
export declare const __metadata: {
    PACKAGE_NAME: string;
};
export declare function createPickupLocation(httpClient: HttpClient): CreatePickupLocationSignature;
interface CreatePickupLocationSignature {
    /**
     * Creates a new PickupLocation
     * @param - PickupLocation to be created
     * @returns The created PickupLocation
     */
    (pickupLocation: PickupLocation): Promise<PickupLocation>;
}
export declare function getPickupLocation(httpClient: HttpClient): GetPickupLocationSignature;
interface GetPickupLocationSignature {
    /**
     * Get a PickupLocation by id
     * @param - Id of the PickupLocation to retrieve
     * @returns The retrieved PickupLocation
     */
    (pickupLocationId: string): Promise<PickupLocation>;
}
export declare function updatePickupLocation(httpClient: HttpClient): UpdatePickupLocationSignature;
interface UpdatePickupLocationSignature {
    /**
     * Update a PickupLocation
     * Delivery regions cannot be updated using this method, use AddDeliveryRegion and RemoveDeliveryRegion instead.
     * @param - PickupLocation ID
     * @returns The updated PickupLocation
     */
    (_id: string, pickupLocation: UpdatePickupLocation): Promise<PickupLocation>;
}
export declare function deletePickupLocation(httpClient: HttpClient): DeletePickupLocationSignature;
interface DeletePickupLocationSignature {
    /**
     * Delete a PickupLocation
     * @param - Id of the PickupLocation to delete
     */
    (pickupLocationId: string): Promise<void>;
}
export declare function queryPickupLocation(httpClient: HttpClient): QueryPickupLocationSignature;
interface QueryPickupLocationSignature {
    /**
     * Query PickupLocations using [WQL - Wix Query Language](https://dev.wix.com/api/rest/getting-started/api-query-language)
     */
    (): PickupLocationsQueryBuilder;
}
export declare function addDeliveryRegion(httpClient: HttpClient): AddDeliveryRegionSignature;
interface AddDeliveryRegionSignature {
    /**
     * Add a DeliveryRegion to a PickupLocation
     * @param - Id of the PickupLocation to add to the delivery region
     * @param - Id of the DeliveryRegion to add the PickupLocation to
     */
    (pickupLocationId: string, deliveryRegionId: string, options: AddDeliveryRegionOptions): Promise<AddDeliveryRegionResponse>;
}
export declare function removeDeliveryRegion(httpClient: HttpClient): RemoveDeliveryRegionSignature;
interface RemoveDeliveryRegionSignature {
    /**
     * Remove a DeliveryRegion from a PickupLocation
     * @param - Id of the PickupLocation to add to the delivery region
     * @param - Id of the DeliveryRegion to add the PickupLocation to
     */
    (pickupLocationId: string, deliveryRegionId: string, options: RemoveDeliveryRegionOptions): Promise<RemoveDeliveryRegionResponse>;
}
export declare function bulkCreatePickupLocation(httpClient: HttpClient): BulkCreatePickupLocationSignature;
interface BulkCreatePickupLocationSignature {
    /**
     * Bulk Create for new PickupLocation
     */
    (pickupLocations: PickupLocation[]): Promise<BulkCreatePickupLocationResponse>;
}
export declare function bulkUpdatePickupLocation(httpClient: HttpClient): BulkUpdatePickupLocationSignature;
interface BulkUpdatePickupLocationSignature {
    /**
     * Update a PickupLocation
     */
    (pickupLocations: PickupLocation[]): Promise<BulkUpdatePickupLocationResponse>;
}
export declare function bulkDeletePickupLocation(httpClient: HttpClient): BulkDeletePickupLocationSignature;
interface BulkDeletePickupLocationSignature {
    /**
     * Delete a PickupLocation
     */
    (pickupLocationIds: string[]): Promise<BulkDeletePickupLocationResponse>;
}
export { ActionEvent, AddDeliveryRegionOptions, AddDeliveryRegionRequest, AddDeliveryRegionResponse, Address, AddressStreetOneOf, ApplicationError, BulkCreatePickupLocationRequest, BulkCreatePickupLocationResponse, BulkDeletePickupLocationRequest, BulkDeletePickupLocationResponse, BulkUpdatePickupLocationRequest, BulkUpdatePickupLocationResponse, Condition, ConditionType, ConditionalRates, CreatePickupLocationRequest, CreatePickupLocationResponse, CursorPaging, CursorPagingMetadata, Cursors, DeletePickupLocationRequest, DeletePickupLocationResponse, DiffmatokyPayload, DomainEvent, DomainEventBodyOneOf, Empty, EntityCreatedEvent, EntityDeletedEvent, EntityUpdatedEvent, ErrorInformation, GetPickupLocationRequest, GetPickupLocationResponse, IdentificationData, IdentificationDataIdOneOf, LogicalOperator, MessageEnvelope, Paging, PickupLocation, PickupLocationError, PickupLocationsQueryBuilder, PickupLocationsQueryResult, QueryPickupLocationRequest, QueryPickupLocationResponse, QueryV2, QueryV2PagingMethodOneOf, RemoveDeliveryRegionOptions, RemoveDeliveryRegionRequest, RemoveDeliveryRegionResponse, RestoreInfo, SortOrder, Sorting, StreetAddress, UpdatePickupLocation, UpdatePickupLocationRequest, UpdatePickupLocationResponse, WebhookIdentityType, } from './ecom-v1-pickup-location-pickup-locations.universal.js';
