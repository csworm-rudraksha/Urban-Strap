import { EventDefinition, HttpClient } from '@wix/sdk-types';
import { CountResourceTypesOptions, CountResourceTypesResponse, CountResourceTypesResponseNonNullableFields, QueryResourceTypesOptions, ResourceType, ResourceTypeCreatedEnvelope, ResourceTypeDeletedEnvelope, ResourceTypeNonNullableFields, ResourceTypeUpdatedEnvelope, ResourceTypesQueryBuilder, UpdateResourceType } from './bookings-resources-v2-resource-type-resource-types.universal.js';
export declare const __metadata: {
    PACKAGE_NAME: string;
};
export declare function createResourceType(httpClient: HttpClient): CreateResourceTypeSignature;
interface CreateResourceTypeSignature {
    /**
     * Creates a new resource type.
     * @param - Resource type to create.
     * @returns Created resource type.
     */
    (resourceType: ResourceType): Promise<ResourceType & ResourceTypeNonNullableFields>;
}
export declare function getResourceType(httpClient: HttpClient): GetResourceTypeSignature;
interface GetResourceTypeSignature {
    /**
     * Retrieves a resource type.
     * @param - ID of the resource type to retrieve.
     * @returns Retrieved resource type.
     */
    (resourceTypeId: string): Promise<ResourceType & ResourceTypeNonNullableFields>;
}
export declare function updateResourceType(httpClient: HttpClient): UpdateResourceTypeSignature;
interface UpdateResourceTypeSignature {
    /**
     * Updates a resource type.
     *
     *
     * Each time the resource type is updated, `revision` increments by 1. You must
     * include current revision of the resource type when updating it. This ensures
     * you're working with the latest service information and prevents unintended overwrites.
     * @param - Resource type ID.
     * @returns Updated resource type.
     */
    (_id: string | null, resourceType: UpdateResourceType): Promise<ResourceType & ResourceTypeNonNullableFields>;
}
export declare function deleteResourceType(httpClient: HttpClient): DeleteResourceTypeSignature;
interface DeleteResourceTypeSignature {
    /**
     * Deletes a resource type.
     *
     *
     * Deleting a resource type also automatically deletes all resources connected to it.
     * @param - ID of the resource type to delete.
     */
    (resourceTypeId: string): Promise<void>;
}
export declare function queryResourceTypes(httpClient: HttpClient): QueryResourceTypesSignature;
interface QueryResourceTypesSignature {
    /**
     * Creates a query to retrieve a list of resource types.
     *
     * The `queryResourceTypes()` function builds a query to retrieve a list of resource types and returns a `ResourceTypesQueryBuilder` object.
     *
     * The returned object contains the query definition, which is typically used to run the query using the [find()](https://dev.wix.com/docs/sdk/backend-modules/bookings/resource-types/resource-types-query-builder/find) function.
     *
     * You can refine the query by chaining `ResourceTypesQueryBuilder` functions onto the query. `ResourceTypesQueryBuilder` functions enable you to sort, filter, and control the results that `queryResourceTypes()` returns.
     *
     * `queryResourceTypes()` runs with the following `ResourceTypesQueryBuilder` default that you can override:
     *
     * + `limit` is `50`.
     * + Sorted by `id` in ascending order.
     *
     * The functions that are chained to `queryResourceTypes()` are applied in the order they are called.
     *
     * The following `ResourceTypesQueryBuilder` functions are supported for the `queryResourceTypes()` function. For a full description of the resource object, see the object returned for the [items](https://dev.wix.com/docs/sdk/backend-modules/bookings/resource-types/resource-types-query-result/items) property in `ResourceTypesQueryResult`.
     */
    (options?: QueryResourceTypesOptions | undefined): ResourceTypesQueryBuilder;
}
export declare function countResourceTypes(httpClient: HttpClient): CountResourceTypesSignature;
interface CountResourceTypesSignature {
    /**
     * Counts resource types, given the provided filtering.
     *
     *
     * Refer to the *supported filters article*
     * ([SDK](https://dev.wix.com/docs/sdk/backend-modules/bookings/resources/supported-filters) | [REST](https://dev.wix.com/docs/rest/business-solutions/bookings/resources/resources-v2/filtering-and-sorting))
     * for a complete list of supported filters.
     * @param - Filter to base the count on. See
     * [queryResourceTypes()](https://dev.wix.com/docs/sdk/backend-modules/bookings/resource-types/query-resource-types)
     * for supported filters.
     */
    (options?: CountResourceTypesOptions | undefined): Promise<CountResourceTypesResponse & CountResourceTypesResponseNonNullableFields>;
}
export declare const onResourceTypeCreated: EventDefinition<ResourceTypeCreatedEnvelope, "wix.bookings.resources.v2.resource_type_created">;
export declare const onResourceTypeDeleted: EventDefinition<ResourceTypeDeletedEnvelope, "wix.bookings.resources.v2.resource_type_deleted">;
export declare const onResourceTypeUpdated: EventDefinition<ResourceTypeUpdatedEnvelope, "wix.bookings.resources.v2.resource_type_updated">;
export { ActionEvent, BaseEventMetadata, BusinessLocation, CountResourceTypesOptions, CountResourceTypesRequest, CountResourceTypesResponse, CountResourceTypesResponseNonNullableFields, CreateResourceTypeErrors, CreateResourceTypeRequest, CreateResourceTypeResponse, CreateResourceTypeResponseNonNullableFields, CursorPaging, CursorPagingMetadata, CursorQuery, CursorQueryPagingMethodOneOf, Cursors, DeleteResourceTypeRequest, DeleteResourceTypeResponse, DistinctLocationIds, DomainEvent, DomainEventBodyOneOf, EntityCreatedEvent, EntityDeletedEvent, EntityUpdatedEvent, EventMetadata, ExtendedFields, GetResourceTypeRequest, GetResourceTypeResponse, GetResourceTypeResponseNonNullableFields, IdentificationData, IdentificationDataIdOneOf, LocationOptions, MessageEnvelope, QueryResourceTypesOptions, QueryResourceTypesRequest, QueryResourceTypesResponse, QueryResourceTypesResponseNonNullableFields, RequestedFields, ResourceCounts, ResourceType, ResourceTypeCreatedEnvelope, ResourceTypeDeletedEnvelope, ResourceTypeNonNullableFields, ResourceTypeUpdatedEnvelope, ResourceTypesQueryBuilder, ResourceTypesQueryResult, RestoreInfo, SortOrder, Sorting, SpecificLocation, UpdateResourceType, UpdateResourceTypeRequest, UpdateResourceTypeResponse, UpdateResourceTypeResponseNonNullableFields, WebhookIdentityType, } from './bookings-resources-v2-resource-type-resource-types.universal.js';
