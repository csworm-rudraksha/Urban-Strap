"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.countResourceTypes = exports.queryResourceTypes = exports.deleteResourceType = exports.updateResourceType = exports.getResourceType = exports.createResourceType = void 0;
const rest_modules_1 = require("@wix/sdk-runtime/rest-modules");
const timestamp_1 = require("@wix/sdk-runtime/transformations/timestamp");
const timestamp_2 = require("@wix/sdk-runtime/transformations/timestamp");
const field_mask_1 = require("@wix/sdk-runtime/transformations/field-mask");
const transform_paths_1 = require("@wix/sdk-runtime/transformations/transform-paths");
const rest_modules_2 = require("@wix/sdk-runtime/rest-modules");
function resolveWixBookingsResourcesV2ResourcetypesResourceTypesServiceUrl(opts) {
    const domainToMappings = {
        'manage._base_domain_': [
            {
                srcPath: '/bookings/v2/resources/resource-types',
                destPath: '/v2/resources/resource-types',
            },
            {
                srcPath: '/_api/bookings/v2/resources/resource-types',
                destPath: '/v2/resources/resource-types',
            },
        ],
        'api._api_base_domain_': [
            {
                srcPath: '/resource-types',
                destPath: '',
            },
        ],
        '*.dev.wix-code.com': [
            {
                srcPath: '/_api/bookings/v2/resources/resource-types',
                destPath: '/v2/resources/resource-types',
            },
        ],
        'www.wixapis.com': [
            {
                srcPath: '/bookings/v2/resources/resource-types',
                destPath: '/v2/resources/resource-types',
            },
        ],
    };
    return (0, rest_modules_2.resolveUrl)(Object.assign(opts, { domainToMappings }));
}
const PACKAGE_NAME = '@wix/auto_sdk_bookings_resource-types';
/** Creates a new resource type. */
function createResourceType(payload) {
    function __createResourceType({ host }) {
        const serializedData = (0, transform_paths_1.transformPaths)(payload, [
            {
                transformFn: timestamp_1.transformSDKTimestampToRESTTimestamp,
                paths: [
                    { path: 'resourceType.createdDate' },
                    { path: 'resourceType.updatedDate' },
                ],
            },
        ]);
        const metadata = {
            entityFqdn: 'wix.bookings.resources.v2.resource_type',
            method: 'POST',
            methodFqn: 'wix.bookings.resources.v2.resourcetypes.ResourceTypesService.CreateResourceType',
            packageName: PACKAGE_NAME,
            url: resolveWixBookingsResourcesV2ResourcetypesResourceTypesServiceUrl({
                protoPath: '/v2/resources/resource-types',
                data: serializedData,
                host,
            }),
            data: serializedData,
            transformResponse: (payload) => (0, transform_paths_1.transformPaths)(payload, [
                {
                    transformFn: timestamp_2.transformRESTTimestampToSDKTimestamp,
                    paths: [
                        { path: 'resourceType.createdDate' },
                        { path: 'resourceType.updatedDate' },
                    ],
                },
            ]),
        };
        return metadata;
    }
    return __createResourceType;
}
exports.createResourceType = createResourceType;
/** Retrieves a resource type. */
function getResourceType(payload) {
    function __getResourceType({ host }) {
        const metadata = {
            entityFqdn: 'wix.bookings.resources.v2.resource_type',
            method: 'GET',
            methodFqn: 'wix.bookings.resources.v2.resourcetypes.ResourceTypesService.GetResourceType',
            packageName: PACKAGE_NAME,
            url: resolveWixBookingsResourcesV2ResourcetypesResourceTypesServiceUrl({
                protoPath: '/v2/resources/resource-types/{resourceTypeId}',
                data: payload,
                host,
            }),
            params: (0, rest_modules_1.toURLSearchParams)(payload),
            transformResponse: (payload) => (0, transform_paths_1.transformPaths)(payload, [
                {
                    transformFn: timestamp_2.transformRESTTimestampToSDKTimestamp,
                    paths: [
                        { path: 'resourceType.createdDate' },
                        { path: 'resourceType.updatedDate' },
                    ],
                },
            ]),
        };
        return metadata;
    }
    return __getResourceType;
}
exports.getResourceType = getResourceType;
/**
 * Updates a resource type.
 *
 *
 * Each time the resource type is updated, `revision` increments by 1. You must
 * include current revision of the resource type when updating it. This ensures
 * you're working with the latest service information and prevents unintended overwrites.
 */
function updateResourceType(payload) {
    function __updateResourceType({ host }) {
        const serializedData = (0, transform_paths_1.transformPaths)(payload, [
            {
                transformFn: field_mask_1.transformSDKFieldMaskToRESTFieldMask,
                paths: [{ path: 'mask' }],
            },
            {
                transformFn: timestamp_1.transformSDKTimestampToRESTTimestamp,
                paths: [
                    { path: 'resourceType.createdDate' },
                    { path: 'resourceType.updatedDate' },
                ],
            },
        ]);
        const metadata = {
            entityFqdn: 'wix.bookings.resources.v2.resource_type',
            method: 'PATCH',
            methodFqn: 'wix.bookings.resources.v2.resourcetypes.ResourceTypesService.UpdateResourceType',
            packageName: PACKAGE_NAME,
            url: resolveWixBookingsResourcesV2ResourcetypesResourceTypesServiceUrl({
                protoPath: '/v2/resources/resource-types/{resourceType.id}',
                data: serializedData,
                host,
            }),
            data: serializedData,
            transformResponse: (payload) => (0, transform_paths_1.transformPaths)(payload, [
                {
                    transformFn: timestamp_2.transformRESTTimestampToSDKTimestamp,
                    paths: [
                        { path: 'resourceType.createdDate' },
                        { path: 'resourceType.updatedDate' },
                    ],
                },
            ]),
        };
        return metadata;
    }
    return __updateResourceType;
}
exports.updateResourceType = updateResourceType;
/**
 * Deletes a resource type.
 *
 *
 * Deleting a resource type also automatically deletes all resources connected to it.
 */
function deleteResourceType(payload) {
    function __deleteResourceType({ host }) {
        const metadata = {
            entityFqdn: 'wix.bookings.resources.v2.resource_type',
            method: 'DELETE',
            methodFqn: 'wix.bookings.resources.v2.resourcetypes.ResourceTypesService.DeleteResourceType',
            packageName: PACKAGE_NAME,
            url: resolveWixBookingsResourcesV2ResourcetypesResourceTypesServiceUrl({
                protoPath: '/v2/resources/resource-types/{resourceTypeId}',
                data: payload,
                host,
            }),
            params: (0, rest_modules_1.toURLSearchParams)(payload),
        };
        return metadata;
    }
    return __deleteResourceType;
}
exports.deleteResourceType = deleteResourceType;
/**
 * Creates a query to retrieve a list of resource types.
 *
 * The `queryResourceTypes()` function builds a query to retrieve a list of resource types and returns a `ResourceTypesQueryBuilder` object.
 *
 * The returned object contains the query definition, which is typically used to run the query using the [find()](https://dev.wix.com/docs/sdk/backend-modules/bookings/resource-types/resource-types-query-builder/find) function.
 *
 * You can refine the query by chaining `ResourceTypesQueryBuilder` functions onto the query. `ResourceTypesQueryBuilder` functions enable you to sort, filter, and control the results that `queryResourceTypes()` returns.
 *
 * `queryResourceTypes()` runs with the following `ResourceTypesQueryBuilder` default that you can override:
 *
 * + `limit` is `50`.
 * + Sorted by `id` in ascending order.
 *
 * The functions that are chained to `queryResourceTypes()` are applied in the order they are called.
 *
 * The following `ResourceTypesQueryBuilder` functions are supported for the `queryResourceTypes()` function. For a full description of the resource object, see the object returned for the [items](https://dev.wix.com/docs/sdk/backend-modules/bookings/resource-types/resource-types-query-result/items) property in `ResourceTypesQueryResult`.
 */
function queryResourceTypes(payload) {
    function __queryResourceTypes({ host }) {
        const metadata = {
            entityFqdn: 'wix.bookings.resources.v2.resource_type',
            method: 'POST',
            methodFqn: 'wix.bookings.resources.v2.resourcetypes.ResourceTypesService.QueryResourceTypes',
            packageName: PACKAGE_NAME,
            url: resolveWixBookingsResourcesV2ResourcetypesResourceTypesServiceUrl({
                protoPath: '/v2/resources/resource-types/query',
                data: payload,
                host,
            }),
            data: payload,
            transformResponse: (payload) => (0, transform_paths_1.transformPaths)(payload, [
                {
                    transformFn: timestamp_2.transformRESTTimestampToSDKTimestamp,
                    paths: [
                        { path: 'resourceTypes.createdDate' },
                        { path: 'resourceTypes.updatedDate' },
                    ],
                },
            ]),
        };
        return metadata;
    }
    return __queryResourceTypes;
}
exports.queryResourceTypes = queryResourceTypes;
/**
 * Counts resource types, given the provided filtering.
 *
 *
 * Refer to the *supported filters article*
 * ([SDK](https://dev.wix.com/docs/sdk/backend-modules/bookings/resources/supported-filters) | [REST](https://dev.wix.com/docs/rest/business-solutions/bookings/resources/resources-v2/filtering-and-sorting))
 * for a complete list of supported filters.
 */
function countResourceTypes(payload) {
    function __countResourceTypes({ host }) {
        const metadata = {
            entityFqdn: 'wix.bookings.resources.v2.resource_type',
            method: 'POST',
            methodFqn: 'wix.bookings.resources.v2.resourcetypes.ResourceTypesService.CountResourceTypes',
            packageName: PACKAGE_NAME,
            url: resolveWixBookingsResourcesV2ResourcetypesResourceTypesServiceUrl({
                protoPath: '/v2/resources/resource-types/count',
                data: payload,
                host,
            }),
            data: payload,
        };
        return metadata;
    }
    return __countResourceTypes;
}
exports.countResourceTypes = countResourceTypes;
//# sourceMappingURL=bookings-resources-v2-resource-type-resource-types.http.js.map