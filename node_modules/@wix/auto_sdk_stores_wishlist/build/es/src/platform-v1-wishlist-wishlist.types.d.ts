export interface WishlistData {
    /**
     * GUID unique to this list for this site
     * @format GUID
     */
    id?: string | null;
    /** Member id the list belongs to */
    ownerId?: string;
    /**
     * List of items in the list. Not necessarily the full list (can depends on request data)
     * @minSize 1
     * @maxSize 100
     */
    items?: WishlistItem[];
    /**
     * Total count of items in the list
     * @min 1
     * @max 100
     */
    totalCount?: number;
}
export interface WishlistItem {
    /** Unique identifier for an item of this type and origin */
    id?: string;
    /**
     * The data the item was save to the list
     * @readonly
     */
    dateAdded?: Date | null;
    /** The type of the item. For example "product" */
    type?: string;
    /** The origin of the item. Should be the scope the item type is related to. For example "wixstores" */
    origin?: string;
}
export interface ItemsAddedToWishlist {
    /**
     * GUID unique to this list for its site
     * @format GUID
     */
    id?: string | null;
    /** Member id the list belongs to */
    ownerId?: string;
    /**
     * List of items that were added to wishlist
     * @minSize 1
     * @maxSize 100
     */
    items?: WishlistItem[];
}
export interface ItemsRemovedFromWishlist {
    /**
     * GUID unique to this list for its site
     * @format GUID
     */
    id?: string | null;
    /** Member id the list belongs to */
    ownerId?: string;
    /**
     * List of items that were removed from wishlist
     * @minSize 1
     * @maxSize 100
     */
    items?: WishlistItem[];
}
export interface GetWishlistRequest {
    /**
     * List length limit. Default is 100
     * @min 1
     * @max 100
     */
    limit?: number | null;
    /**
     * List starting index offset. Default is 0
     * @max 100
     */
    offset?: number | null;
    /** Filter requested list by specific kinds of items */
    kind?: WishlistItemKind[];
}
export interface WishlistItemKind {
    /** The type of the item. For example "product" */
    type?: string;
    /** The origin of the item. Should be the scope the item type is related to. For example "wixstores" */
    origin?: string;
}
export interface GetWishlistResponse {
    /** Object containing requested list data */
    wishlist?: WishlistData;
}
export interface AddToWishlistRequest {
    /**
     * List of items to add to list
     * @minSize 1
     * @maxSize 100
     */
    items?: WishlistItem[];
}
export interface AddToWishlistResponse {
}
export interface RemoveFromWishlistRequest {
    /**
     * List of items to remove from list
     * @minSize 1
     * @maxSize 100
     */
    items?: WishlistItem[];
}
export interface RemoveFromWishlistResponse {
}
export interface GetWishlistByIdRequest {
    /**
     * Unique identifier representing requested list
     * @format GUID
     */
    id: string;
    /**
     * List length limit. Default is 100
     * @min 1
     * @max 100
     */
    limit?: number | null;
    /**
     * List starting index offset. Default is 0
     * @max 100
     */
    offset?: number | null;
    /** Filter requested list by specific kinds of items */
    kind?: WishlistItemKind[];
}
export interface GetWishlistByIdResponse {
    /** Object containing requested list data */
    wishlist?: WishlistData;
}
export interface GetWishlistsRequest {
    /**
     * List length limit. Default is 100
     * @min 1
     * @max 100
     */
    limit?: number | null;
    /**
     * List starting index offset. Default is 0
     * @max 100
     */
    offset?: number | null;
}
export interface GetWishlistsResponse {
    /** List result of requested wishlists */
    wishlists?: WishlistData[];
}
export interface MessageEnvelope {
    /**
     * App instance ID.
     * @format GUID
     */
    instanceId?: string | null;
    /**
     * Event type.
     * @maxLength 150
     */
    eventType?: string;
    /** The identification type and identity data. */
    identity?: IdentificationData;
    /** Stringify payload. */
    data?: string;
}
export interface IdentificationData extends IdentificationDataIdOneOf {
    /**
     * ID of a site visitor that has not logged in to the site.
     * @format GUID
     */
    anonymousVisitorId?: string;
    /**
     * ID of a site visitor that has logged in to the site.
     * @format GUID
     */
    memberId?: string;
    /**
     * ID of a Wix user (site owner, contributor, etc.).
     * @format GUID
     */
    wixUserId?: string;
    /**
     * ID of an app.
     * @format GUID
     */
    appId?: string;
    /** @readonly */
    identityType?: WebhookIdentityType;
}
/** @oneof */
export interface IdentificationDataIdOneOf {
    /**
     * ID of a site visitor that has not logged in to the site.
     * @format GUID
     */
    anonymousVisitorId?: string;
    /**
     * ID of a site visitor that has logged in to the site.
     * @format GUID
     */
    memberId?: string;
    /**
     * ID of a Wix user (site owner, contributor, etc.).
     * @format GUID
     */
    wixUserId?: string;
    /**
     * ID of an app.
     * @format GUID
     */
    appId?: string;
}
export declare enum WebhookIdentityType {
    UNKNOWN = "UNKNOWN",
    ANONYMOUS_VISITOR = "ANONYMOUS_VISITOR",
    MEMBER = "MEMBER",
    WIX_USER = "WIX_USER",
    APP = "APP"
}
interface WishlistItemNonNullableFields {
    id: string;
    type: string;
    origin: string;
}
interface WishlistDataNonNullableFields {
    ownerId: string;
    items: WishlistItemNonNullableFields[];
    totalCount: number;
}
export interface GetWishlistByIdResponseNonNullableFields {
    wishlist?: WishlistDataNonNullableFields;
}
export {};
