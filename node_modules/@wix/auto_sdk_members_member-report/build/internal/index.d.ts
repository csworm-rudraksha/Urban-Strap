import { HttpClient, MaybeContext, BuildRESTFunction } from '@wix/sdk-types';
import { M as MemberReport, R as ReportMemberResponse, a as MemberReportsQueryBuilder, L as ListReportedMembersOptions, b as ListReportedMembersResponse, Q as QueryReportedMembersOptions, c as QueryReportedMembersResponse } from './members-v1-member-report-member-report.universal-BBR1zWhW.js';
export { F as ActionEvent, K as BaseEventMetadata, i as CannotReportBlockedMemberError, C as Category, m as CursorPaging, o as Cursors, D as DeleteMemberReportsRequest, v as DeleteMemberReportsResponse, x as DomainEvent, y as DomainEventBodyOneOf, G as Empty, E as EntityCreatedEvent, B as EntityDeletedEvent, A as EntityUpdatedEvent, N as EventMetadata, I as IdentificationData, J as IdentificationDataIdOneOf, Y as ListReportedMembersOptionsPagingMethodOneOf, r as ListReportedMembersRequest, s as ListReportedMembersRequestPagingMethodOneOf, p as MarkMemberReportsAsReviewedRequest, q as MarkMemberReportsAsReviewedResponse, O as MemberReportCreatedEnvelope, T as MemberReportDeletedEnvelope, U as MemberReportReportedMemberCreatedEnvelope, V as MemberReportReportedMemberDeletedEnvelope, X as MemberReportsQueryResult, H as MessageEnvelope, t as Paging, P as PagingMetadataV2, j as QueryMemberReportsRequest, n as QueryMemberReportsResponse, u as QueryReportedMembersRequest, k as QueryV2, d as Reason, e as ReportMemberRequest, g as ReportedMember, f as ReportedMemberCreated, w as ReportedMemberDeleted, z as RestoreInfo, h as SelfReportingForbiddenError, S as SortOrder, l as Sorting, W as WebhookIdentityType } from './members-v1-member-report-member-report.universal-BBR1zWhW.js';
import { createEventModule } from '@wix/sdk-runtime/event-definition-modules';

declare function reportMember$1(httpClient: HttpClient): ReportMemberSignature;
interface ReportMemberSignature {
    /**
     * Creates a report for the reported member.
     * @param - Details of a member to report.
     */
    (memberReport: MemberReport): Promise<ReportMemberResponse>;
}
declare function queryMemberReports$1(httpClient: HttpClient): QueryMemberReportsSignature;
interface QueryMemberReportsSignature {
    /**
     * Creates a query to retrieve a list of events.
     *
     * The `queryMemberReports()` method builds a query to retrieve a list of member reports and returns a [`MemberReportsQueryBuilder`](https://dev.wix.com/docs/sdk/backend-modules/members/member-report/member-reports-query-builder/eq) object.
     *
     * The returned object contains the query definition, which is typically used to run the query using the [`find()`](https://dev.wix.com/docs/sdk/backend-modules/members/member-report/member-reports-query-builder/find) method.
     *
     * You can refine the query by chaining `MemberReportsQueryBuilder` methods onto the query. `MemberReportsQueryBuilder` methods enable you to sort, filter, and control the results `queryMemberReports()` returns.
     *
     * `queryMemberReports()` runs with these `MemberReportsQueryBuilder` defaults, which you can override:
     *
     * - [limit(50)](https://dev.wix.com/docs/sdk/backend-modules/members/member-report/member-reports-query-builder/limit)
     *
     * The methods that are chained to `queryMemberReports()` are applied in the order they're called. For example, if you apply ascending('status') and then descending('reportedMemberId'), the results are sorted first by the status, and then, if there are multiple results with the same title, the items are sorted by reported member ID.
     */
    (): MemberReportsQueryBuilder;
}
declare function listReportedMembers$1(httpClient: HttpClient): ListReportedMembersSignature;
interface ListReportedMembersSignature {
    /**
     * Retrieves a list of reported members.
     * @deprecated
     */
    (options?: ListReportedMembersOptions | undefined): Promise<ListReportedMembersResponse>;
}
declare function queryReportedMembers$1(httpClient: HttpClient): QueryReportedMembersSignature;
interface QueryReportedMembersSignature {
    /**
     * Retrieves a list of reported members, given the provided paging, filtering, and sorting.
     *
     * Query Reported Members runs with these defaults, which you can override:
     * - `createdDate` is sorted in `ASC` order
     * - `paging.limit` is `100`
     * - `paging.offset` is `0`
     *
     * For field support for filters and sorting, see [Supported Filters and Sorting]().
     * To learn about working with _Query_ endpoints, see [API Query Language](https://dev.wix.com/api/rest/getting-started/api-query-language), [Sorting and Paging](https://dev.wix.com/api/rest/getting-started/pagination), and [Field Projection](https://dev.wix.com/api/rest/getting-started/field-projection).
     * @deprecated
     */
    (options?: QueryReportedMembersOptions | undefined): Promise<QueryReportedMembersResponse>;
}
declare function deleteMemberReports$1(httpClient: HttpClient): DeleteMemberReportsSignature;
interface DeleteMemberReportsSignature {
    /**
     * Deletes all reports of a member.
     * @param - ID of the member whose reports are to be deleted.
     */
    (memberId: string): Promise<void>;
}

declare const reportMember: MaybeContext<BuildRESTFunction<typeof reportMember$1> & typeof reportMember$1>;
declare const queryMemberReports: MaybeContext<BuildRESTFunction<typeof queryMemberReports$1> & typeof queryMemberReports$1>;
declare const listReportedMembers: MaybeContext<BuildRESTFunction<typeof listReportedMembers$1> & typeof listReportedMembers$1>;
declare const queryReportedMembers: MaybeContext<BuildRESTFunction<typeof queryReportedMembers$1> & typeof queryReportedMembers$1>;
declare const deleteMemberReports: MaybeContext<BuildRESTFunction<typeof deleteMemberReports$1> & typeof deleteMemberReports$1>;
/**
 * Triggered when a member is reported.
 */
declare const onMemberReportCreated: ReturnType<typeof createEventModule<typeof publicOnMemberReportCreated>>;
/**
 * Triggered when a report is deleted.
 */
declare const onMemberReportDeleted: ReturnType<typeof createEventModule<typeof publicOnMemberReportDeleted>>;
/** */
declare const onMemberReportReportedMemberCreated: ReturnType<typeof createEventModule<typeof publicOnMemberReportReportedMemberCreated>>;
/** */
declare const onMemberReportReportedMemberDeleted: ReturnType<typeof createEventModule<typeof publicOnMemberReportReportedMemberDeleted>>;

export { ListReportedMembersOptions, ListReportedMembersResponse, MemberReport, MemberReportsQueryBuilder, QueryReportedMembersOptions, QueryReportedMembersResponse, ReportMemberResponse, deleteMemberReports, listReportedMembers, onMemberReportCreated, onMemberReportDeleted, onMemberReportReportedMemberCreated, onMemberReportReportedMemberDeleted, queryMemberReports, queryReportedMembers, reportMember };
