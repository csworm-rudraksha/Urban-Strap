{"version":3,"sources":["../src/members-v1-member-report-member-report.public.ts","../src/members-v1-member-report-member-report.universal.ts","../src/members-v1-member-report-member-report.http.ts","../src/members-v1-member-report-member-report.context.ts"],"sourcesContent":["import { renameKeysFromRESTResponseToSDKResponse } from '@wix/sdk-runtime/rename-all-nested-keys';\nimport { transformRESTTimestampToSDKTimestamp } from '@wix/sdk-runtime/transformations/timestamp';\nimport { transformPaths } from '@wix/sdk-runtime/transformations/transform-paths';\nimport { EventDefinition, HttpClient, NonNullablePaths } from '@wix/sdk-types';\nimport {\n  ListReportedMembersOptions,\n  ListReportedMembersResponse,\n  MemberReport,\n  MemberReportCreatedEnvelope,\n  MemberReportDeletedEnvelope,\n  MemberReportReportedMemberCreatedEnvelope,\n  MemberReportReportedMemberDeletedEnvelope,\n  MemberReportsQueryBuilder,\n  QueryReportedMembersOptions,\n  QueryReportedMembersResponse,\n  ReportMemberResponse,\n  deleteMemberReports as universalDeleteMemberReports,\n  listReportedMembers as universalListReportedMembers,\n  queryMemberReports as universalQueryMemberReports,\n  queryReportedMembers as universalQueryReportedMembers,\n  reportMember as universalReportMember,\n} from './members-v1-member-report-member-report.universal.js';\n\nexport const __metadata = { PACKAGE_NAME: '@wix/members' };\n\nexport function reportMember(httpClient: HttpClient): ReportMemberSignature {\n  return (\n    memberReport: NonNullablePaths<MemberReport, `reason` | `reportedMemberId`>\n  ) =>\n    universalReportMember(\n      memberReport,\n      // @ts-ignore\n      { httpClient }\n    );\n}\n\ninterface ReportMemberSignature {\n  /**\n   * Creates a report for the reported member.\n   * @param - Details of a member to report.\n   */\n  (memberReport: MemberReport): Promise<ReportMemberResponse>;\n}\n\nexport function queryMemberReports(\n  httpClient: HttpClient\n): QueryMemberReportsSignature {\n  return () =>\n    universalQueryMemberReports(\n      // @ts-ignore\n      { httpClient }\n    );\n}\n\ninterface QueryMemberReportsSignature {\n  /**\n   * Creates a query to retrieve a list of events.\n   *\n   * The `queryMemberReports()` method builds a query to retrieve a list of member reports and returns a [`MemberReportsQueryBuilder`](https://dev.wix.com/docs/sdk/backend-modules/members/member-report/member-reports-query-builder/eq) object.\n   *\n   * The returned object contains the query definition, which is typically used to run the query using the [`find()`](https://dev.wix.com/docs/sdk/backend-modules/members/member-report/member-reports-query-builder/find) method.\n   *\n   * You can refine the query by chaining `MemberReportsQueryBuilder` methods onto the query. `MemberReportsQueryBuilder` methods enable you to sort, filter, and control the results `queryMemberReports()` returns.\n   *\n   * `queryMemberReports()` runs with these `MemberReportsQueryBuilder` defaults, which you can override:\n   *\n   * - [limit(50)](https://dev.wix.com/docs/sdk/backend-modules/members/member-report/member-reports-query-builder/limit)\n   *\n   * The methods that are chained to `queryMemberReports()` are applied in the order they're called. For example, if you apply ascending('status') and then descending('reportedMemberId'), the results are sorted first by the status, and then, if there are multiple results with the same title, the items are sorted by reported member ID.\n   */\n  (): MemberReportsQueryBuilder;\n}\n\nexport function listReportedMembers(\n  httpClient: HttpClient\n): ListReportedMembersSignature {\n  return (options?: ListReportedMembersOptions) =>\n    universalListReportedMembers(\n      options,\n      // @ts-ignore\n      { httpClient }\n    );\n}\n\ninterface ListReportedMembersSignature {\n  /**\n   * Retrieves a list of reported members.\n   * @deprecated\n   */\n  (\n    options?: ListReportedMembersOptions | undefined\n  ): Promise<ListReportedMembersResponse>;\n}\n\nexport function queryReportedMembers(\n  httpClient: HttpClient\n): QueryReportedMembersSignature {\n  return (options?: QueryReportedMembersOptions) =>\n    universalQueryReportedMembers(\n      options,\n      // @ts-ignore\n      { httpClient }\n    );\n}\n\ninterface QueryReportedMembersSignature {\n  /**\n   * Retrieves a list of reported members, given the provided paging, filtering, and sorting.\n   *\n   * Query Reported Members runs with these defaults, which you can override:\n   * - `createdDate` is sorted in `ASC` order\n   * - `paging.limit` is `100`\n   * - `paging.offset` is `0`\n   *\n   * For field support for filters and sorting, see [Supported Filters and Sorting]().\n   * To learn about working with _Query_ endpoints, see [API Query Language](https://dev.wix.com/api/rest/getting-started/api-query-language), [Sorting and Paging](https://dev.wix.com/api/rest/getting-started/pagination), and [Field Projection](https://dev.wix.com/api/rest/getting-started/field-projection).\n   * @deprecated\n   */\n  (\n    options?: QueryReportedMembersOptions | undefined\n  ): Promise<QueryReportedMembersResponse>;\n}\n\nexport function deleteMemberReports(\n  httpClient: HttpClient\n): DeleteMemberReportsSignature {\n  return (memberId: string) =>\n    universalDeleteMemberReports(\n      memberId,\n      // @ts-ignore\n      { httpClient }\n    );\n}\n\ninterface DeleteMemberReportsSignature {\n  /**\n   * Deletes all reports of a member.\n   * @param - ID of the member whose reports are to be deleted.\n   */\n  (memberId: string): Promise<void>;\n}\n\nexport const onMemberReportCreated = EventDefinition(\n  'wix.members.v1.member_report_created',\n  true,\n  (event: MemberReportCreatedEnvelope) =>\n    renameKeysFromRESTResponseToSDKResponse(\n      transformPaths(event, [\n        {\n          transformFn: transformRESTTimestampToSDKTimestamp,\n          paths: [\n            { path: 'entity.createdDate' },\n            { path: 'metadata.eventTime' },\n          ],\n        },\n      ])\n    )\n)<MemberReportCreatedEnvelope>();\nexport const onMemberReportDeleted = EventDefinition(\n  'wix.members.v1.member_report_deleted',\n  true,\n  (event: MemberReportDeletedEnvelope) =>\n    renameKeysFromRESTResponseToSDKResponse(\n      transformPaths(event, [\n        {\n          transformFn: transformRESTTimestampToSDKTimestamp,\n          paths: [\n            { path: 'undefined.createdDate' },\n            { path: 'metadata.eventTime' },\n          ],\n        },\n      ])\n    )\n)<MemberReportDeletedEnvelope>();\nexport const onMemberReportReportedMemberCreated = EventDefinition(\n  'wix.members.v1.member_report_reported_member_created',\n  true,\n  (event: MemberReportReportedMemberCreatedEnvelope) =>\n    renameKeysFromRESTResponseToSDKResponse(\n      transformPaths(event, [\n        {\n          transformFn: transformRESTTimestampToSDKTimestamp,\n          paths: [\n            { path: 'data.reportedMember.lastReportDate' },\n            { path: 'metadata.eventTime' },\n          ],\n        },\n      ])\n    )\n)<MemberReportReportedMemberCreatedEnvelope>();\nexport const onMemberReportReportedMemberDeleted = EventDefinition(\n  'wix.members.v1.member_report_reported_member_deleted',\n  true,\n  (event: MemberReportReportedMemberDeletedEnvelope) =>\n    renameKeysFromRESTResponseToSDKResponse(\n      transformPaths(event, [\n        {\n          transformFn: transformRESTTimestampToSDKTimestamp,\n          paths: [{ path: 'metadata.eventTime' }],\n        },\n      ])\n    )\n)<MemberReportReportedMemberDeletedEnvelope>();\n\nexport {\n  ActionEvent,\n  BaseEventMetadata,\n  CannotReportBlockedMemberError,\n  Category,\n  CursorPaging,\n  Cursors,\n  DeleteMemberReportsRequest,\n  DeleteMemberReportsResponse,\n  DomainEvent,\n  DomainEventBodyOneOf,\n  Empty,\n  EntityCreatedEvent,\n  EntityDeletedEvent,\n  EntityUpdatedEvent,\n  EventMetadata,\n  IdentificationData,\n  IdentificationDataIdOneOf,\n  ListReportedMembersOptions,\n  ListReportedMembersOptionsPagingMethodOneOf,\n  ListReportedMembersRequest,\n  ListReportedMembersRequestPagingMethodOneOf,\n  ListReportedMembersResponse,\n  MarkMemberReportsAsReviewedRequest,\n  MarkMemberReportsAsReviewedResponse,\n  MemberReport,\n  MemberReportCreatedEnvelope,\n  MemberReportDeletedEnvelope,\n  MemberReportReportedMemberCreatedEnvelope,\n  MemberReportReportedMemberDeletedEnvelope,\n  MemberReportsQueryBuilder,\n  MemberReportsQueryResult,\n  MessageEnvelope,\n  Paging,\n  PagingMetadataV2,\n  QueryMemberReportsRequest,\n  QueryMemberReportsResponse,\n  QueryReportedMembersOptions,\n  QueryReportedMembersRequest,\n  QueryReportedMembersResponse,\n  QueryV2,\n  Reason,\n  ReportMemberRequest,\n  ReportMemberResponse,\n  ReportedMember,\n  ReportedMemberCreated,\n  ReportedMemberDeleted,\n  RestoreInfo,\n  SelfReportingForbiddenError,\n  SortOrder,\n  Sorting,\n  WebhookIdentityType,\n} from './members-v1-member-report-member-report.universal.js';\n","import { transformError as sdkTransformError } from '@wix/sdk-runtime/transform-error';\nimport { queryBuilder } from '@wix/sdk-runtime/query-builder';\nimport {\n  renameKeysFromSDKRequestToRESTRequest,\n  renameKeysFromRESTResponseToSDKResponse,\n} from '@wix/sdk-runtime/rename-all-nested-keys';\nimport { HttpClient, HttpResponse, NonNullablePaths } from '@wix/sdk-types';\nimport * as ambassadorWixMembersV1MemberReport from './members-v1-member-report-member-report.http.js';\n// @ts-ignore\n\nexport interface MemberReport {\n  /**\n   * Report ID.\n   * @format GUID\n   * @readonly\n   */\n  _id?: string | null;\n  /**\n   * ID of the reported member.\n   * @format GUID\n   */\n  reportedMemberId?: string;\n  /**\n   * ID of the member who created the report.\n   * @readonly\n   */\n  reportingMemberId?: string | null;\n  /** Reason for reporting a member. */\n  reason?: Reason;\n  /**\n   * Date and time the report was created.\n   * @readonly\n   */\n  _createdDate?: Date | null;\n}\n\nexport interface Reason {\n  /** Report reason type. */\n  category?: Category;\n  /** Explanation of why the member is being reported. */\n  description?: string | null;\n}\n\nexport enum Category {\n  /** Unknown category. This value is unused. */\n  UNKNOWN = 'UNKNOWN',\n  /** The member is reported for spam. */\n  SPAM = 'SPAM',\n  /** The member is reported for impersonation. */\n  IMPERSONATION = 'IMPERSONATION',\n  /** The member is reported for harassment. */\n  HARASSMENT = 'HARASSMENT',\n  /** The member is reported for other reasons. */\n  OTHER = 'OTHER',\n}\n\nexport interface ReportMemberRequest {\n  /** Details of a member to report. */\n  memberReport: MemberReport;\n}\n\nexport interface ReportMemberResponse {\n  /** Member report. */\n  memberReport?: MemberReport;\n}\n\nexport interface ReportedMemberCreated {\n  reportedMember?: ReportedMember;\n}\n\n/** Reported member details. */\nexport interface ReportedMember {\n  /**\n   * ID of the reported member.\n   * @format GUID\n   */\n  reportedMemberId?: string;\n  /** Number of reports for this member. */\n  reportCount?: string;\n  /** Whether reports of this member have been reviewed. */\n  reviewed?: boolean;\n  /**\n   * Date and time when the most recent report was created.\n   * @readonly\n   */\n  lastReportDate?: Date | null;\n}\n\nexport interface SelfReportingForbiddenError {\n  /**\n   * ID of the member that is reported.\n   * @format GUID\n   */\n  memberId?: string;\n}\n\nexport interface CannotReportBlockedMemberError {\n  /**\n   * ID of the member that is reported.\n   * @format GUID\n   */\n  memberId?: string;\n}\n\nexport interface QueryMemberReportsRequest {\n  /** Query options. See [API Query Language](https://dev.wix.com/docs/rest/articles/getting-started/api-query-language) for more details. */\n  query?: QueryV2;\n}\n\nexport interface QueryV2 {\n  /**\n   * Filter object in the following format:\n   * `\"filter\" : {\n   * \"fieldName1\": \"value1\",\n   * \"fieldName2\":{\"$operator\":\"value2\"}\n   * }`\n   * Example of operators: `$eq`, `$ne`, `$lt`, `$lte`, `$gt`, `$gte`, `$in`, `$hasSome`, `$hasAll`, `$startsWith`, `$contains`\n   *\n   * See [API Query Language](https://dev.wix.com/docs/rest/articles/getting-started/api-query-language) for more details.\n   */\n  filter?: Record<string, any> | null;\n  /**\n   * Sort object in the following format:\n   * `[{\"fieldName\":\"sortField1\",\"order\":\"ASC\"},{\"fieldName\":\"sortField2\",\"order\":\"DESC\"}]`\n   */\n  sorting?: Sorting[];\n  /** Paging options to limit and skip the number of items. */\n  paging?: CursorPaging;\n}\n\nexport interface Sorting {\n  /**\n   * Name of the field to sort by.\n   * @maxLength 512\n   */\n  fieldName?: string;\n  /** Sort order. */\n  order?: SortOrder;\n}\n\nexport enum SortOrder {\n  ASC = 'ASC',\n  DESC = 'DESC',\n}\n\nexport interface CursorPaging {\n  /**\n   * The number of items to load.\n   * Default: `100`\n   * @max 1000\n   */\n  limit?: number | null;\n  /** Cursor token pointing to a page of results. Not used in the first request. Following requests use the cursor token and not `filter` or `sort`. */\n  cursor?: string | null;\n}\n\nexport interface QueryMemberReportsResponse {\n  /** Retrieved member reports. */\n  memberReports?: MemberReport[];\n  /** Metadata for the paginated results. */\n  pagingMetadata?: PagingMetadataV2;\n}\n\nexport interface PagingMetadataV2 {\n  /** Number of items returned in the response. */\n  count?: number | null;\n  /** Offset that was requested. */\n  offset?: number | null;\n  /** Total number of items that match the query. Returned if offset paging is used and the `tooManyToCount` flag is not set. */\n  total?: number | null;\n  /** Flag that indicates the server failed to calculate the `total` field. */\n  tooManyToCount?: boolean | null;\n  /** Cursors to navigate through the result pages using `next` and `prev`. Returned if cursor paging is used. */\n  cursors?: Cursors;\n}\n\nexport interface Cursors {\n  /**\n   * Cursor string pointing to the next page in the list of results.\n   * @maxLength 16000\n   */\n  next?: string | null;\n  /**\n   * Cursor pointing to the previous page in the list of results.\n   * @maxLength 16000\n   */\n  prev?: string | null;\n}\n\nexport interface MarkMemberReportsAsReviewedRequest {\n  /**\n   * ID of the member whose reports are to be marked as reviewed.\n   * @format GUID\n   */\n  memberId?: string;\n}\n\nexport interface MarkMemberReportsAsReviewedResponse {\n  /** Reported member details. */\n  reportedMember?: ReportedMember;\n}\n\nexport interface ListReportedMembersRequest\n  extends ListReportedMembersRequestPagingMethodOneOf {\n  /** Cursor token pointing to a page of results. Not used in the first request. Following requests use the cursor token and not `filter` or `sort`. */\n  cursorPaging?: CursorPaging;\n}\n\n/** @oneof */\nexport interface ListReportedMembersRequestPagingMethodOneOf {\n  /** Cursor token pointing to a page of results. Not used in the first request. Following requests use the cursor token and not `filter` or `sort`. */\n  cursorPaging?: CursorPaging;\n}\n\nexport interface Paging {\n  /**\n   * Number of items to load.\n   * @max 100\n   */\n  limit?: number | null;\n  /** Number of items to skip in the current sort order. */\n  offset?: number | null;\n}\n\nexport interface ListReportedMembersResponse {\n  /** Retrieved reported members. */\n  reportedMembers?: ReportedMember[];\n  /** Metadata for the paginated results. */\n  pagingMetadata?: PagingMetadataV2;\n}\n\nexport interface QueryReportedMembersRequest {\n  /** Query options. See [API Query Language](https://dev.wix.com/docs/rest/articles/getting-started/api-query-language) for more details. */\n  query?: QueryV2;\n}\n\nexport interface QueryReportedMembersResponse {\n  /** Retrieved reported members. */\n  reportedMembers?: ReportedMember[];\n  /** Metadata for the paginated results. */\n  pagingMetadata?: PagingMetadataV2;\n}\n\nexport interface DeleteMemberReportsRequest {\n  /**\n   * ID of the member whose reports are to be deleted.\n   * @format GUID\n   */\n  memberId: string;\n}\n\nexport interface DeleteMemberReportsResponse {}\n\nexport interface ReportedMemberDeleted {\n  /** @format GUID */\n  reportedMemberId?: string;\n}\n\nexport interface DomainEvent extends DomainEventBodyOneOf {\n  createdEvent?: EntityCreatedEvent;\n  updatedEvent?: EntityUpdatedEvent;\n  deletedEvent?: EntityDeletedEvent;\n  actionEvent?: ActionEvent;\n  /**\n   * Unique event ID.\n   * Allows clients to ignore duplicate webhooks.\n   */\n  _id?: string;\n  /**\n   * Assumes actions are also always typed to an entity_type\n   * Example: wix.stores.catalog.product, wix.bookings.session, wix.payments.transaction\n   */\n  entityFqdn?: string;\n  /**\n   * This is top level to ease client code dispatching of messages (switch on entity_fqdn+slug)\n   * This is although the created/updated/deleted notion is duplication of the oneof types\n   * Example: created/updated/deleted/started/completed/email_opened\n   */\n  slug?: string;\n  /** ID of the entity associated with the event. */\n  entityId?: string;\n  /** Event timestamp in [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601) format and UTC time. For example: 2020-04-26T13:57:50.699Z */\n  eventTime?: Date | null;\n  /**\n   * Whether the event was triggered as a result of a privacy regulation application\n   * (for example, GDPR).\n   */\n  triggeredByAnonymizeRequest?: boolean | null;\n  /** If present, indicates the action that triggered the event. */\n  originatedFrom?: string | null;\n  /**\n   * A sequence number defining the order of updates to the underlying entity.\n   * For example, given that some entity was updated at 16:00 and than again at 16:01,\n   * it is guaranteed that the sequence number of the second update is strictly higher than the first.\n   * As the consumer, you can use this value to ensure that you handle messages in the correct order.\n   * To do so, you will need to persist this number on your end, and compare the sequence number from the\n   * message against the one you have stored. Given that the stored number is higher, you should ignore the message.\n   */\n  entityEventSequence?: string | null;\n}\n\n/** @oneof */\nexport interface DomainEventBodyOneOf {\n  createdEvent?: EntityCreatedEvent;\n  updatedEvent?: EntityUpdatedEvent;\n  deletedEvent?: EntityDeletedEvent;\n  actionEvent?: ActionEvent;\n}\n\nexport interface EntityCreatedEvent {\n  entity?: string;\n}\n\nexport interface RestoreInfo {\n  deletedDate?: Date | null;\n}\n\nexport interface EntityUpdatedEvent {\n  /**\n   * Since platformized APIs only expose PATCH and not PUT we can't assume that the fields sent from the client are the actual diff.\n   * This means that to generate a list of changed fields (as opposed to sent fields) one needs to traverse both objects.\n   * We don't want to impose this on all developers and so we leave this traversal to the notification recipients which need it.\n   */\n  currentEntity?: string;\n}\n\nexport interface EntityDeletedEvent {\n  /** Entity that was deleted */\n  deletedEntity?: string | null;\n}\n\nexport interface ActionEvent {\n  body?: string;\n}\n\nexport interface Empty {}\n\nexport interface MessageEnvelope {\n  /**\n   * App instance ID.\n   * @format GUID\n   */\n  instanceId?: string | null;\n  /**\n   * Event type.\n   * @maxLength 150\n   */\n  eventType?: string;\n  /** The identification type and identity data. */\n  identity?: IdentificationData;\n  /** Stringify payload. */\n  data?: string;\n}\n\nexport interface IdentificationData extends IdentificationDataIdOneOf {\n  /**\n   * ID of a site visitor that has not logged in to the site.\n   * @format GUID\n   */\n  anonymousVisitorId?: string;\n  /**\n   * ID of a site visitor that has logged in to the site.\n   * @format GUID\n   */\n  memberId?: string;\n  /**\n   * ID of a Wix user (site owner, contributor, etc.).\n   * @format GUID\n   */\n  wixUserId?: string;\n  /**\n   * ID of an app.\n   * @format GUID\n   */\n  appId?: string;\n  /** @readonly */\n  identityType?: WebhookIdentityType;\n}\n\n/** @oneof */\nexport interface IdentificationDataIdOneOf {\n  /**\n   * ID of a site visitor that has not logged in to the site.\n   * @format GUID\n   */\n  anonymousVisitorId?: string;\n  /**\n   * ID of a site visitor that has logged in to the site.\n   * @format GUID\n   */\n  memberId?: string;\n  /**\n   * ID of a Wix user (site owner, contributor, etc.).\n   * @format GUID\n   */\n  wixUserId?: string;\n  /**\n   * ID of an app.\n   * @format GUID\n   */\n  appId?: string;\n}\n\nexport enum WebhookIdentityType {\n  UNKNOWN = 'UNKNOWN',\n  ANONYMOUS_VISITOR = 'ANONYMOUS_VISITOR',\n  MEMBER = 'MEMBER',\n  WIX_USER = 'WIX_USER',\n  APP = 'APP',\n}\n\nexport interface BaseEventMetadata {\n  /**\n   * App instance ID.\n   * @format GUID\n   */\n  instanceId?: string | null;\n  /**\n   * Event type.\n   * @maxLength 150\n   */\n  eventType?: string;\n  /** The identification type and identity data. */\n  identity?: IdentificationData;\n}\n\nexport interface EventMetadata extends BaseEventMetadata {\n  /**\n   * Unique event ID.\n   * Allows clients to ignore duplicate webhooks.\n   */\n  _id?: string;\n  /**\n   * Assumes actions are also always typed to an entity_type\n   * Example: wix.stores.catalog.product, wix.bookings.session, wix.payments.transaction\n   */\n  entityFqdn?: string;\n  /**\n   * This is top level to ease client code dispatching of messages (switch on entity_fqdn+slug)\n   * This is although the created/updated/deleted notion is duplication of the oneof types\n   * Example: created/updated/deleted/started/completed/email_opened\n   */\n  slug?: string;\n  /** ID of the entity associated with the event. */\n  entityId?: string;\n  /** Event timestamp in [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601) format and UTC time. For example: 2020-04-26T13:57:50.699Z */\n  eventTime?: Date | null;\n  /**\n   * Whether the event was triggered as a result of a privacy regulation application\n   * (for example, GDPR).\n   */\n  triggeredByAnonymizeRequest?: boolean | null;\n  /** If present, indicates the action that triggered the event. */\n  originatedFrom?: string | null;\n  /**\n   * A sequence number defining the order of updates to the underlying entity.\n   * For example, given that some entity was updated at 16:00 and than again at 16:01,\n   * it is guaranteed that the sequence number of the second update is strictly higher than the first.\n   * As the consumer, you can use this value to ensure that you handle messages in the correct order.\n   * To do so, you will need to persist this number on your end, and compare the sequence number from the\n   * message against the one you have stored. Given that the stored number is higher, you should ignore the message.\n   */\n  entityEventSequence?: string | null;\n}\n\nexport interface MemberReportCreatedEnvelope {\n  entity: MemberReport;\n  metadata: EventMetadata;\n}\n\n/**\n * Triggered when a member is reported.\n * @permissionScope Manage Members\n * @permissionScopeId SCOPE.DC-MEMBERS.MANAGE-MEMBERS\n * @permissionId MEMBERS.REPORTS_READ\n * @webhook\n * @eventType wix.members.v1.member_report_created\n * @serviceIdentifier com.wixpress.members.memberreports.MemberReports\n * @slug created\n * @documentationMaturity preview\n */\nexport declare function onMemberReportCreated(\n  handler: (event: MemberReportCreatedEnvelope) => void | Promise<void>\n): void;\n\nexport interface MemberReportDeletedEnvelope {\n  metadata: EventMetadata;\n}\n\n/**\n * Triggered when a report is deleted.\n * @permissionScope Manage Members\n * @permissionScopeId SCOPE.DC-MEMBERS.MANAGE-MEMBERS\n * @permissionId MEMBERS.REPORTS_READ\n * @webhook\n * @eventType wix.members.v1.member_report_deleted\n * @serviceIdentifier com.wixpress.members.memberreports.MemberReports\n * @slug deleted\n * @documentationMaturity preview\n */\nexport declare function onMemberReportDeleted(\n  handler: (event: MemberReportDeletedEnvelope) => void | Promise<void>\n): void;\n\nexport interface MemberReportReportedMemberCreatedEnvelope {\n  data: ReportedMemberCreated;\n  metadata: EventMetadata;\n}\n\n/** @permissionScope Manage Members\n * @permissionScopeId SCOPE.DC-MEMBERS.MANAGE-MEMBERS\n * @permissionId MEMBERS.REPORTS_READ\n * @webhook\n * @eventType wix.members.v1.member_report_reported_member_created\n * @serviceIdentifier com.wixpress.members.memberreports.MemberReports\n * @slug reported_member_created\n * @documentationMaturity preview\n */\nexport declare function onMemberReportReportedMemberCreated(\n  handler: (\n    event: MemberReportReportedMemberCreatedEnvelope\n  ) => void | Promise<void>\n): void;\n\nexport interface MemberReportReportedMemberDeletedEnvelope {\n  data: ReportedMemberDeleted;\n  metadata: EventMetadata;\n}\n\n/** @permissionScope Manage Members\n * @permissionScopeId SCOPE.DC-MEMBERS.MANAGE-MEMBERS\n * @permissionId MEMBERS.REPORTS_READ\n * @webhook\n * @eventType wix.members.v1.member_report_reported_member_deleted\n * @serviceIdentifier com.wixpress.members.memberreports.MemberReports\n * @slug reported_member_deleted\n * @documentationMaturity preview\n */\nexport declare function onMemberReportReportedMemberDeleted(\n  handler: (\n    event: MemberReportReportedMemberDeletedEnvelope\n  ) => void | Promise<void>\n): void;\n\ntype MemberReportNonNullablePaths = `reportedMemberId` | `reason.category`;\n\n/**\n * Creates a report for the reported member.\n * @param memberReport - Details of a member to report.\n * @public\n * @documentationMaturity preview\n * @requiredField memberReport\n * @requiredField memberReport.reason\n * @requiredField memberReport.reportedMemberId\n * @permissionId MEMBERS.REPORTS_WRITE\n * @applicableIdentity MEMBER\n * @fqn com.wixpress.members.memberreports.MemberReports.ReportMember\n */\nexport async function reportMember(\n  memberReport: NonNullablePaths<MemberReport, `reason` | `reportedMemberId`>\n): Promise<\n  NonNullablePaths<\n    ReportMemberResponse,\n    {\n      [P in MemberReportNonNullablePaths]: `memberReport.${P}`;\n    }[MemberReportNonNullablePaths]\n  >\n> {\n  // @ts-ignore\n  const { httpClient, sideEffects } = arguments[1] as {\n    httpClient: HttpClient;\n    sideEffects?: any;\n  };\n\n  const payload = renameKeysFromSDKRequestToRESTRequest({\n    memberReport: memberReport,\n  });\n\n  const reqOpts = ambassadorWixMembersV1MemberReport.reportMember(payload);\n\n  sideEffects?.onSiteCall?.();\n  try {\n    const result = await httpClient.request(reqOpts);\n    sideEffects?.onSuccess?.(result);\n\n    return renameKeysFromRESTResponseToSDKResponse(result.data)!;\n  } catch (err: any) {\n    const transformedError = sdkTransformError(\n      err,\n      {\n        spreadPathsToArguments: {},\n        explicitPathsToArguments: { memberReport: '$[0]' },\n        singleArgumentUnchanged: false,\n      },\n      ['memberReport']\n    );\n    sideEffects?.onError?.(err);\n\n    throw transformedError;\n  }\n}\n\n/**\n * Creates a query to retrieve a list of events.\n *\n * The `queryMemberReports()` method builds a query to retrieve a list of member reports and returns a [`MemberReportsQueryBuilder`](https://dev.wix.com/docs/sdk/backend-modules/members/member-report/member-reports-query-builder/eq) object.\n *\n * The returned object contains the query definition, which is typically used to run the query using the [`find()`](https://dev.wix.com/docs/sdk/backend-modules/members/member-report/member-reports-query-builder/find) method.\n *\n * You can refine the query by chaining `MemberReportsQueryBuilder` methods onto the query. `MemberReportsQueryBuilder` methods enable you to sort, filter, and control the results `queryMemberReports()` returns.\n *\n * `queryMemberReports()` runs with these `MemberReportsQueryBuilder` defaults, which you can override:\n *\n * - [limit(50)](https://dev.wix.com/docs/sdk/backend-modules/members/member-report/member-reports-query-builder/limit)\n *\n * The methods that are chained to `queryMemberReports()` are applied in the order they're called. For example, if you apply ascending('status') and then descending('reportedMemberId'), the results are sorted first by the status, and then, if there are multiple results with the same title, the items are sorted by reported member ID.\n * @public\n * @documentationMaturity preview\n * @permissionScope Manage Members\n * @permissionScopeId SCOPE.DC-MEMBERS.MANAGE-MEMBERS\n * @permissionId MEMBERS.REPORTS_READ\n * @applicableIdentity APP\n * @fqn com.wixpress.members.memberreports.MemberReports.QueryMemberReports\n */\nexport function queryMemberReports(): MemberReportsQueryBuilder {\n  // @ts-ignore\n  const { httpClient, sideEffects } = arguments[0] as {\n    httpClient: HttpClient;\n    sideEffects?: any;\n  };\n\n  return queryBuilder<\n    MemberReport,\n    'CURSOR',\n    QueryMemberReportsRequest,\n    QueryMemberReportsResponse\n  >({\n    func: async (payload: QueryMemberReportsRequest) => {\n      const reqOpts =\n        ambassadorWixMembersV1MemberReport.queryMemberReports(payload);\n\n      sideEffects?.onSiteCall?.();\n      try {\n        const result = await httpClient.request(reqOpts);\n        sideEffects?.onSuccess?.(result);\n        return result;\n      } catch (err) {\n        sideEffects?.onError?.(err);\n        throw err;\n      }\n    },\n    requestTransformer: (query: QueryMemberReportsRequest['query']) => {\n      const args = [query, {}] as [QueryMemberReportsRequest['query'], {}];\n      return renameKeysFromSDKRequestToRESTRequest({\n        ...args?.[1],\n        query: args?.[0],\n      });\n    },\n    responseTransformer: ({\n      data,\n    }: HttpResponse<QueryMemberReportsResponse>) => {\n      const transformedData = renameKeysFromRESTResponseToSDKResponse(data);\n\n      return {\n        items: transformedData?.memberReports,\n        pagingMetadata: transformedData?.pagingMetadata,\n      };\n    },\n    errorTransformer: (err: unknown) => {\n      const transformedError = sdkTransformError(err, {\n        spreadPathsToArguments: {},\n        explicitPathsToArguments: { query: '$[0]' },\n        singleArgumentUnchanged: false,\n      });\n\n      throw transformedError;\n    },\n    pagingMethod: 'CURSOR',\n    transformationPaths: {},\n  });\n}\n\ninterface QueryCursorResult {\n  cursors: Cursors;\n  hasNext: () => boolean;\n  hasPrev: () => boolean;\n  length: number;\n  pageSize: number;\n}\n\nexport interface MemberReportsQueryResult extends QueryCursorResult {\n  items: MemberReport[];\n  query: MemberReportsQueryBuilder;\n  next: () => Promise<MemberReportsQueryResult>;\n  prev: () => Promise<MemberReportsQueryResult>;\n}\n\nexport interface MemberReportsQueryBuilder {\n  /** @param propertyName - Property whose value is compared with `value`.\n   * @param value - Value to compare against.\n   * @documentationMaturity preview\n   */\n  eq: (\n    propertyName:\n      | '_id'\n      | 'reportedMemberId'\n      | 'reportingMemberId'\n      | 'reason'\n      | '_createdDate',\n    value: any\n  ) => MemberReportsQueryBuilder;\n  /** @param propertyName - Property whose value is compared with `value`.\n   * @param value - Value to compare against.\n   * @documentationMaturity preview\n   */\n  ne: (\n    propertyName:\n      | '_id'\n      | 'reportedMemberId'\n      | 'reportingMemberId'\n      | 'reason'\n      | '_createdDate',\n    value: any\n  ) => MemberReportsQueryBuilder;\n  /** @param propertyName - Property whose value is compared with `value`.\n   * @param value - Value to compare against.\n   * @documentationMaturity preview\n   */\n  ge: (propertyName: '_createdDate', value: any) => MemberReportsQueryBuilder;\n  /** @param propertyName - Property whose value is compared with `value`.\n   * @param value - Value to compare against.\n   * @documentationMaturity preview\n   */\n  gt: (propertyName: '_createdDate', value: any) => MemberReportsQueryBuilder;\n  /** @param propertyName - Property whose value is compared with `value`.\n   * @param value - Value to compare against.\n   * @documentationMaturity preview\n   */\n  le: (propertyName: '_createdDate', value: any) => MemberReportsQueryBuilder;\n  /** @param propertyName - Property whose value is compared with `value`.\n   * @param value - Value to compare against.\n   * @documentationMaturity preview\n   */\n  lt: (propertyName: '_createdDate', value: any) => MemberReportsQueryBuilder;\n  /** @param propertyName - Property whose value is compared with `string`.\n   * @param string - String to compare against. Case-insensitive.\n   * @documentationMaturity preview\n   */\n  startsWith: (\n    propertyName: '_id' | 'reportedMemberId' | 'reportingMemberId',\n    value: string\n  ) => MemberReportsQueryBuilder;\n  /** @param propertyName - Property whose value is compared with `values`.\n   * @param values - List of values to compare against.\n   * @documentationMaturity preview\n   */\n  hasSome: (\n    propertyName:\n      | '_id'\n      | 'reportedMemberId'\n      | 'reportingMemberId'\n      | 'reason'\n      | '_createdDate',\n    value: any[]\n  ) => MemberReportsQueryBuilder;\n  /** @documentationMaturity preview */\n  in: (\n    propertyName:\n      | '_id'\n      | 'reportedMemberId'\n      | 'reportingMemberId'\n      | 'reason'\n      | '_createdDate',\n    value: any\n  ) => MemberReportsQueryBuilder;\n  /** @documentationMaturity preview */\n  exists: (\n    propertyName:\n      | '_id'\n      | 'reportedMemberId'\n      | 'reportingMemberId'\n      | 'reason'\n      | '_createdDate',\n    value: boolean\n  ) => MemberReportsQueryBuilder;\n  /** @param limit - Number of items to return, which is also the `pageSize` of the results object.\n   * @documentationMaturity preview\n   */\n  limit: (limit: number) => MemberReportsQueryBuilder;\n  /** @param cursor - A pointer to specific record\n   * @documentationMaturity preview\n   */\n  skipTo: (cursor: string) => MemberReportsQueryBuilder;\n  /** @documentationMaturity preview */\n  find: () => Promise<MemberReportsQueryResult>;\n}\n\n/**\n * Retrieves a list of reported members.\n * @public\n * @documentationMaturity preview\n * @permissionId MEMBERS.REPORTS_READ\n * @permissionScope Manage Members\n * @permissionScopeId SCOPE.DC-MEMBERS.MANAGE-MEMBERS\n * @applicableIdentity APP\n * @fqn com.wixpress.members.memberreports.MemberReports.ListReportedMembers\n * @deprecated\n * @replacedBy wix.members.reports.v1.MemberReportOverviews.QueryMemberReportOverviews\n * @targetRemovalDate 2025-01-31\n */\nexport async function listReportedMembers(\n  options?: ListReportedMembersOptions\n): Promise<\n  NonNullablePaths<\n    ListReportedMembersResponse,\n    | `reportedMembers`\n    | `reportedMembers.${number}.reportedMemberId`\n    | `reportedMembers.${number}.reportCount`\n    | `reportedMembers.${number}.reviewed`\n  >\n> {\n  // @ts-ignore\n  const { httpClient, sideEffects } = arguments[1] as {\n    httpClient: HttpClient;\n    sideEffects?: any;\n  };\n\n  const payload = renameKeysFromSDKRequestToRESTRequest({\n    cursorPaging: options?.cursorPaging,\n  });\n\n  const reqOpts =\n    ambassadorWixMembersV1MemberReport.listReportedMembers(payload);\n\n  sideEffects?.onSiteCall?.();\n  try {\n    const result = await httpClient.request(reqOpts);\n    sideEffects?.onSuccess?.(result);\n\n    return renameKeysFromRESTResponseToSDKResponse(result.data)!;\n  } catch (err: any) {\n    const transformedError = sdkTransformError(\n      err,\n      {\n        spreadPathsToArguments: {},\n        explicitPathsToArguments: { cursorPaging: '$[0].cursorPaging' },\n        singleArgumentUnchanged: false,\n      },\n      ['options']\n    );\n    sideEffects?.onError?.(err);\n\n    throw transformedError;\n  }\n}\n\nexport interface ListReportedMembersOptions\n  extends ListReportedMembersOptionsPagingMethodOneOf {\n  /** Cursor token pointing to a page of results. Not used in the first request. Following requests use the cursor token and not `filter` or `sort`. */\n  cursorPaging?: CursorPaging;\n}\n\n/** @oneof */\nexport interface ListReportedMembersOptionsPagingMethodOneOf {\n  /** Cursor token pointing to a page of results. Not used in the first request. Following requests use the cursor token and not `filter` or `sort`. */\n  cursorPaging?: CursorPaging;\n}\n\n/**\n * Retrieves a list of reported members, given the provided paging, filtering, and sorting.\n *\n * Query Reported Members runs with these defaults, which you can override:\n * - `createdDate` is sorted in `ASC` order\n * - `paging.limit` is `100`\n * - `paging.offset` is `0`\n *\n * For field support for filters and sorting, see [Supported Filters and Sorting]().\n * To learn about working with _Query_ endpoints, see [API Query Language](https://dev.wix.com/api/rest/getting-started/api-query-language), [Sorting and Paging](https://dev.wix.com/api/rest/getting-started/pagination), and [Field Projection](https://dev.wix.com/api/rest/getting-started/field-projection).\n * @public\n * @documentationMaturity preview\n * @permissionId MEMBERS.REPORTS_READ\n * @permissionScope Manage Members\n * @permissionScopeId SCOPE.DC-MEMBERS.MANAGE-MEMBERS\n * @applicableIdentity APP\n * @fqn com.wixpress.members.memberreports.MemberReports.QueryReportedMembers\n * @deprecated\n * @replacedBy wix.members.reports.v1.MemberReportOverviews.QueryMemberReportOverviews\n * @targetRemovalDate 2025-01-31\n */\nexport async function queryReportedMembers(\n  options?: QueryReportedMembersOptions\n): Promise<\n  NonNullablePaths<\n    QueryReportedMembersResponse,\n    | `reportedMembers`\n    | `reportedMembers.${number}.reportedMemberId`\n    | `reportedMembers.${number}.reportCount`\n    | `reportedMembers.${number}.reviewed`\n  >\n> {\n  // @ts-ignore\n  const { httpClient, sideEffects } = arguments[1] as {\n    httpClient: HttpClient;\n    sideEffects?: any;\n  };\n\n  const payload = renameKeysFromSDKRequestToRESTRequest({\n    query: options?.query,\n  });\n\n  const reqOpts =\n    ambassadorWixMembersV1MemberReport.queryReportedMembers(payload);\n\n  sideEffects?.onSiteCall?.();\n  try {\n    const result = await httpClient.request(reqOpts);\n    sideEffects?.onSuccess?.(result);\n\n    return renameKeysFromRESTResponseToSDKResponse(result.data)!;\n  } catch (err: any) {\n    const transformedError = sdkTransformError(\n      err,\n      {\n        spreadPathsToArguments: {},\n        explicitPathsToArguments: { query: '$[0].query' },\n        singleArgumentUnchanged: false,\n      },\n      ['options']\n    );\n    sideEffects?.onError?.(err);\n\n    throw transformedError;\n  }\n}\n\nexport interface QueryReportedMembersOptions {\n  /** Query options. See [API Query Language](https://dev.wix.com/docs/rest/articles/getting-started/api-query-language) for more details. */\n  query?: QueryV2;\n}\n\n/**\n * Deletes all reports of a member.\n * @param memberId - ID of the member whose reports are to be deleted.\n * @public\n * @documentationMaturity preview\n * @requiredField memberId\n * @permissionId MEMBERS.REPORTS_DELETE\n * @permissionScope Manage Members\n * @permissionScopeId SCOPE.DC-MEMBERS.MANAGE-MEMBERS\n * @applicableIdentity APP\n * @fqn com.wixpress.members.memberreports.MemberReports.DeleteMemberReports\n */\nexport async function deleteMemberReports(memberId: string): Promise<void> {\n  // @ts-ignore\n  const { httpClient, sideEffects } = arguments[1] as {\n    httpClient: HttpClient;\n    sideEffects?: any;\n  };\n\n  const payload = renameKeysFromSDKRequestToRESTRequest({ memberId: memberId });\n\n  const reqOpts =\n    ambassadorWixMembersV1MemberReport.deleteMemberReports(payload);\n\n  sideEffects?.onSiteCall?.();\n  try {\n    const result = await httpClient.request(reqOpts);\n    sideEffects?.onSuccess?.(result);\n  } catch (err: any) {\n    const transformedError = sdkTransformError(\n      err,\n      {\n        spreadPathsToArguments: {},\n        explicitPathsToArguments: { memberId: '$[0]' },\n        singleArgumentUnchanged: false,\n      },\n      ['memberId']\n    );\n    sideEffects?.onError?.(err);\n\n    throw transformedError;\n  }\n}\n","import { toURLSearchParams } from '@wix/sdk-runtime/rest-modules';\nimport { transformSDKTimestampToRESTTimestamp } from '@wix/sdk-runtime/transformations/timestamp';\nimport { transformRESTTimestampToSDKTimestamp } from '@wix/sdk-runtime/transformations/timestamp';\nimport { transformPaths } from '@wix/sdk-runtime/transformations/transform-paths';\nimport { resolveUrl } from '@wix/sdk-runtime/rest-modules';\nimport { ResolveUrlOpts } from '@wix/sdk-runtime/rest-modules';\nimport { RequestOptionsFactory } from '@wix/sdk-types';\n\nfunction resolveComWixpressMembersMemberreportsMemberReportsUrl(\n  opts: Omit<ResolveUrlOpts, 'domainToMappings'>\n) {\n  const domainToMappings = {\n    'www.wixapis.com': [\n      {\n        srcPath: '/members/v1/member-reports',\n        destPath: '/v1/member-reports',\n      },\n    ],\n    'api._api_base_domain_': [\n      {\n        srcPath: '/members-reports-api',\n        destPath: '',\n      },\n    ],\n    'members.wixapps.net': [\n      {\n        srcPath: '/v1/member-reports',\n        destPath: '/v1/member-reports',\n      },\n    ],\n    _: [\n      {\n        srcPath: '/members/v1/member-reports',\n        destPath: '/v1/member-reports',\n      },\n    ],\n    'manage._base_domain_': [\n      {\n        srcPath: '/members/v1/member-reports',\n        destPath: '/v1/member-reports',\n      },\n    ],\n  };\n\n  return resolveUrl(Object.assign(opts, { domainToMappings }));\n}\n\nconst PACKAGE_NAME = '@wix/auto_sdk_members_member-report';\n\n/** Creates a report for the reported member. */\nexport function reportMember(payload: object): RequestOptionsFactory<any> {\n  function __reportMember({ host }: any) {\n    const serializedData = transformPaths(payload, [\n      {\n        transformFn: transformSDKTimestampToRESTTimestamp,\n        paths: [{ path: 'memberReport.createdDate' }],\n      },\n    ]);\n    const metadata = {\n      entityFqdn: 'wix.members.v1.member_report',\n      method: 'POST' as any,\n      methodFqn:\n        'com.wixpress.members.memberreports.MemberReports.ReportMember',\n      packageName: PACKAGE_NAME,\n      url: resolveComWixpressMembersMemberreportsMemberReportsUrl({\n        protoPath: '/v1/member-reports',\n        data: serializedData,\n        host,\n      }),\n      data: serializedData,\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTTimestampToSDKTimestamp,\n            paths: [{ path: 'memberReport.createdDate' }],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __reportMember;\n}\n\n/**\n * Creates a query to retrieve a list of events.\n *\n * The `queryMemberReports()` method builds a query to retrieve a list of member reports and returns a [`MemberReportsQueryBuilder`](https://dev.wix.com/docs/sdk/backend-modules/members/member-report/member-reports-query-builder/eq) object.\n *\n * The returned object contains the query definition, which is typically used to run the query using the [`find()`](https://dev.wix.com/docs/sdk/backend-modules/members/member-report/member-reports-query-builder/find) method.\n *\n * You can refine the query by chaining `MemberReportsQueryBuilder` methods onto the query. `MemberReportsQueryBuilder` methods enable you to sort, filter, and control the results `queryMemberReports()` returns.\n *\n * `queryMemberReports()` runs with these `MemberReportsQueryBuilder` defaults, which you can override:\n *\n * - [limit(50)](https://dev.wix.com/docs/sdk/backend-modules/members/member-report/member-reports-query-builder/limit)\n *\n * The methods that are chained to `queryMemberReports()` are applied in the order they're called. For example, if you apply ascending('status') and then descending('reportedMemberId'), the results are sorted first by the status, and then, if there are multiple results with the same title, the items are sorted by reported member ID.\n */\nexport function queryMemberReports(\n  payload: object\n): RequestOptionsFactory<any> {\n  function __queryMemberReports({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.members.v1.member_report',\n      method: 'POST' as any,\n      methodFqn:\n        'com.wixpress.members.memberreports.MemberReports.QueryMemberReports',\n      packageName: PACKAGE_NAME,\n      url: resolveComWixpressMembersMemberreportsMemberReportsUrl({\n        protoPath: '/v1/member-reports/query',\n        data: payload,\n        host,\n      }),\n      data: payload,\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTTimestampToSDKTimestamp,\n            paths: [{ path: 'memberReports.createdDate' }],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __queryMemberReports;\n}\n\n/**\n * Retrieves a list of reported members.\n * @deprecated It has been replaced with wix.members.reports.v1.MemberReportOverviews.QueryMemberReportOverviews(), and will be removed on 2025-01-31.\n */\nexport function listReportedMembers(\n  payload: object\n): RequestOptionsFactory<any> {\n  function __listReportedMembers({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.members.v1.member_report',\n      method: 'GET' as any,\n      methodFqn:\n        'com.wixpress.members.memberreports.MemberReports.ListReportedMembers',\n      packageName: PACKAGE_NAME,\n      url: resolveComWixpressMembersMemberreportsMemberReportsUrl({\n        protoPath: '/v1/member-reports/members',\n        data: payload,\n        host,\n      }),\n      params: toURLSearchParams(payload),\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTTimestampToSDKTimestamp,\n            paths: [{ path: 'reportedMembers.lastReportDate' }],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __listReportedMembers;\n}\n\n/**\n * Retrieves a list of reported members, given the provided paging, filtering, and sorting.\n *\n * Query Reported Members runs with these defaults, which you can override:\n * - `createdDate` is sorted in `ASC` order\n * - `paging.limit` is `100`\n * - `paging.offset` is `0`\n *\n * For field support for filters and sorting, see [Supported Filters and Sorting]().\n * To learn about working with _Query_ endpoints, see [API Query Language](https://dev.wix.com/api/rest/getting-started/api-query-language), [Sorting and Paging](https://dev.wix.com/api/rest/getting-started/pagination), and [Field Projection](https://dev.wix.com/api/rest/getting-started/field-projection).\n * @deprecated It has been replaced with wix.members.reports.v1.MemberReportOverviews.QueryMemberReportOverviews(), and will be removed on 2025-01-31.\n */\nexport function queryReportedMembers(\n  payload: object\n): RequestOptionsFactory<any> {\n  function __queryReportedMembers({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.members.v1.member_report',\n      method: 'POST' as any,\n      methodFqn:\n        'com.wixpress.members.memberreports.MemberReports.QueryReportedMembers',\n      packageName: PACKAGE_NAME,\n      url: resolveComWixpressMembersMemberreportsMemberReportsUrl({\n        protoPath: '/v1/member-reports/members/query',\n        data: payload,\n        host,\n      }),\n      data: payload,\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTTimestampToSDKTimestamp,\n            paths: [{ path: 'reportedMembers.lastReportDate' }],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __queryReportedMembers;\n}\n\n/** Deletes all reports of a member. */\nexport function deleteMemberReports(\n  payload: object\n): RequestOptionsFactory<any> {\n  function __deleteMemberReports({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.members.v1.member_report',\n      method: 'DELETE' as any,\n      methodFqn:\n        'com.wixpress.members.memberreports.MemberReports.DeleteMemberReports',\n      packageName: PACKAGE_NAME,\n      url: resolveComWixpressMembersMemberreportsMemberReportsUrl({\n        protoPath: '/v1/member-reports/members/{memberId}',\n        data: payload,\n        host,\n      }),\n      params: toURLSearchParams(payload),\n    };\n\n    return metadata;\n  }\n\n  return __deleteMemberReports;\n}\n","import {\n  reportMember as publicReportMember,\n  queryMemberReports as publicQueryMemberReports,\n  listReportedMembers as publicListReportedMembers,\n  queryReportedMembers as publicQueryReportedMembers,\n  deleteMemberReports as publicDeleteMemberReports,\n} from './members-v1-member-report-member-report.public.js';\nimport { createRESTModule } from '@wix/sdk-runtime/rest-modules';\nimport { createEventModule } from '@wix/sdk-runtime/event-definition-modules';\nimport { BuildRESTFunction, MaybeContext } from '@wix/sdk-types';\nimport { onMemberReportCreated as publicOnMemberReportCreated } from './members-v1-member-report-member-report.public.js';\nimport { onMemberReportDeleted as publicOnMemberReportDeleted } from './members-v1-member-report-member-report.public.js';\nimport { onMemberReportReportedMemberCreated as publicOnMemberReportReportedMemberCreated } from './members-v1-member-report-member-report.public.js';\nimport { onMemberReportReportedMemberDeleted as publicOnMemberReportReportedMemberDeleted } from './members-v1-member-report-member-report.public.js';\n\nexport const reportMember: MaybeContext<\n  BuildRESTFunction<typeof publicReportMember> & typeof publicReportMember\n> = /*#__PURE__*/ createRESTModule(publicReportMember);\nexport const queryMemberReports: MaybeContext<\n  BuildRESTFunction<typeof publicQueryMemberReports> &\n    typeof publicQueryMemberReports\n> = /*#__PURE__*/ createRESTModule(publicQueryMemberReports);\nexport const listReportedMembers: MaybeContext<\n  BuildRESTFunction<typeof publicListReportedMembers> &\n    typeof publicListReportedMembers\n> = /*#__PURE__*/ createRESTModule(publicListReportedMembers);\nexport const queryReportedMembers: MaybeContext<\n  BuildRESTFunction<typeof publicQueryReportedMembers> &\n    typeof publicQueryReportedMembers\n> = /*#__PURE__*/ createRESTModule(publicQueryReportedMembers);\nexport const deleteMemberReports: MaybeContext<\n  BuildRESTFunction<typeof publicDeleteMemberReports> &\n    typeof publicDeleteMemberReports\n> = /*#__PURE__*/ createRESTModule(publicDeleteMemberReports);\n/**\n * Triggered when a member is reported.\n */\nexport const onMemberReportCreated: ReturnType<\n  typeof createEventModule<typeof publicOnMemberReportCreated>\n> = createEventModule(publicOnMemberReportCreated);\n/**\n * Triggered when a report is deleted.\n */\nexport const onMemberReportDeleted: ReturnType<\n  typeof createEventModule<typeof publicOnMemberReportDeleted>\n> = createEventModule(publicOnMemberReportDeleted);\n/** */\nexport const onMemberReportReportedMemberCreated: ReturnType<\n  typeof createEventModule<typeof publicOnMemberReportReportedMemberCreated>\n> = createEventModule(publicOnMemberReportReportedMemberCreated);\n/** */\nexport const onMemberReportReportedMemberDeleted: ReturnType<\n  typeof createEventModule<typeof publicOnMemberReportReportedMemberDeleted>\n> = createEventModule(publicOnMemberReportReportedMemberDeleted);\n\nexport {\n  Category,\n  SortOrder,\n  WebhookIdentityType,\n} from './members-v1-member-report-member-report.universal.js';\nexport {\n  MemberReport,\n  Reason,\n  ReportMemberRequest,\n  ReportMemberResponse,\n  ReportedMemberCreated,\n  ReportedMember,\n  SelfReportingForbiddenError,\n  CannotReportBlockedMemberError,\n  QueryMemberReportsRequest,\n  QueryV2,\n  Sorting,\n  CursorPaging,\n  QueryMemberReportsResponse,\n  PagingMetadataV2,\n  Cursors,\n  MarkMemberReportsAsReviewedRequest,\n  MarkMemberReportsAsReviewedResponse,\n  ListReportedMembersRequest,\n  ListReportedMembersRequestPagingMethodOneOf,\n  Paging,\n  ListReportedMembersResponse,\n  QueryReportedMembersRequest,\n  QueryReportedMembersResponse,\n  DeleteMemberReportsRequest,\n  DeleteMemberReportsResponse,\n  ReportedMemberDeleted,\n  DomainEvent,\n  DomainEventBodyOneOf,\n  EntityCreatedEvent,\n  RestoreInfo,\n  EntityUpdatedEvent,\n  EntityDeletedEvent,\n  ActionEvent,\n  Empty,\n  MessageEnvelope,\n  IdentificationData,\n  IdentificationDataIdOneOf,\n  BaseEventMetadata,\n  EventMetadata,\n  MemberReportCreatedEnvelope,\n  MemberReportDeletedEnvelope,\n  MemberReportReportedMemberCreatedEnvelope,\n  MemberReportReportedMemberDeletedEnvelope,\n  MemberReportsQueryResult,\n  MemberReportsQueryBuilder,\n  ListReportedMembersOptions,\n  ListReportedMembersOptionsPagingMethodOneOf,\n  QueryReportedMembersOptions,\n} from './members-v1-member-report-member-report.universal.js';\n"],"mappings":"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","names":["renameKeysFromRESTResponseToSDKResponse","transformRESTTimestampToSDKTimestamp","transformPaths","payload","Category","SortOrder","WebhookIdentityType","reportMember","queryMemberReports","listReportedMembers","queryReportedMembers","deleteMemberReports","reportMember","queryMemberReports","listReportedMembers","queryReportedMembers","deleteMemberReports","renameKeysFromRESTResponseToSDKResponse","transformPaths","transformRESTTimestampToSDKTimestamp","reportMember","queryMemberReports","listReportedMembers","queryReportedMembers","deleteMemberReports","onMemberReportCreated","onMemberReportDeleted","onMemberReportReportedMemberCreated","onMemberReportReportedMemberDeleted"]}