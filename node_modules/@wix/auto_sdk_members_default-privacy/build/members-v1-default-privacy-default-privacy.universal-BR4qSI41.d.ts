interface DefaultPrivacy {
    /**
     * Privacy ID.
     * @format GUID
     * @readonly
     */
    _id?: string | null;
    /** Default privacy status for a new member. */
    defaultPrivacy?: Privacy;
    /** Revision number, which increments by 1 each time the default privacy is updated. To prevent conflicting changes, the existing revision must be used when updating default privacy. */
    revision?: string | null;
}
declare enum Privacy {
    /** Default privacy status is private. All members have private profiles with no option to make them public. */
    PRIVATE = "PRIVATE",
    /** Default privacy status is public. All members can make their profile public. */
    PUBLIC = "PUBLIC"
}
interface GetDefaultPrivacyStatusRequest {
}
interface GetDefaultPrivacyStatusResponse {
    /** Retrieved default privacy settings. */
    defaultPrivacy?: DefaultPrivacy;
}
interface SetDefaultPrivacyStatusRequest {
    /** Default privacy settings to set. */
    defaultPrivacy: DefaultPrivacy;
}
interface SetDefaultPrivacyStatusResponse {
    /** Default privacy settings. */
    defaultPrivacy?: DefaultPrivacy;
}

export { type DefaultPrivacy as D, type GetDefaultPrivacyStatusResponse as G, Privacy as P, type SetDefaultPrivacyStatusResponse as S, type GetDefaultPrivacyStatusRequest as a, type SetDefaultPrivacyStatusRequest as b };
