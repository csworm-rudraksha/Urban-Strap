import { toURLSearchParams } from '@wix/sdk-runtime/rest-modules';
import { transformSDKFieldMaskToRESTFieldMask } from '@wix/sdk-runtime/transformations/field-mask';
import { transformPaths } from '@wix/sdk-runtime/transformations/transform-paths';
import { resolveUrl } from '@wix/sdk-runtime/rest-modules';
function resolveWixBookingsCatalogV1ServiceOptionsAndVariantsServiceUrl(opts) {
    const domainToMappings = {
        'manage._base_domain_': [
            {
                srcPath: '/_api/v1/service-options-and-variants',
                destPath: '/v1/serviceOptionsAndVariants',
            },
            {
                srcPath: '/_api/v1/serviceOptionsAndVariants',
                destPath: '/v1/serviceOptionsAndVariants',
            },
            {
                srcPath: '/_api/bookings/v1/service-options-and-variants',
                destPath: '',
            },
        ],
        _: [
            {
                srcPath: '/_api/v1/service-options-and-variants',
                destPath: '/v1/serviceOptionsAndVariants',
            },
            {
                srcPath: '/_api/v1/serviceOptionsAndVariants',
                destPath: '/v1/serviceOptionsAndVariants',
            },
        ],
        '*.dev.wix-code.com': [
            {
                srcPath: '/_api/v1/service-options-and-variants',
                destPath: '/v1/serviceOptionsAndVariants',
            },
        ],
        'editor._base_domain_': [
            {
                srcPath: '/_api/v1/service-options-and-variants',
                destPath: '/v1/serviceOptionsAndVariants',
            },
            {
                srcPath: '/_api/bookings/v1/service-options-and-variants',
                destPath: '/api',
            },
        ],
        'blocks._base_domain_': [
            {
                srcPath: '/_api/v1/service-options-and-variants',
                destPath: '/v1/serviceOptionsAndVariants',
            },
            {
                srcPath: '/_api/bookings/v1/service-options-and-variants',
                destPath: '/api',
            },
        ],
        'create.editorx': [
            {
                srcPath: '/_api/v1/service-options-and-variants',
                destPath: '/v1/serviceOptionsAndVariants',
            },
            {
                srcPath: '/_api/bookings/v1/service-options-and-variants',
                destPath: '/api',
            },
        ],
        'www.wixapis.com': [
            {
                srcPath: '/bookings/v1/serviceOptionsAndVariants',
                destPath: '/v1/serviceOptionsAndVariants',
            },
        ],
        'bo._base_domain_': [
            {
                srcPath: '/_api/v1/service-options-and-variants',
                destPath: '/v1/serviceOptionsAndVariants',
            },
        ],
        'wixbo.ai': [
            {
                srcPath: '/_api/v1/service-options-and-variants',
                destPath: '/v1/serviceOptionsAndVariants',
            },
        ],
        'wix-bo.com': [
            {
                srcPath: '/_api/v1/service-options-and-variants',
                destPath: '/v1/serviceOptionsAndVariants',
            },
        ],
    };
    return resolveUrl(Object.assign(opts, { domainToMappings }));
}
const PACKAGE_NAME = '@wix/auto_sdk_bookings_service-options-and-variants';
/**
 * Creates a `serviceOptionsAndVariants` object and for a service.
 *
 *
 * ## Calculate variants
 *
 * Before creating a `serviceOptionsAndVariants` object, you need to
 * anticipate and manually define all its variants, since Wix Bookings doesn't
 * automatically calculate them. For the actual
 * Create Service Options And Variants* call, specify both the `options` and
 * `variants` arrays.
 *
 * ## Limitations
 *
 * Wix Bookings allows you to connect only a single `serviceOptionsAndVariants`
 * object to a service. *Create Service Options And Variants* fails, if the
 * service already has a connected `serviceOptionsAndVariants` object.
 *
 * Currently, you can include only a single option per
 * `serviceOptionsAndVariants` object. Taken together, this means that services
 * are limited to a single option.
 *
 * ## Option ID
 *
 * When creating a`serviceOptionsAndVariants` object, you must specify an ID in
 * [UUID format](https://en.wikipedia.org/wiki/Universally_unique_identifier)
 * for its only option. You must reference this option ID for each variant as
 * `variants.values.choices.optionId`.
 *
 * ## Staff member option
 *
 * To creating an option based on the *staff member*
 * ([SDK](https://dev.wix.com/docs/sdk/backend-modules/bookings/staff-members/introduction) | [REST](https://dev.wix.com/docs/rest/business-solutions/bookings/staff-members/introduction))
 * providing the service, you need to specify `STAFF_MEMBER` as `options.values.type`.
 * Also, specify all staff member IDs as `variants.values.choices.staffMemberId`.
 * You could follow this *sample flow*
 * ([SDK](https://dev.wix.com/docs/sdk/backend-modules/bookings/service-options-and-variants/sample-flows#create-staff-member-based-service-variants) | [REST](https://dev.wix.com/docs/rest/business-solutions/bookings/services/service-options-and-variants/sample-flows#create-staff-member-based-service-variants)).
 *
 * ## Custom option
 *
 * To create an option based on a custom parameter, specify `CUSTOM` as
 * `options.values.type`. Provide descriptive names for all custom choices as
 * `variants.values.choices.custom`. These names are displayed to customers
 * during the book flow. You could follow this *sample flow*
 * ([SDK](https://dev.wix.com/docs/sdk/backend-modules/bookings/service-options-and-variants/sample-flows#create-service-variants-based-on-the-booked-equipment) | [REST](https://dev.wix.com/docs/rest/business-solutions/bookings/services/service-options-and-variants/sample-flows#create-service-variants-based-on-the-booked-equipment)).
 *
 * ## Duration option
 *
 * To create an option based on appointment duration, specify `DURATION` as
 * `options.values.type` and set a descriptive name in `options.values.durationData.name`.
 * Also, indicate the appointment length in `minutes` and provide a descriptive
 * `name` for each duration choice in `variants.values.choices.duration`.
 */
export function createServiceOptionsAndVariants(payload) {
    function __createServiceOptionsAndVariants({ host }) {
        const metadata = {
            entityFqdn: 'wix.bookings.catalog.v1.service_options_and_variants',
            method: 'POST',
            methodFqn: 'wix.bookings.catalog.v1.ServiceOptionsAndVariantsService.CreateServiceOptionsAndVariants',
            packageName: PACKAGE_NAME,
            url: resolveWixBookingsCatalogV1ServiceOptionsAndVariantsServiceUrl({
                protoPath: '/v1/serviceOptionsAndVariants',
                data: payload,
                host,
            }),
            data: payload,
        };
        return metadata;
    }
    return __createServiceOptionsAndVariants;
}
/**
 * Clones a `serviceOptionsAndVariants` object and connects it to a *service*
 * ([SDK](https://dev.wix.com/docs/rest/business-solutions/bookings/services/services-v2/introduction) | [REST](https://dev.wix.com/docs/sdk/backend-modules/bookings/services/introduction)).
 *
 *
 * The call fails if the service already has a connected
 * `serviceOptionsAndVariants` object.
 *
 * The cloned `serviceOptionsAndVariants` object gets a new, unique option ID.
 * The option ID of the existing `serviceOptionsAndVariants` object isn't reused.
 *
 * For example, you may call this method after *cloning a service*
 * ([SDK](https://dev.wix.com/docs/sdk/backend-modules/bookings/services/clone-service) | [REST](https://dev.wix.com/docs/rest/business-solutions/bookings/services/services-v2/clone-service)).
 */
export function cloneServiceOptionsAndVariants(payload) {
    function __cloneServiceOptionsAndVariants({ host }) {
        const metadata = {
            entityFqdn: 'wix.bookings.catalog.v1.service_options_and_variants',
            method: 'POST',
            methodFqn: 'wix.bookings.catalog.v1.ServiceOptionsAndVariantsService.CloneServiceOptionsAndVariants',
            packageName: PACKAGE_NAME,
            url: resolveWixBookingsCatalogV1ServiceOptionsAndVariantsServiceUrl({
                protoPath: '/v1/serviceOptionsAndVariants/{cloneFromId}/clone',
                data: payload,
                host,
            }),
            data: payload,
        };
        return metadata;
    }
    return __cloneServiceOptionsAndVariants;
}
/** Retrieves a `serviceOptionsAndVariants` object by its ID. */
export function getServiceOptionsAndVariants(payload) {
    function __getServiceOptionsAndVariants({ host }) {
        const metadata = {
            entityFqdn: 'wix.bookings.catalog.v1.service_options_and_variants',
            method: 'GET',
            methodFqn: 'wix.bookings.catalog.v1.ServiceOptionsAndVariantsService.GetServiceOptionsAndVariants',
            packageName: PACKAGE_NAME,
            url: resolveWixBookingsCatalogV1ServiceOptionsAndVariantsServiceUrl({
                protoPath: '/v1/serviceOptionsAndVariants/{serviceOptionsAndVariantsId}',
                data: payload,
                host,
            }),
            params: toURLSearchParams(payload),
            fallback: [
                {
                    method: 'GET',
                    url: resolveWixBookingsCatalogV1ServiceOptionsAndVariantsServiceUrl({
                        protoPath: '/v1/serviceOptionsAndVariants/{serviceOptionsAndVariantsId}',
                        data: payload,
                        host,
                    }),
                    params: toURLSearchParams(payload),
                },
            ],
        };
        return metadata;
    }
    return __getServiceOptionsAndVariants;
}
/**
 * Retrieves a `serviceOptionsAndVariants` object by *service ID*
 * ([SDK](https://dev.wix.com/docs/rest/business-solutions/bookings/services/services-v2/introduction) | [REST](https://dev.wix.com/docs/sdk/backend-modules/bookings/services/introduction)).
 */
export function getServiceOptionsAndVariantsByServiceId(payload) {
    function __getServiceOptionsAndVariantsByServiceId({ host }) {
        const metadata = {
            entityFqdn: 'wix.bookings.catalog.v1.service_options_and_variants',
            method: 'GET',
            methodFqn: 'wix.bookings.catalog.v1.ServiceOptionsAndVariantsService.GetServiceOptionsAndVariantsByServiceId',
            packageName: PACKAGE_NAME,
            url: resolveWixBookingsCatalogV1ServiceOptionsAndVariantsServiceUrl({
                protoPath: '/v1/serviceOptionsAndVariants/service_id/{serviceId}',
                data: payload,
                host,
            }),
            params: toURLSearchParams(payload),
            fallback: [
                {
                    method: 'GET',
                    url: resolveWixBookingsCatalogV1ServiceOptionsAndVariantsServiceUrl({
                        protoPath: '/v1/serviceOptionsAndVariants/service_id/{serviceId}',
                        data: payload,
                        host,
                    }),
                    params: toURLSearchParams(payload),
                },
            ],
        };
        return metadata;
    }
    return __getServiceOptionsAndVariantsByServiceId;
}
/**
 * Updates a `serviceOptionsAndVariants` object.
 *
 *
 * Currently, only a single option is supported per `serviceOptionsAndVariants` object.
 *
 * If you want to update `variants`, you must pass the entire list of supported
 * variants, not only newly added variants.
 *
 * If you want to update `options`, you must pass the entire list of supported
 * options, not only newly added options.
 */
export function updateServiceOptionsAndVariants(payload) {
    function __updateServiceOptionsAndVariants({ host }) {
        const serializedData = transformPaths(payload, [
            {
                transformFn: transformSDKFieldMaskToRESTFieldMask,
                paths: [{ path: 'mask' }],
            },
        ]);
        const metadata = {
            entityFqdn: 'wix.bookings.catalog.v1.service_options_and_variants',
            method: 'PATCH',
            methodFqn: 'wix.bookings.catalog.v1.ServiceOptionsAndVariantsService.UpdateServiceOptionsAndVariants',
            packageName: PACKAGE_NAME,
            url: resolveWixBookingsCatalogV1ServiceOptionsAndVariantsServiceUrl({
                protoPath: '/v1/serviceOptionsAndVariants/{serviceOptionsAndVariants.id}',
                data: serializedData,
                host,
            }),
            data: serializedData,
        };
        return metadata;
    }
    return __updateServiceOptionsAndVariants;
}
/**
 * Deletes a `serviceOptionsAndVariants` object.
 *
 *
 * Because each service can be connected to only a single `serviceOptionsAndVariants`
 * object, the service doesn't support *varied pricing*
 * ([SDK](https://dev.wix.com/docs/sdk/backend-modules/bookings/services/about-service-payments) | [REST](https://dev.wix.com/docs/rest/business-solutions/bookings/services/services-v2/about-service-payments#service-rates))
 * after deleting a `serviceOptionsAndVariants` object. Instead, Wix Bookings
 * uses its standard price calculation.
 */
export function deleteServiceOptionsAndVariants(payload) {
    function __deleteServiceOptionsAndVariants({ host }) {
        const metadata = {
            entityFqdn: 'wix.bookings.catalog.v1.service_options_and_variants',
            method: 'DELETE',
            methodFqn: 'wix.bookings.catalog.v1.ServiceOptionsAndVariantsService.DeleteServiceOptionsAndVariants',
            packageName: PACKAGE_NAME,
            url: resolveWixBookingsCatalogV1ServiceOptionsAndVariantsServiceUrl({
                protoPath: '/v1/serviceOptionsAndVariants/{serviceOptionsAndVariantsId}',
                data: payload,
                host,
            }),
            params: toURLSearchParams(payload),
        };
        return metadata;
    }
    return __deleteServiceOptionsAndVariants;
}
/**
 * Creates a query to retrieve a list of `serviceOptionsAndVariants` objects.
 *
 * The `queryServiceOptionsAndVariants()` function builds a query to retrieve a list of `serviceOptionsAndVariants` objects and returns a `ServiceOptionsAndVariantsQueryBuilder` object.
 *
 * The returned object contains the query definition, which is typically used to run the query using the [find()](https://dev.wix.com/docs/sdk/backend-modules/bookings/service-options-and-variants/service-options-and-variants-list-query-builder/find) function.
 *
 * You can refine the query by chaining `ServiceOptionsAndVariantsQueryBuilder` functions onto the query. `ServiceOptionsAndVariantsQueryBuilder` functions enable you to sort, filter, and control the results that `queryServiceOptionsAndVariants()` returns.
 *
 * `queryServiceOptionsAndVariants()` runs with the following `ServiceOptionsAndVariantsQueryBuilder` default that you can override:
 *
 * + `limit` is `50`.
 * + Sorted by `id` in ascending order.
 *
 * The functions that are chained to `queryServiceOptionsAndVariants()` are applied in the order they are called. For example, if you apply `ascending("options.values.type")` and then `ascending("variants.values.price")`, the results are sorted first by the `"type"`, and then, if there are multiple results with the same `"type"`, the items are sorted by `"price"`.
 *
 * The following `ServiceOptionsAndVariantsQueryBuilder` functions are supported for the `queryServiceOptionsAndVariants()` function. For a full description of the `serviceOptionsAndVariants` object, see the object returned for the [items](https://dev.wix.com/docs/sdk/backend-modules/bookings/service-options-and-variants/service-options-and-variants-list-query-result/items) property in `ServiceOptionsAndVariantsQueryResult`.
 */
export function queryServiceOptionsAndVariants(payload) {
    function __queryServiceOptionsAndVariants({ host }) {
        const metadata = {
            entityFqdn: 'wix.bookings.catalog.v1.service_options_and_variants',
            method: 'POST',
            methodFqn: 'wix.bookings.catalog.v1.ServiceOptionsAndVariantsService.QueryServiceOptionsAndVariants',
            packageName: PACKAGE_NAME,
            url: resolveWixBookingsCatalogV1ServiceOptionsAndVariantsServiceUrl({
                protoPath: '/v1/serviceOptionsAndVariants/query',
                data: payload,
                host,
            }),
            data: payload,
        };
        return metadata;
    }
    return __queryServiceOptionsAndVariants;
}
//# sourceMappingURL=bookings-catalog-v1-service-options-and-variants-service-options-and-variants.http.js.map