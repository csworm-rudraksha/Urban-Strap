"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.queryServiceOptionsAndVariants = exports.deleteServiceOptionsAndVariants = exports.updateServiceOptionsAndVariants = exports.getServiceOptionsAndVariantsByServiceId = exports.getServiceOptionsAndVariants = exports.cloneServiceOptionsAndVariants = exports.createServiceOptionsAndVariants = void 0;
const ambassadorWixBookingsCatalogV1ServiceOptionsAndVariants = __importStar(require("./bookings-catalog-v1-service-options-and-variants-service-options-and-variants.http.js"));
function createServiceOptionsAndVariants() {
    const payload = {};
    const getRequestOptions = ambassadorWixBookingsCatalogV1ServiceOptionsAndVariants.createServiceOptionsAndVariants(payload);
    const getUrl = (context) => {
        const { url } = getRequestOptions(context);
        return url;
    };
    return {
        getUrl,
        httpMethod: 'POST',
        path: '/v1/serviceOptionsAndVariants',
        pathParams: {},
        __requestType: null,
        __originalRequestType: null,
        __responseType: null,
        __originalResponseType: null,
    };
}
exports.createServiceOptionsAndVariants = createServiceOptionsAndVariants;
function cloneServiceOptionsAndVariants() {
    const payload = { cloneFromId: ':cloneFromId' };
    const getRequestOptions = ambassadorWixBookingsCatalogV1ServiceOptionsAndVariants.cloneServiceOptionsAndVariants(payload);
    const getUrl = (context) => {
        const { url } = getRequestOptions(context);
        return url;
    };
    return {
        getUrl,
        httpMethod: 'POST',
        path: '/v1/serviceOptionsAndVariants/{cloneFromId}/clone',
        pathParams: { cloneFromId: 'cloneFromId' },
        __requestType: null,
        __originalRequestType: null,
        __responseType: null,
        __originalResponseType: null,
    };
}
exports.cloneServiceOptionsAndVariants = cloneServiceOptionsAndVariants;
function getServiceOptionsAndVariants() {
    const payload = {
        serviceOptionsAndVariantsId: ':serviceOptionsAndVariantsId',
    };
    const getRequestOptions = ambassadorWixBookingsCatalogV1ServiceOptionsAndVariants.getServiceOptionsAndVariants(payload);
    const getUrl = (context) => {
        const { url } = getRequestOptions(context);
        return url;
    };
    return {
        getUrl,
        httpMethod: 'GET',
        path: '/v1/serviceOptionsAndVariants/{serviceOptionsAndVariantsId}',
        pathParams: { serviceOptionsAndVariantsId: 'serviceOptionsAndVariantsId' },
        __requestType: null,
        __originalRequestType: null,
        __responseType: null,
        __originalResponseType: null,
    };
}
exports.getServiceOptionsAndVariants = getServiceOptionsAndVariants;
function getServiceOptionsAndVariantsByServiceId() {
    const payload = { serviceId: ':serviceId' };
    const getRequestOptions = ambassadorWixBookingsCatalogV1ServiceOptionsAndVariants.getServiceOptionsAndVariantsByServiceId(payload);
    const getUrl = (context) => {
        const { url } = getRequestOptions(context);
        return url;
    };
    return {
        getUrl,
        httpMethod: 'GET',
        path: '/v1/serviceOptionsAndVariants/service_id/{serviceId}',
        pathParams: { serviceId: 'serviceId' },
        __requestType: null,
        __originalRequestType: null,
        __responseType: null,
        __originalResponseType: null,
    };
}
exports.getServiceOptionsAndVariantsByServiceId = getServiceOptionsAndVariantsByServiceId;
function updateServiceOptionsAndVariants() {
    const payload = {
        serviceOptionsAndVariants: { id: ':serviceOptionsAndVariantsId' },
    };
    const getRequestOptions = ambassadorWixBookingsCatalogV1ServiceOptionsAndVariants.updateServiceOptionsAndVariants(payload);
    const getUrl = (context) => {
        const { url } = getRequestOptions(context);
        return url;
    };
    return {
        getUrl,
        httpMethod: 'PATCH',
        path: '/v1/serviceOptionsAndVariants/{serviceOptionsAndVariants.id}',
        pathParams: { serviceOptionsAndVariantsId: 'serviceOptionsAndVariantsId' },
        __requestType: null,
        __originalRequestType: null,
        __responseType: null,
        __originalResponseType: null,
    };
}
exports.updateServiceOptionsAndVariants = updateServiceOptionsAndVariants;
function deleteServiceOptionsAndVariants() {
    const payload = {
        serviceOptionsAndVariantsId: ':serviceOptionsAndVariantsId',
    };
    const getRequestOptions = ambassadorWixBookingsCatalogV1ServiceOptionsAndVariants.deleteServiceOptionsAndVariants(payload);
    const getUrl = (context) => {
        const { url } = getRequestOptions(context);
        return url;
    };
    return {
        getUrl,
        httpMethod: 'DELETE',
        path: '/v1/serviceOptionsAndVariants/{serviceOptionsAndVariantsId}',
        pathParams: { serviceOptionsAndVariantsId: 'serviceOptionsAndVariantsId' },
        __requestType: null,
        __originalRequestType: null,
        __responseType: null,
        __originalResponseType: null,
    };
}
exports.deleteServiceOptionsAndVariants = deleteServiceOptionsAndVariants;
function queryServiceOptionsAndVariants() {
    const payload = {};
    const getRequestOptions = ambassadorWixBookingsCatalogV1ServiceOptionsAndVariants.queryServiceOptionsAndVariants(payload);
    const getUrl = (context) => {
        const { url } = getRequestOptions(context);
        return url;
    };
    return {
        getUrl,
        httpMethod: 'POST',
        path: '/v1/serviceOptionsAndVariants/query',
        pathParams: {},
        __requestType: null,
        __originalRequestType: null,
        __responseType: null,
        __originalResponseType: null,
    };
}
exports.queryServiceOptionsAndVariants = queryServiceOptionsAndVariants;
//# sourceMappingURL=bookings-catalog-v1-service-options-and-variants-service-options-and-variants.meta.js.map