"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.WebhookIdentityType = exports.ResolutionMethod = exports.PlacementType = exports.SessionType = exports.Status = exports.CalendarType = exports.Event = exports.ResourceStatus = exports.ConferenceType = exports.ScheduleStatus = exports.ApprovalStatus = exports.DayOfWeek = exports.LocationsLocationType = exports.LocationStatus = exports.LocationType = exports.RecurringIntervalType = exports.Transparency = exports.Day = exports.SortOrder = exports.ServiceOptionType = void 0;
var ServiceOptionType;
(function (ServiceOptionType) {
    /** There is no information about the option type. */
    ServiceOptionType["UNKNOWN"] = "UNKNOWN";
    /**
     * The service option is based on a custom parameter. For example, age group,
     * booked equipment, or appointment timing.
     */
    ServiceOptionType["CUSTOM"] = "CUSTOM";
    /**
     * It's a *staff member*
     * ([SDK](https://dev.wix.com/docs/sdk/backend-modules/bookings/staff-members/introduction) | [REST](https://dev.wix.com/docs/rest/business-solutions/bookings/staff-members/introduction))
     * based option.
     */
    ServiceOptionType["STAFF_MEMBER"] = "STAFF_MEMBER";
    /** It's a duration-based option. */
    ServiceOptionType["DURATION"] = "DURATION";
})(ServiceOptionType || (exports.ServiceOptionType = ServiceOptionType = {}));
var SortOrder;
(function (SortOrder) {
    SortOrder["ASC"] = "ASC";
    SortOrder["DESC"] = "DESC";
})(SortOrder || (exports.SortOrder = SortOrder = {}));
var Day;
(function (Day) {
    /** Undefined. */
    Day["UNDEFINED"] = "UNDEFINED";
    /** Monday. */
    Day["MON"] = "MON";
    /** Tuesday. */
    Day["TUE"] = "TUE";
    /** Wednesday. */
    Day["WED"] = "WED";
    /** Thursday. */
    Day["THU"] = "THU";
    /** Friday. */
    Day["FRI"] = "FRI";
    /** Saturday. */
    Day["SAT"] = "SAT";
    /** Sunday. */
    Day["SUN"] = "SUN";
})(Day || (exports.Day = Day = {}));
var Transparency;
(function (Transparency) {
    Transparency["UNDEFINED"] = "UNDEFINED";
    /** The schedule can have available slots during the linked schedule's sessions. */
    Transparency["FREE"] = "FREE";
    /** The schedule can't have available slots during the linked schedule's sessions. */
    Transparency["BUSY"] = "BUSY";
})(Transparency || (exports.Transparency = Transparency = {}));
var RecurringIntervalType;
(function (RecurringIntervalType) {
    /** The default value. Sessions for this interval will be of type EVENT. */
    RecurringIntervalType["UNDEFINED"] = "UNDEFINED";
    /** A recurring interval of events. */
    RecurringIntervalType["EVENT"] = "EVENT";
    /** Deprecated. */
    RecurringIntervalType["TIME_AVAILABILITY"] = "TIME_AVAILABILITY";
    /** A recurring interval for availability. */
    RecurringIntervalType["AVAILABILITY"] = "AVAILABILITY";
})(RecurringIntervalType || (exports.RecurringIntervalType = RecurringIntervalType = {}));
var LocationType;
(function (LocationType) {
    LocationType["UNDEFINED"] = "UNDEFINED";
    LocationType["OWNER_BUSINESS"] = "OWNER_BUSINESS";
    LocationType["OWNER_CUSTOM"] = "OWNER_CUSTOM";
    LocationType["CUSTOM"] = "CUSTOM";
})(LocationType || (exports.LocationType = LocationType = {}));
/** For future use */
var LocationStatus;
(function (LocationStatus) {
    LocationStatus["ACTIVE"] = "ACTIVE";
    LocationStatus["INACTIVE"] = "INACTIVE";
})(LocationStatus || (exports.LocationStatus = LocationStatus = {}));
/** For future use */
var LocationsLocationType;
(function (LocationsLocationType) {
    LocationsLocationType["UNKNOWN"] = "UNKNOWN";
    LocationsLocationType["BRANCH"] = "BRANCH";
    LocationsLocationType["OFFICES"] = "OFFICES";
    LocationsLocationType["RECEPTION"] = "RECEPTION";
    LocationsLocationType["HEADQUARTERS"] = "HEADQUARTERS";
    LocationsLocationType["INVENTORY"] = "INVENTORY";
})(LocationsLocationType || (exports.LocationsLocationType = LocationsLocationType = {}));
/** Enumerates the days of the week. */
var DayOfWeek;
(function (DayOfWeek) {
    DayOfWeek["MONDAY"] = "MONDAY";
    DayOfWeek["TUESDAY"] = "TUESDAY";
    DayOfWeek["WEDNESDAY"] = "WEDNESDAY";
    DayOfWeek["THURSDAY"] = "THURSDAY";
    DayOfWeek["FRIDAY"] = "FRIDAY";
    DayOfWeek["SATURDAY"] = "SATURDAY";
    DayOfWeek["SUNDAY"] = "SUNDAY";
})(DayOfWeek || (exports.DayOfWeek = DayOfWeek = {}));
var ApprovalStatus;
(function (ApprovalStatus) {
    /** Default. */
    ApprovalStatus["UNDEFINED"] = "UNDEFINED";
    /** Pending business approval. */
    ApprovalStatus["PENDING"] = "PENDING";
    /** Approved by the business. */
    ApprovalStatus["APPROVED"] = "APPROVED";
    /** Declined by the business. */
    ApprovalStatus["DECLINED"] = "DECLINED";
})(ApprovalStatus || (exports.ApprovalStatus = ApprovalStatus = {}));
var ScheduleStatus;
(function (ScheduleStatus) {
    /** Undefined schedule status. */
    ScheduleStatus["UNDEFINED"] = "UNDEFINED";
    /** The schedule was created. */
    ScheduleStatus["CREATED"] = "CREATED";
    /** The schedule was cancelled. */
    ScheduleStatus["CANCELLED"] = "CANCELLED";
})(ScheduleStatus || (exports.ScheduleStatus = ScheduleStatus = {}));
var ConferenceType;
(function (ConferenceType) {
    /** Undefined conference type. */
    ConferenceType["UNDEFINED"] = "UNDEFINED";
    /** API-generated online meeting. */
    ConferenceType["ONLINE_MEETING_PROVIDER"] = "ONLINE_MEETING_PROVIDER";
    /** User-defined meeting. */
    ConferenceType["CUSTOM"] = "CUSTOM";
})(ConferenceType || (exports.ConferenceType = ConferenceType = {}));
var ResourceStatus;
(function (ResourceStatus) {
    /** Undefined resource status. */
    ResourceStatus["UNDEFINED"] = "UNDEFINED";
    /** The resource was created. */
    ResourceStatus["CREATED"] = "CREATED";
    /** The resource was deleted. */
    ResourceStatus["DELETED"] = "DELETED";
    /** The resource was updated. */
    ResourceStatus["UPDATED"] = "UPDATED";
})(ResourceStatus || (exports.ResourceStatus = ResourceStatus = {}));
var Event;
(function (Event) {
    /** Undefined resource event. */
    Event["UNDEFINED"] = "UNDEFINED";
    /** The resource was updated. */
    Event["Updated"] = "Updated";
    /** The resource was deleted. */
    Event["Deleted"] = "Deleted";
    /** The resource was created. */
    Event["Created"] = "Created";
    /** The schedule was updated. */
    Event["Schedule_Updated"] = "Schedule_Updated";
})(Event || (exports.Event = Event = {}));
var CalendarType;
(function (CalendarType) {
    /** There is no information about the external calendar type. */
    CalendarType["UNDEFINED"] = "UNDEFINED";
    /** [Google Calendar](https://developers.google.com/calendar/api/guides/overview). */
    CalendarType["GOOGLE"] = "GOOGLE";
    /** Apple iCalendar. */
    CalendarType["I_CAL"] = "I_CAL";
    /** __Deprecated__. Use `MICROSOFT` instead. */
    CalendarType["OUTLOOK"] = "OUTLOOK";
    /** __Deprecated__. Use `MICROSOFT` instead. */
    CalendarType["OFFICE_365"] = "OFFICE_365";
    /** Microsoft Calendar. For example, Office 365 calendar or Outlook calendar. */
    CalendarType["MICROSOFT"] = "MICROSOFT";
    /** A different type of external calendar, not listed here. */
    CalendarType["OTHER"] = "OTHER";
})(CalendarType || (exports.CalendarType = CalendarType = {}));
var Status;
(function (Status) {
    /** Undefined status. */
    Status["UNDEFINED"] = "UNDEFINED";
    /** Session is confirmed. Default status. */
    Status["CONFIRMED"] = "CONFIRMED";
    /**
     * Session is cancelled.
     * A cancelled session can be the cancellation of a recurring session that should no longer be displayed or a deleted single session.
     * The ListSessions returns cancelled sessions only if 'includeDelete' flag is set to true.
     */
    Status["CANCELLED"] = "CANCELLED";
})(Status || (exports.Status = Status = {}));
var SessionType;
(function (SessionType) {
    SessionType["UNDEFINED"] = "UNDEFINED";
    /**
     * Creates an event on the calendar for the owner of the schedule that the session belongs to.
     * Default type.
     */
    SessionType["EVENT"] = "EVENT";
    /** Represents a resource's available working hours. */
    SessionType["WORKING_HOURS"] = "WORKING_HOURS";
    /** Deprecated. Please use WORKING_HOURS. */
    SessionType["TIME_AVAILABILITY"] = "TIME_AVAILABILITY";
    /** Deprecated. Represents a resource's available hours. Please use WORKING_HOURS. */
    SessionType["AVAILABILITY"] = "AVAILABILITY";
})(SessionType || (exports.SessionType = SessionType = {}));
/** Where the extra text should be displayed: before, after or instead of the actual address. */
var PlacementType;
(function (PlacementType) {
    PlacementType["BEFORE"] = "BEFORE";
    PlacementType["AFTER"] = "AFTER";
    PlacementType["REPLACE"] = "REPLACE";
})(PlacementType || (exports.PlacementType = PlacementType = {}));
var ResolutionMethod;
(function (ResolutionMethod) {
    ResolutionMethod["QUERY_PARAM"] = "QUERY_PARAM";
    ResolutionMethod["SUBDOMAIN"] = "SUBDOMAIN";
    ResolutionMethod["SUBDIRECTORY"] = "SUBDIRECTORY";
})(ResolutionMethod || (exports.ResolutionMethod = ResolutionMethod = {}));
var WebhookIdentityType;
(function (WebhookIdentityType) {
    WebhookIdentityType["UNKNOWN"] = "UNKNOWN";
    WebhookIdentityType["ANONYMOUS_VISITOR"] = "ANONYMOUS_VISITOR";
    WebhookIdentityType["MEMBER"] = "MEMBER";
    WebhookIdentityType["WIX_USER"] = "WIX_USER";
    WebhookIdentityType["APP"] = "APP";
})(WebhookIdentityType || (exports.WebhookIdentityType = WebhookIdentityType = {}));
//# sourceMappingURL=bookings-catalog-v1-service-options-and-variants-service-options-and-variants.types.js.map