import { RequestOptionsFactory } from '@wix/sdk-types';
/**
 * Creates a tax group.
 *
 * Call Stores Update Product to add the `taxGroupId` to specific products to categorize as a group based on distinct tax treatment.
 * Wix uses tax groups to calculate tax.
 *
 * In addition to tax groups you create, default tax groups are already included in all Wix catalogs.
 * Call List Default Tax Groups to retrieve them. You can also use the Tax Groups Integration service plugin (REST only)
 * to create new default tax groups that can be applied directly to an entire catalog of products.
 */
export declare function createTaxGroup(payload: object): RequestOptionsFactory<any>;
/** Retrieves a tax group. */
export declare function getTaxGroup(payload: object): RequestOptionsFactory<any>;
/**
 * Updates a tax group.
 *
 * Each time the tax group is updated, `revision` increments by 1.
 * The current `revision` must be passed when updating the tax group.
 * This ensures you're working with the latest tax group and prevents
 * unintended overwrites.
 */
export declare function updateTaxGroup(payload: object): RequestOptionsFactory<any>;
/**
 * Deletes a tax group.
 *
 * If a tax group is deleted but the `taxGroupId` is still assigned to a product (see Stores Products API) then the default tax group is used to calculate tax.
 */
export declare function deleteTaxGroup(payload: object): RequestOptionsFactory<any>;
/**
 * Creates a query to retrieve a list of tax groups.
 *
 * The `queryTaxGroups()` function builds a query to retrieve a list of tax groups and returns a `TaxGroupsQueryBuilder` object.
 *
 * The returned object contains the query definition, which is typically used to run the query using the `find()` function.
 *
 * You can refine the query by chaining `TaxGroupsQueryBuilder` functions onto the query. `TaxGroupsQueryBuilder` functions enable you to sort, filter, and control the results that `queryTaxGroups()` returns.
 *
 * `queryTaxGroups()` runs with the following `TaxGroupsQueryBuilder` default that you can override:
 * + `ascending("_id")`
 *
 * The functions that are chained to `queryTaxGroups()` are applied in the order they are called. For example, if you apply `ascending("name")` and then `ascending("_createdDate")`, the results are sorted first by the `"name"`, and then, if there are multiple results with the same `"name"`, the items are sorted by `"_createdDate"`.
 *
 * The following `TaxGroupsQueryBuilder` functions are supported for the `queryTaxGroups()` function. For a full description of the tax group object, see the object returned for the `items` property in `TaxGroupsQueryResult`.
 */
export declare function queryTaxGroups(payload: object): RequestOptionsFactory<any>;
/**
 * Retrieves a list of default tax groups.
 *
 * The default tax groups for a site are inherited by the apps installed on the site.
 * For example, the Wix Stores app includes a `"Products"` tax group by default.
 *
 * Add additional default tax groups with the Tax Groups Integration service plugin (REST only).
 */
export declare function listDefaultTaxGroups(payload: object): RequestOptionsFactory<any>;
/** Retrieves default tax groups for specific apps. */
export declare function listDefaultTaxGroupsByAppIds(payload: object): RequestOptionsFactory<any>;
