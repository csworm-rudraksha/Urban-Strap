"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.listDefaultTaxGroupsByAppIds = exports.listDefaultTaxGroups = exports.queryTaxGroups = exports.deleteTaxGroup = exports.updateTaxGroup = exports.getTaxGroup = exports.createTaxGroup = void 0;
const rest_modules_1 = require("@wix/sdk-runtime/rest-modules");
const timestamp_1 = require("@wix/sdk-runtime/transformations/timestamp");
const timestamp_2 = require("@wix/sdk-runtime/transformations/timestamp");
const field_mask_1 = require("@wix/sdk-runtime/transformations/field-mask");
const transform_paths_1 = require("@wix/sdk-runtime/transformations/transform-paths");
const rest_modules_2 = require("@wix/sdk-runtime/rest-modules");
function resolveWixBillingV1TaxGroupsUrl(opts) {
    const domainToMappings = {
        'www.wixapis.com': [
            {
                srcPath: '/billing/v1/tax-groups',
                destPath: '/v1/tax-groups',
            },
        ],
        'manage._base_domain_': [
            {
                srcPath: '/billing/v1/tax-groups',
                destPath: '/v1/tax-groups',
            },
        ],
    };
    return (0, rest_modules_2.resolveUrl)(Object.assign(opts, { domainToMappings }));
}
const PACKAGE_NAME = '@wix/auto_sdk_ecom_tax-groups';
/**
 * Creates a tax group.
 *
 * Call Stores Update Product to add the `taxGroupId` to specific products to categorize as a group based on distinct tax treatment.
 * Wix uses tax groups to calculate tax.
 *
 * In addition to tax groups you create, default tax groups are already included in all Wix catalogs.
 * Call List Default Tax Groups to retrieve them. You can also use the Tax Groups Integration service plugin (REST only)
 * to create new default tax groups that can be applied directly to an entire catalog of products.
 */
function createTaxGroup(payload) {
    function __createTaxGroup({ host }) {
        const serializedData = (0, transform_paths_1.transformPaths)(payload, [
            {
                transformFn: timestamp_1.transformSDKTimestampToRESTTimestamp,
                paths: [
                    { path: 'taxGroup.createdDate' },
                    { path: 'taxGroup.updatedDate' },
                ],
            },
        ]);
        const metadata = {
            entityFqdn: 'wix.billing.v1.tax_group',
            method: 'POST',
            methodFqn: 'wix.billing.v1.TaxGroups.CreateTaxGroup',
            packageName: PACKAGE_NAME,
            url: resolveWixBillingV1TaxGroupsUrl({
                protoPath: '/v1/tax-groups',
                data: serializedData,
                host,
            }),
            data: serializedData,
            transformResponse: (payload) => (0, transform_paths_1.transformPaths)(payload, [
                {
                    transformFn: timestamp_2.transformRESTTimestampToSDKTimestamp,
                    paths: [
                        { path: 'taxGroup.createdDate' },
                        { path: 'taxGroup.updatedDate' },
                    ],
                },
            ]),
        };
        return metadata;
    }
    return __createTaxGroup;
}
exports.createTaxGroup = createTaxGroup;
/** Retrieves a tax group. */
function getTaxGroup(payload) {
    function __getTaxGroup({ host }) {
        const metadata = {
            entityFqdn: 'wix.billing.v1.tax_group',
            method: 'GET',
            methodFqn: 'wix.billing.v1.TaxGroups.GetTaxGroup',
            packageName: PACKAGE_NAME,
            url: resolveWixBillingV1TaxGroupsUrl({
                protoPath: '/v1/tax-groups/{taxGroupId}',
                data: payload,
                host,
            }),
            params: (0, rest_modules_1.toURLSearchParams)(payload),
            transformResponse: (payload) => (0, transform_paths_1.transformPaths)(payload, [
                {
                    transformFn: timestamp_2.transformRESTTimestampToSDKTimestamp,
                    paths: [
                        { path: 'taxGroup.createdDate' },
                        { path: 'taxGroup.updatedDate' },
                    ],
                },
            ]),
        };
        return metadata;
    }
    return __getTaxGroup;
}
exports.getTaxGroup = getTaxGroup;
/**
 * Updates a tax group.
 *
 * Each time the tax group is updated, `revision` increments by 1.
 * The current `revision` must be passed when updating the tax group.
 * This ensures you're working with the latest tax group and prevents
 * unintended overwrites.
 */
function updateTaxGroup(payload) {
    function __updateTaxGroup({ host }) {
        const serializedData = (0, transform_paths_1.transformPaths)(payload, [
            {
                transformFn: field_mask_1.transformSDKFieldMaskToRESTFieldMask,
                paths: [{ path: 'fieldMask' }],
            },
            {
                transformFn: timestamp_1.transformSDKTimestampToRESTTimestamp,
                paths: [
                    { path: 'taxGroup.createdDate' },
                    { path: 'taxGroup.updatedDate' },
                ],
            },
        ]);
        const metadata = {
            entityFqdn: 'wix.billing.v1.tax_group',
            method: 'PATCH',
            methodFqn: 'wix.billing.v1.TaxGroups.UpdateTaxGroup',
            packageName: PACKAGE_NAME,
            url: resolveWixBillingV1TaxGroupsUrl({
                protoPath: '/v1/tax-groups/{taxGroup.id}',
                data: serializedData,
                host,
            }),
            data: serializedData,
            transformResponse: (payload) => (0, transform_paths_1.transformPaths)(payload, [
                {
                    transformFn: timestamp_2.transformRESTTimestampToSDKTimestamp,
                    paths: [
                        { path: 'taxGroup.createdDate' },
                        { path: 'taxGroup.updatedDate' },
                    ],
                },
            ]),
        };
        return metadata;
    }
    return __updateTaxGroup;
}
exports.updateTaxGroup = updateTaxGroup;
/**
 * Deletes a tax group.
 *
 * If a tax group is deleted but the `taxGroupId` is still assigned to a product (see Stores Products API) then the default tax group is used to calculate tax.
 */
function deleteTaxGroup(payload) {
    function __deleteTaxGroup({ host }) {
        const metadata = {
            entityFqdn: 'wix.billing.v1.tax_group',
            method: 'DELETE',
            methodFqn: 'wix.billing.v1.TaxGroups.DeleteTaxGroup',
            packageName: PACKAGE_NAME,
            url: resolveWixBillingV1TaxGroupsUrl({
                protoPath: '/v1/tax-groups/{taxGroupId}',
                data: payload,
                host,
            }),
            params: (0, rest_modules_1.toURLSearchParams)(payload),
        };
        return metadata;
    }
    return __deleteTaxGroup;
}
exports.deleteTaxGroup = deleteTaxGroup;
/**
 * Creates a query to retrieve a list of tax groups.
 *
 * The `queryTaxGroups()` function builds a query to retrieve a list of tax groups and returns a `TaxGroupsQueryBuilder` object.
 *
 * The returned object contains the query definition, which is typically used to run the query using the `find()` function.
 *
 * You can refine the query by chaining `TaxGroupsQueryBuilder` functions onto the query. `TaxGroupsQueryBuilder` functions enable you to sort, filter, and control the results that `queryTaxGroups()` returns.
 *
 * `queryTaxGroups()` runs with the following `TaxGroupsQueryBuilder` default that you can override:
 * + `ascending("_id")`
 *
 * The functions that are chained to `queryTaxGroups()` are applied in the order they are called. For example, if you apply `ascending("name")` and then `ascending("_createdDate")`, the results are sorted first by the `"name"`, and then, if there are multiple results with the same `"name"`, the items are sorted by `"_createdDate"`.
 *
 * The following `TaxGroupsQueryBuilder` functions are supported for the `queryTaxGroups()` function. For a full description of the tax group object, see the object returned for the `items` property in `TaxGroupsQueryResult`.
 */
function queryTaxGroups(payload) {
    function __queryTaxGroups({ host }) {
        const metadata = {
            entityFqdn: 'wix.billing.v1.tax_group',
            method: 'POST',
            methodFqn: 'wix.billing.v1.TaxGroups.QueryTaxGroups',
            packageName: PACKAGE_NAME,
            url: resolveWixBillingV1TaxGroupsUrl({
                protoPath: '/v1/tax-groups/query',
                data: payload,
                host,
            }),
            data: payload,
            transformResponse: (payload) => (0, transform_paths_1.transformPaths)(payload, [
                {
                    transformFn: timestamp_2.transformRESTTimestampToSDKTimestamp,
                    paths: [
                        { path: 'taxGroups.createdDate' },
                        { path: 'taxGroups.updatedDate' },
                    ],
                },
            ]),
        };
        return metadata;
    }
    return __queryTaxGroups;
}
exports.queryTaxGroups = queryTaxGroups;
/**
 * Retrieves a list of default tax groups.
 *
 * The default tax groups for a site are inherited by the apps installed on the site.
 * For example, the Wix Stores app includes a `"Products"` tax group by default.
 *
 * Add additional default tax groups with the Tax Groups Integration service plugin (REST only).
 */
function listDefaultTaxGroups(payload) {
    function __listDefaultTaxGroups({ host }) {
        const metadata = {
            entityFqdn: 'wix.billing.v1.tax_group',
            method: 'GET',
            methodFqn: 'wix.billing.v1.TaxGroups.ListDefaultTaxGroups',
            packageName: PACKAGE_NAME,
            url: resolveWixBillingV1TaxGroupsUrl({
                protoPath: '/v1/tax-groups/default-tax-groups',
                data: payload,
                host,
            }),
            params: (0, rest_modules_1.toURLSearchParams)(payload),
            transformResponse: (payload) => (0, transform_paths_1.transformPaths)(payload, [
                {
                    transformFn: timestamp_2.transformRESTTimestampToSDKTimestamp,
                    paths: [
                        { path: 'taxGroups.createdDate' },
                        { path: 'taxGroups.updatedDate' },
                    ],
                },
            ]),
        };
        return metadata;
    }
    return __listDefaultTaxGroups;
}
exports.listDefaultTaxGroups = listDefaultTaxGroups;
/** Retrieves default tax groups for specific apps. */
function listDefaultTaxGroupsByAppIds(payload) {
    function __listDefaultTaxGroupsByAppIds({ host }) {
        const metadata = {
            entityFqdn: 'wix.billing.v1.tax_group',
            method: 'POST',
            methodFqn: 'wix.billing.v1.TaxGroups.ListDefaultTaxGroupsByAppIds',
            packageName: PACKAGE_NAME,
            url: resolveWixBillingV1TaxGroupsUrl({
                protoPath: '/v1/tax-groups/list-default-tax-groups-by-app-ids',
                data: payload,
                host,
            }),
            data: payload,
            transformResponse: (payload) => (0, transform_paths_1.transformPaths)(payload, [
                {
                    transformFn: timestamp_2.transformRESTTimestampToSDKTimestamp,
                    paths: [
                        { path: 'results.taxGroup.createdDate' },
                        { path: 'results.taxGroup.updatedDate' },
                    ],
                },
            ]),
        };
        return metadata;
    }
    return __listDefaultTaxGroupsByAppIds;
}
exports.listDefaultTaxGroupsByAppIds = listDefaultTaxGroupsByAppIds;
//# sourceMappingURL=billing-v1-tax-group-tax-groups.http.js.map