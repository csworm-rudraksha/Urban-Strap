"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// index.ts
var index_exports = {};
__export(index_exports, {
  DeleteStatus: () => DeleteStatus,
  Namespace: () => Namespace,
  SiteCreatedContext: () => SiteCreatedContext,
  State: () => State,
  createMemberRoleDefinition: () => createMemberRoleDefinition4,
  deleteMemberRoleDefinition: () => deleteMemberRoleDefinition4,
  getMemberRoleDefinition: () => getMemberRoleDefinition4,
  listMemberRoleDefinitions: () => listMemberRoleDefinitions4,
  updateMemberRoleDefinition: () => updateMemberRoleDefinition4
});
module.exports = __toCommonJS(index_exports);

// src/members-v1-member-role-definition-member-role-definition.universal.ts
var import_transform_error = require("@wix/sdk-runtime/transform-error");
var import_rename_all_nested_keys = require("@wix/sdk-runtime/rename-all-nested-keys");

// src/members-v1-member-role-definition-member-role-definition.http.ts
var import_rest_modules = require("@wix/sdk-runtime/rest-modules");
var import_rest_modules2 = require("@wix/sdk-runtime/rest-modules");
function resolveComWixpressMembersMemberrolesMemberRoleDefinitionsUrl(opts) {
  const domainToMappings = {
    "api._api_base_domain_": [
      {
        srcPath: "/members/v1/roles",
        destPath: ""
      }
    ],
    _: [
      {
        srcPath: "/_api/members/v1/roles",
        destPath: "/v1/roles"
      }
    ],
    "www._base_domain_": [
      {
        srcPath: "/_api/members/v1/roles",
        destPath: "/v1/roles"
      }
    ],
    "members.wixapps.net": [
      {
        srcPath: "/_api/members/v1/roles",
        destPath: "/v1/roles"
      }
    ],
    "www.wixapis.com": [
      {
        srcPath: "/members/v1/roles",
        destPath: "/v1/roles"
      }
    ],
    "editor._base_domain_": [
      {
        srcPath: "/_api/members/v1/roles",
        destPath: "/v1/roles"
      }
    ],
    "blocks._base_domain_": [
      {
        srcPath: "/_api/members/v1/roles",
        destPath: "/v1/roles"
      }
    ],
    "create.editorx": [
      {
        srcPath: "/_api/members/v1/roles",
        destPath: "/v1/roles"
      }
    ],
    "*.dev.wix-code.com": [
      {
        srcPath: "/_api/members/v1/roles",
        destPath: "/v1/roles"
      }
    ],
    "manage._base_domain_": [
      {
        srcPath: "/_api/members/v1/roles",
        destPath: "/v1/roles"
      }
    ]
  };
  return (0, import_rest_modules2.resolveUrl)(Object.assign(opts, { domainToMappings }));
}
var PACKAGE_NAME = "@wix/auto_sdk_members_member-role-definition";
function createMemberRoleDefinition(payload) {
  function __createMemberRoleDefinition({ host }) {
    const metadata = {
      entityFqdn: "wix.members.v1.member_role_definition",
      method: "POST",
      methodFqn: "com.wixpress.members.memberroles.MemberRoleDefinitions.CreateMemberRoleDefinition",
      packageName: PACKAGE_NAME,
      url: resolveComWixpressMembersMemberrolesMemberRoleDefinitionsUrl({
        protoPath: "/v1/roles/definitions",
        data: payload,
        host
      }),
      data: payload
    };
    return metadata;
  }
  return __createMemberRoleDefinition;
}
function listMemberRoleDefinitions(payload) {
  function __listMemberRoleDefinitions({ host }) {
    const metadata = {
      entityFqdn: "wix.members.v1.member_role_definition",
      method: "GET",
      methodFqn: "com.wixpress.members.memberroles.MemberRoleDefinitions.ListMemberRoleDefinitions",
      packageName: PACKAGE_NAME,
      url: resolveComWixpressMembersMemberrolesMemberRoleDefinitionsUrl({
        protoPath: "/v1/roles/definitions",
        data: payload,
        host
      }),
      params: (0, import_rest_modules.toURLSearchParams)(payload)
    };
    return metadata;
  }
  return __listMemberRoleDefinitions;
}
function getMemberRoleDefinition(payload) {
  function __getMemberRoleDefinition({ host }) {
    const metadata = {
      entityFqdn: "wix.members.v1.member_role_definition",
      method: "GET",
      methodFqn: "com.wixpress.members.memberroles.MemberRoleDefinitions.GetMemberRoleDefinition",
      packageName: PACKAGE_NAME,
      url: resolveComWixpressMembersMemberrolesMemberRoleDefinitionsUrl({
        protoPath: "/v1/roles/definitions/{roleKey}",
        data: payload,
        host
      }),
      params: (0, import_rest_modules.toURLSearchParams)(payload)
    };
    return metadata;
  }
  return __getMemberRoleDefinition;
}
function updateMemberRoleDefinition(payload) {
  function __updateMemberRoleDefinition({ host }) {
    const metadata = {
      entityFqdn: "wix.members.v1.member_role_definition",
      method: "PATCH",
      methodFqn: "com.wixpress.members.memberroles.MemberRoleDefinitions.UpdateMemberRoleDefinition",
      packageName: PACKAGE_NAME,
      url: resolveComWixpressMembersMemberrolesMemberRoleDefinitionsUrl({
        protoPath: "/v1/roles/definitions/{key}",
        data: payload,
        host
      }),
      data: payload
    };
    return metadata;
  }
  return __updateMemberRoleDefinition;
}
function deleteMemberRoleDefinition(payload) {
  function __deleteMemberRoleDefinition({ host }) {
    const metadata = {
      entityFqdn: "wix.members.v1.member_role_definition",
      method: "DELETE",
      methodFqn: "com.wixpress.members.memberroles.MemberRoleDefinitions.DeleteMemberRoleDefinition",
      packageName: PACKAGE_NAME,
      url: resolveComWixpressMembersMemberrolesMemberRoleDefinitionsUrl({
        protoPath: "/v1/roles/definitions/{roleKey}",
        data: payload,
        host
      }),
      params: (0, import_rest_modules.toURLSearchParams)(payload)
    };
    return metadata;
  }
  return __deleteMemberRoleDefinition;
}

// src/members-v1-member-role-definition-member-role-definition.universal.ts
var State = /* @__PURE__ */ ((State2) => {
  State2["UNKNOWN"] = "UNKNOWN";
  State2["ENABLED"] = "ENABLED";
  State2["DISABLED"] = "DISABLED";
  State2["PENDING"] = "PENDING";
  State2["DEMO"] = "DEMO";
  return State2;
})(State || {});
var SiteCreatedContext = /* @__PURE__ */ ((SiteCreatedContext2) => {
  SiteCreatedContext2["OTHER"] = "OTHER";
  SiteCreatedContext2["FROM_TEMPLATE"] = "FROM_TEMPLATE";
  SiteCreatedContext2["DUPLICATE_BY_SITE_TRANSFER"] = "DUPLICATE_BY_SITE_TRANSFER";
  SiteCreatedContext2["DUPLICATE"] = "DUPLICATE";
  SiteCreatedContext2["OLD_SITE_TRANSFER"] = "OLD_SITE_TRANSFER";
  SiteCreatedContext2["FLASH"] = "FLASH";
  return SiteCreatedContext2;
})(SiteCreatedContext || {});
var Namespace = /* @__PURE__ */ ((Namespace2) => {
  Namespace2["UNKNOWN_NAMESPACE"] = "UNKNOWN_NAMESPACE";
  Namespace2["WIX"] = "WIX";
  Namespace2["SHOUT_OUT"] = "SHOUT_OUT";
  Namespace2["ALBUMS"] = "ALBUMS";
  Namespace2["WIX_STORES_TEST_DRIVE"] = "WIX_STORES_TEST_DRIVE";
  Namespace2["HOTELS"] = "HOTELS";
  Namespace2["CLUBS"] = "CLUBS";
  Namespace2["ONBOARDING_DRAFT"] = "ONBOARDING_DRAFT";
  Namespace2["DEV_SITE"] = "DEV_SITE";
  Namespace2["LOGOS"] = "LOGOS";
  Namespace2["VIDEO_MAKER"] = "VIDEO_MAKER";
  Namespace2["PARTNER_DASHBOARD"] = "PARTNER_DASHBOARD";
  Namespace2["DEV_CENTER_COMPANY"] = "DEV_CENTER_COMPANY";
  Namespace2["HTML_DRAFT"] = "HTML_DRAFT";
  Namespace2["SITELESS_BUSINESS"] = "SITELESS_BUSINESS";
  Namespace2["CREATOR_ECONOMY"] = "CREATOR_ECONOMY";
  Namespace2["DASHBOARD_FIRST"] = "DASHBOARD_FIRST";
  Namespace2["ANYWHERE"] = "ANYWHERE";
  Namespace2["HEADLESS"] = "HEADLESS";
  Namespace2["ACCOUNT_MASTER_CMS"] = "ACCOUNT_MASTER_CMS";
  Namespace2["RISE"] = "RISE";
  Namespace2["BRANDED_FIRST"] = "BRANDED_FIRST";
  Namespace2["NOWNIA"] = "NOWNIA";
  Namespace2["UGC_TEMPLATE"] = "UGC_TEMPLATE";
  Namespace2["CODUX"] = "CODUX";
  Namespace2["MEDIA_DESIGN_CREATOR"] = "MEDIA_DESIGN_CREATOR";
  Namespace2["SHARED_BLOG_ENTERPRISE"] = "SHARED_BLOG_ENTERPRISE";
  Namespace2["STANDALONE_FORMS"] = "STANDALONE_FORMS";
  Namespace2["STANDALONE_EVENTS"] = "STANDALONE_EVENTS";
  Namespace2["MIMIR"] = "MIMIR";
  return Namespace2;
})(Namespace || {});
var DeleteStatus = /* @__PURE__ */ ((DeleteStatus2) => {
  DeleteStatus2["UNKNOWN"] = "UNKNOWN";
  DeleteStatus2["TRASH"] = "TRASH";
  DeleteStatus2["DELETED"] = "DELETED";
  DeleteStatus2["PENDING_PURGE"] = "PENDING_PURGE";
  DeleteStatus2["PURGED_EXTERNALLY"] = "PURGED_EXTERNALLY";
  return DeleteStatus2;
})(DeleteStatus || {});
async function createMemberRoleDefinition2(roleKey, options) {
  const { httpClient, sideEffects } = arguments[2];
  const payload = (0, import_rename_all_nested_keys.renameKeysFromSDKRequestToRESTRequest)({
    roleKey,
    roleTitle: options?.roleTitle,
    blockable: options?.blockable
  });
  const reqOpts = createMemberRoleDefinition(
    payload
  );
  sideEffects?.onSiteCall?.();
  try {
    const result = await httpClient.request(reqOpts);
    sideEffects?.onSuccess?.(result);
    return (0, import_rename_all_nested_keys.renameKeysFromRESTResponseToSDKResponse)(result.data);
  } catch (err) {
    const transformedError = (0, import_transform_error.transformError)(
      err,
      {
        spreadPathsToArguments: {},
        explicitPathsToArguments: {
          roleKey: "$[0]",
          roleTitle: "$[1].roleTitle",
          blockable: "$[1].blockable"
        },
        singleArgumentUnchanged: false
      },
      ["roleKey", "options"]
    );
    sideEffects?.onError?.(err);
    throw transformedError;
  }
}
async function listMemberRoleDefinitions2() {
  const { httpClient, sideEffects } = arguments[0];
  const payload = (0, import_rename_all_nested_keys.renameKeysFromSDKRequestToRESTRequest)({});
  const reqOpts = listMemberRoleDefinitions(
    payload
  );
  sideEffects?.onSiteCall?.();
  try {
    const result = await httpClient.request(reqOpts);
    sideEffects?.onSuccess?.(result);
    return (0, import_rename_all_nested_keys.renameKeysFromRESTResponseToSDKResponse)(result.data);
  } catch (err) {
    const transformedError = (0, import_transform_error.transformError)(
      err,
      {
        spreadPathsToArguments: {},
        explicitPathsToArguments: {},
        singleArgumentUnchanged: false
      },
      []
    );
    sideEffects?.onError?.(err);
    throw transformedError;
  }
}
async function getMemberRoleDefinition2(roleKey) {
  const { httpClient, sideEffects } = arguments[1];
  const payload = (0, import_rename_all_nested_keys.renameKeysFromSDKRequestToRESTRequest)({ roleKey });
  const reqOpts = getMemberRoleDefinition(payload);
  sideEffects?.onSiteCall?.();
  try {
    const result = await httpClient.request(reqOpts);
    sideEffects?.onSuccess?.(result);
    return (0, import_rename_all_nested_keys.renameKeysFromRESTResponseToSDKResponse)(result.data);
  } catch (err) {
    const transformedError = (0, import_transform_error.transformError)(
      err,
      {
        spreadPathsToArguments: {},
        explicitPathsToArguments: { roleKey: "$[0]" },
        singleArgumentUnchanged: false
      },
      ["roleKey"]
    );
    sideEffects?.onError?.(err);
    throw transformedError;
  }
}
async function updateMemberRoleDefinition2(key, options) {
  const { httpClient, sideEffects } = arguments[2];
  const payload = (0, import_rename_all_nested_keys.renameKeysFromSDKRequestToRESTRequest)({
    key,
    blockable: options?.blockable,
    revision: options?.revision
  });
  const reqOpts = updateMemberRoleDefinition(
    payload
  );
  sideEffects?.onSiteCall?.();
  try {
    const result = await httpClient.request(reqOpts);
    sideEffects?.onSuccess?.(result);
    return (0, import_rename_all_nested_keys.renameKeysFromRESTResponseToSDKResponse)(result.data);
  } catch (err) {
    const transformedError = (0, import_transform_error.transformError)(
      err,
      {
        spreadPathsToArguments: {},
        explicitPathsToArguments: {
          key: "$[0]",
          blockable: "$[1].blockable",
          revision: "$[1].revision"
        },
        singleArgumentUnchanged: false
      },
      ["key", "options"]
    );
    sideEffects?.onError?.(err);
    throw transformedError;
  }
}
async function deleteMemberRoleDefinition2(roleKey) {
  const { httpClient, sideEffects } = arguments[1];
  const payload = (0, import_rename_all_nested_keys.renameKeysFromSDKRequestToRESTRequest)({ roleKey });
  const reqOpts = deleteMemberRoleDefinition(
    payload
  );
  sideEffects?.onSiteCall?.();
  try {
    const result = await httpClient.request(reqOpts);
    sideEffects?.onSuccess?.(result);
  } catch (err) {
    const transformedError = (0, import_transform_error.transformError)(
      err,
      {
        spreadPathsToArguments: {},
        explicitPathsToArguments: { roleKey: "$[0]" },
        singleArgumentUnchanged: false
      },
      ["roleKey"]
    );
    sideEffects?.onError?.(err);
    throw transformedError;
  }
}

// src/members-v1-member-role-definition-member-role-definition.public.ts
function createMemberRoleDefinition3(httpClient) {
  return (roleKey, options) => createMemberRoleDefinition2(
    roleKey,
    options,
    // @ts-ignore
    { httpClient }
  );
}
function listMemberRoleDefinitions3(httpClient) {
  return () => listMemberRoleDefinitions2(
    // @ts-ignore
    { httpClient }
  );
}
function getMemberRoleDefinition3(httpClient) {
  return (roleKey) => getMemberRoleDefinition2(
    roleKey,
    // @ts-ignore
    { httpClient }
  );
}
function updateMemberRoleDefinition3(httpClient) {
  return (key, options) => updateMemberRoleDefinition2(
    key,
    options,
    // @ts-ignore
    { httpClient }
  );
}
function deleteMemberRoleDefinition3(httpClient) {
  return (roleKey) => deleteMemberRoleDefinition2(
    roleKey,
    // @ts-ignore
    { httpClient }
  );
}

// src/members-v1-member-role-definition-member-role-definition.context.ts
var import_rest_modules3 = require("@wix/sdk-runtime/rest-modules");
var createMemberRoleDefinition4 = /* @__PURE__ */ (0, import_rest_modules3.createRESTModule)(createMemberRoleDefinition3);
var listMemberRoleDefinitions4 = /* @__PURE__ */ (0, import_rest_modules3.createRESTModule)(listMemberRoleDefinitions3);
var getMemberRoleDefinition4 = /* @__PURE__ */ (0, import_rest_modules3.createRESTModule)(getMemberRoleDefinition3);
var updateMemberRoleDefinition4 = /* @__PURE__ */ (0, import_rest_modules3.createRESTModule)(updateMemberRoleDefinition3);
var deleteMemberRoleDefinition4 = /* @__PURE__ */ (0, import_rest_modules3.createRESTModule)(deleteMemberRoleDefinition3);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  DeleteStatus,
  Namespace,
  SiteCreatedContext,
  State,
  createMemberRoleDefinition,
  deleteMemberRoleDefinition,
  getMemberRoleDefinition,
  listMemberRoleDefinitions,
  updateMemberRoleDefinition
});
//# sourceMappingURL=index.js.map