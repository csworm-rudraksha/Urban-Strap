import { HttpClient, MaybeContext, BuildRESTFunction } from '@wix/sdk-types';
import { C as CreateMemberRoleDefinitionOptions, a as CreateMemberRoleDefinitionResponse, L as ListMemberRoleDefinitionsResponse, G as GetMemberRoleDefinitionResponse, U as UpdateMemberRoleDefinitionOptions, b as UpdateMemberRoleDefinitionResponse } from './members-v1-member-role-definition-member-role-definition.universal-DKvbFkGw.js';
export { A as Asset, f as CreateMemberRoleDefinitionRequest, q as DeleteContext, j as DeleteMemberRoleDefinitionRequest, k as DeleteMemberRoleDefinitionResponse, D as DeleteStatus, J as Empty, h as GetMemberRoleDefinitionRequest, g as ListMemberRoleDefinitionsRequest, M as MemberRoleDefinition, l as MetaSiteSpecialEvent, m as MetaSiteSpecialEventPayloadOneOf, N as Namespace, B as NamespaceChanged, w as ServiceProvisioned, x as ServiceRemoved, n as SiteCreated, c as SiteCreatedContext, p as SiteDeleted, z as SiteHardDeleted, u as SiteMarkedAsTemplate, v as SiteMarkedAsWixSite, s as SitePublished, I as SitePurgedExternally, y as SiteRenamed, o as SiteTransferred, r as SiteUndeleted, t as SiteUnpublished, H as SiteUrlChanged, S as State, E as StudioAssigned, F as StudioUnassigned, d as SyncMetaSiteRolesRequest, e as SyncMetaSiteRolesResponse, i as UpdateMemberRoleDefinitionRequest } from './members-v1-member-role-definition-member-role-definition.universal-DKvbFkGw.js';

declare function createMemberRoleDefinition$1(httpClient: HttpClient): CreateMemberRoleDefinitionSignature;
interface CreateMemberRoleDefinitionSignature {
    /** */
    (roleKey: string, options?: CreateMemberRoleDefinitionOptions | undefined): Promise<CreateMemberRoleDefinitionResponse>;
}
declare function listMemberRoleDefinitions$1(httpClient: HttpClient): ListMemberRoleDefinitionsSignature;
interface ListMemberRoleDefinitionsSignature {
    /** */
    (): Promise<ListMemberRoleDefinitionsResponse>;
}
declare function getMemberRoleDefinition$1(httpClient: HttpClient): GetMemberRoleDefinitionSignature;
interface GetMemberRoleDefinitionSignature {
    /** */
    (roleKey: string): Promise<GetMemberRoleDefinitionResponse>;
}
declare function updateMemberRoleDefinition$1(httpClient: HttpClient): UpdateMemberRoleDefinitionSignature;
interface UpdateMemberRoleDefinitionSignature {
    /** */
    (key: string, options?: UpdateMemberRoleDefinitionOptions | undefined): Promise<UpdateMemberRoleDefinitionResponse>;
}
declare function deleteMemberRoleDefinition$1(httpClient: HttpClient): DeleteMemberRoleDefinitionSignature;
interface DeleteMemberRoleDefinitionSignature {
    /** */
    (roleKey: string): Promise<void>;
}

declare const createMemberRoleDefinition: MaybeContext<BuildRESTFunction<typeof createMemberRoleDefinition$1> & typeof createMemberRoleDefinition$1>;
declare const listMemberRoleDefinitions: MaybeContext<BuildRESTFunction<typeof listMemberRoleDefinitions$1> & typeof listMemberRoleDefinitions$1>;
declare const getMemberRoleDefinition: MaybeContext<BuildRESTFunction<typeof getMemberRoleDefinition$1> & typeof getMemberRoleDefinition$1>;
declare const updateMemberRoleDefinition: MaybeContext<BuildRESTFunction<typeof updateMemberRoleDefinition$1> & typeof updateMemberRoleDefinition$1>;
declare const deleteMemberRoleDefinition: MaybeContext<BuildRESTFunction<typeof deleteMemberRoleDefinition$1> & typeof deleteMemberRoleDefinition$1>;

export { CreateMemberRoleDefinitionOptions, CreateMemberRoleDefinitionResponse, GetMemberRoleDefinitionResponse, ListMemberRoleDefinitionsResponse, UpdateMemberRoleDefinitionOptions, UpdateMemberRoleDefinitionResponse, createMemberRoleDefinition, deleteMemberRoleDefinition, getMemberRoleDefinition, listMemberRoleDefinitions, updateMemberRoleDefinition };
