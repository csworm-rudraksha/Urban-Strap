{"version":3,"sources":["../../src/members-v1-member-members.http.ts","../../src/members-v1-member-members.meta.ts"],"sourcesContent":["import { toURLSearchParams } from '@wix/sdk-runtime/rest-modules';\nimport { transformSDKTimestampToRESTTimestamp } from '@wix/sdk-runtime/transformations/timestamp';\nimport { transformRESTTimestampToSDKTimestamp } from '@wix/sdk-runtime/transformations/timestamp';\nimport { transformPaths } from '@wix/sdk-runtime/transformations/transform-paths';\nimport { resolveUrl } from '@wix/sdk-runtime/rest-modules';\nimport { ResolveUrlOpts } from '@wix/sdk-runtime/rest-modules';\nimport { RequestOptionsFactory } from '@wix/sdk-types';\n\nfunction resolveComWixpressMembersApiMembersUrl(\n  opts: Omit<ResolveUrlOpts, 'domainToMappings'>\n) {\n  const domainToMappings = {\n    'www.wixapis.com': [\n      {\n        srcPath: '/members/v1/members',\n        destPath: '/v1/members',\n      },\n    ],\n    'api._api_base_domain_': [\n      {\n        srcPath: '/members-ng-api',\n        destPath: '',\n      },\n    ],\n    'www._base_domain_': [\n      {\n        srcPath: '/_api/members/v1/members',\n        destPath: '/v1/members',\n      },\n    ],\n    'manage._base_domain_': [\n      {\n        srcPath: '/_api/members/v1/members',\n        destPath: '/v1/members',\n      },\n    ],\n    'editor._base_domain_': [\n      {\n        srcPath: '/_api/members/v1/members',\n        destPath: '/v1/members',\n      },\n    ],\n    'blocks._base_domain_': [\n      {\n        srcPath: '/_api/members/v1/members',\n        destPath: '/v1/members',\n      },\n    ],\n    'create.editorx': [\n      {\n        srcPath: '/_api/members/v1/members',\n        destPath: '/v1/members',\n      },\n    ],\n    'editor.wixapps.net': [\n      {\n        srcPath: '/_api/members/v1/members',\n        destPath: '/v1/members',\n      },\n    ],\n    '*.dev.wix-code.com': [\n      {\n        srcPath: '/_api/members/v1/members',\n        destPath: '/v1/members',\n      },\n    ],\n    'bo._base_domain_': [\n      {\n        srcPath: '/_api/members/v1/members',\n        destPath: '/v1/members',\n      },\n    ],\n    'wixbo.ai': [\n      {\n        srcPath: '/_api/members/v1/members',\n        destPath: '/v1/members',\n      },\n    ],\n    'wix-bo.com': [\n      {\n        srcPath: '/_api/members/v1/members',\n        destPath: '/v1/members',\n      },\n    ],\n    _: [\n      {\n        srcPath: '/_api/members/v1/members',\n        destPath: '/v1/members',\n      },\n    ],\n    'members.wixapps.net': [\n      {\n        srcPath: '/_api/members/v1/members',\n        destPath: '/v1/members',\n      },\n    ],\n  };\n\n  return resolveUrl(Object.assign(opts, { domainToMappings }));\n}\n\nconst PACKAGE_NAME = '@wix/auto_sdk_members_members';\n\n/**\n * Updates the currently logged in member's slug.\n *\n * The `slug` is the end of a member's URL that refers to a specific logged-in member. For example, if a member's URL is `https://example.com/member/{my-member-slug}`, the slug is `my-member-slug`. The slug is case-sensitive and is generally derived from the member's `nickname`; otherwise, it's derived from the `loginEmail`.\n *\n * > **Note:**\n * > Only logged-in members can call this method without elevated permissions.\n * > To call this method as a different identity, [elevated permissions](https://dev.wix.com/docs/sdk/articles/work-with-the-sdk/about-elevated-permissions) are required.\n */\nexport function updateMySlug(payload: object): RequestOptionsFactory<any> {\n  function __updateMySlug({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.members.v1.member',\n      method: 'POST' as any,\n      methodFqn: 'com.wixpress.members.api.Members.UpdateMySlug',\n      packageName: PACKAGE_NAME,\n      url: resolveComWixpressMembersApiMembersUrl({\n        protoPath: '/v1/members/my/slug',\n        data: payload,\n        host,\n      }),\n      data: payload,\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTTimestampToSDKTimestamp,\n            paths: [\n              { path: 'member.createdDate' },\n              { path: 'member.updatedDate' },\n              { path: 'member.lastLoginDate' },\n            ],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __updateMySlug;\n}\n\n/** Updates a member's slug. */\nexport function updateMemberSlug(payload: object): RequestOptionsFactory<any> {\n  function __updateMemberSlug({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.members.v1.member',\n      method: 'POST' as any,\n      methodFqn: 'com.wixpress.members.api.Members.UpdateMemberSlug',\n      packageName: PACKAGE_NAME,\n      url: resolveComWixpressMembersApiMembersUrl({\n        protoPath: '/v1/members/{id}/slug',\n        data: payload,\n        host,\n      }),\n      data: payload,\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTTimestampToSDKTimestamp,\n            paths: [\n              { path: 'member.createdDate' },\n              { path: 'member.updatedDate' },\n              { path: 'member.lastLoginDate' },\n            ],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __updateMemberSlug;\n}\n\n/**\n * Joins the current member to the site community and sets their profile to public.\n *\n * When a member's profile is public, they have access to the site's\n * [Members Area](https://support.wix.com/en/article/site-members-about-the-members-area)\n * features, such as chat, forum, and followers,\n * and their profile is visible to other members and site visitors.\n *\n * > **Note:**\n * > Only logged-in members can call this method without elevated permissions.\n * > To call this method as a different identity, [elevated permissions](https://dev.wix.com/docs/sdk/articles/work-with-the-sdk/about-elevated-permissions) are required.\n */\nexport function joinCommunity(payload: object): RequestOptionsFactory<any> {\n  function __joinCommunity({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.members.v1.member',\n      method: 'POST' as any,\n      methodFqn: 'com.wixpress.members.api.Members.JoinCommunity',\n      packageName: PACKAGE_NAME,\n      url: resolveComWixpressMembersApiMembersUrl({\n        protoPath: '/v1/members/join-community',\n        data: payload,\n        host,\n      }),\n      data: payload,\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTTimestampToSDKTimestamp,\n            paths: [\n              { path: 'member.createdDate' },\n              { path: 'member.updatedDate' },\n              { path: 'member.lastLoginDate' },\n            ],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __joinCommunity;\n}\n\n/**\n * Removes the current member from the site community and sets their profile to private.\n *\n * When a member's profile is private,\n * they do not have access to the site's\n * [Members Area](https://support.wix.com/en/article/site-members-about-the-members-area)\n * features, such as chat, forum, and followers,\n * and their profile is hidden from other members and site visitors.\n *\n * > **Notes:**\n * > + If a member leaves the site's community, their content, such as forum posts and blog comments, remain publicly visible.\n *\n * > + Only logged-in members can call this method without elevated permissions.\n * > + To call this method as a different identity, [elevated permissions](https://dev.wix.com/docs/sdk/articles/work-with-the-sdk/about-elevated-permissions) are required.\n */\nexport function leaveCommunity(payload: object): RequestOptionsFactory<any> {\n  function __leaveCommunity({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.members.v1.member',\n      method: 'POST' as any,\n      methodFqn: 'com.wixpress.members.api.Members.LeaveCommunity',\n      packageName: PACKAGE_NAME,\n      url: resolveComWixpressMembersApiMembersUrl({\n        protoPath: '/v1/members/leave-community',\n        data: payload,\n        host,\n      }),\n      data: payload,\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTTimestampToSDKTimestamp,\n            paths: [\n              { path: 'member.createdDate' },\n              { path: 'member.updatedDate' },\n              { path: 'member.lastLoginDate' },\n            ],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __leaveCommunity;\n}\n\n/**\n * Retrieves the current member.\n *\n * >**Note:**\n * >This method requires [visitor or member authentication](https://dev.wix.com/docs/build-apps/develop-your-app/access/about-identities).\n */\nexport function getMyMember(payload: object): RequestOptionsFactory<any> {\n  function __getMyMember({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.members.v1.member',\n      method: 'GET' as any,\n      methodFqn: 'com.wixpress.members.api.Members.GetMyMember',\n      packageName: PACKAGE_NAME,\n      url: resolveComWixpressMembersApiMembersUrl({\n        protoPath: '/v1/members/my',\n        data: payload,\n        host,\n      }),\n      params: toURLSearchParams(payload),\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTTimestampToSDKTimestamp,\n            paths: [\n              { path: 'member.createdDate' },\n              { path: 'member.updatedDate' },\n              { path: 'member.lastLoginDate' },\n            ],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __getMyMember;\n}\n\n/**\n * Retrieves a member by ID.\n *\n * >**Note:** The returned Member object contains only the fields that were explicitly added to the Member object. Custom Contact fields are **not** automatically added to the Member object. They must be [added to the Member object by the site owner](https://support.wix.com/en/article/site-members-customizing-your-member-profile-fields).\n *\n */\nexport function getMember(payload: object): RequestOptionsFactory<any> {\n  function __getMember({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.members.v1.member',\n      method: 'GET' as any,\n      methodFqn: 'com.wixpress.members.api.Members.GetMember',\n      packageName: PACKAGE_NAME,\n      url: resolveComWixpressMembersApiMembersUrl({\n        protoPath: '/v1/members/{id}',\n        data: payload,\n        host,\n      }),\n      params: toURLSearchParams(payload),\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTTimestampToSDKTimestamp,\n            paths: [\n              { path: 'member.createdDate' },\n              { path: 'member.updatedDate' },\n              { path: 'member.lastLoginDate' },\n            ],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __getMember;\n}\n\n/** Lists site members, given the provided paging and fieldsets. */\nexport function listMembers(payload: object): RequestOptionsFactory<any> {\n  function __listMembers({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.members.v1.member',\n      method: 'GET' as any,\n      methodFqn: 'com.wixpress.members.api.Members.ListMembers',\n      packageName: PACKAGE_NAME,\n      url: resolveComWixpressMembersApiMembersUrl({\n        protoPath: '/v1/members',\n        data: payload,\n        host,\n      }),\n      params: toURLSearchParams(payload, true),\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTTimestampToSDKTimestamp,\n            paths: [\n              { path: 'members.createdDate' },\n              { path: 'members.updatedDate' },\n              { path: 'members.lastLoginDate' },\n            ],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __listMembers;\n}\n\n/**\n * Retrieves a list of up to 100 members, given the specified filters, fieldsets, sorting and paging, and returns a `MembersQueryBuilder` object.\n *\n * The returned object contains the query definition which is typically used to run the query using the `find()` method.\n *\n * You can refine the query by chaining `MembersQueryBuilder` methods onto the query. `MembersQueryBuilder` methods enable you to sort, filter, and control the results that `queryMembers()` returns. The methods that are chained to `queryMembers()` are applied in the order they are called.\n *\n * `queryMembers()` runs with the following `MembersQueryBuilder` defaults that you can override:\n * - `skip`: `0`\n * - `limit`: `50`\n *\n * Currently supported fields for sorting:\n * - `profile.nickname`\n * - `contact.firstName`\n * - `contact.lastName`\n * - `createdDate`\n * - `lastLoginDate`\n *\n * The following `MembersQueryBuilder` methods are supported for the `queryMembers()` method. For a full description of the Locations object, see the returned for the `items` property in `MembersQueryResult`.\n */\nexport function queryMembers(payload: object): RequestOptionsFactory<any> {\n  function __queryMembers({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.members.v1.member',\n      method: 'POST' as any,\n      methodFqn: 'com.wixpress.members.api.Members.QueryMembers',\n      packageName: PACKAGE_NAME,\n      url: resolveComWixpressMembersApiMembersUrl({\n        protoPath: '/v1/members/query',\n        data: payload,\n        host,\n      }),\n      data: payload,\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTTimestampToSDKTimestamp,\n            paths: [\n              { path: 'members.createdDate' },\n              { path: 'members.updatedDate' },\n              { path: 'members.lastLoginDate' },\n            ],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __queryMembers;\n}\n\n/**\n * Mutes a member.\n *\n * Muted members can't engage with a community. For example, they can't leave comments, like posts or comments, or share content.\n *\n * You can mute members in [Wix Blog](https://dev.wix.com/docs/rest/business-solutions/blog/introduction) and [Wix Forum](https://dev.wix.com/docs/rest/business-solutions/forum/introduction).\n */\nexport function muteMember(payload: object): RequestOptionsFactory<any> {\n  function __muteMember({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.members.v1.member',\n      method: 'POST' as any,\n      methodFqn: 'com.wixpress.members.api.Members.MuteMember',\n      packageName: PACKAGE_NAME,\n      url: resolveComWixpressMembersApiMembersUrl({\n        protoPath: '/v1/members/{id}/mute',\n        data: payload,\n        host,\n      }),\n      data: payload,\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTTimestampToSDKTimestamp,\n            paths: [\n              { path: 'member.createdDate' },\n              { path: 'member.updatedDate' },\n              { path: 'member.lastLoginDate' },\n            ],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __muteMember;\n}\n\n/**\n * Unmutes a member.\n *\n * Unmuted members can engage with the community. For example, leave comments, like posts or comments, and share content.\n *\n * You can unmute members in [Wix Blog](https://dev.wix.com/docs/rest/business-solutions/blog/introduction) and [Wix Forum](https://dev.wix.com/docs/rest/business-solutions/forum/introduction).\n */\nexport function unmuteMember(payload: object): RequestOptionsFactory<any> {\n  function __unmuteMember({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.members.v1.member',\n      method: 'POST' as any,\n      methodFqn: 'com.wixpress.members.api.Members.UnmuteMember',\n      packageName: PACKAGE_NAME,\n      url: resolveComWixpressMembersApiMembersUrl({\n        protoPath: '/v1/members/{id}/unmute',\n        data: payload,\n        host,\n      }),\n      data: payload,\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTTimestampToSDKTimestamp,\n            paths: [\n              { path: 'member.createdDate' },\n              { path: 'member.updatedDate' },\n              { path: 'member.lastLoginDate' },\n            ],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __unmuteMember;\n}\n\n/**\n * Changes member status to `\"APPROVED\"` and gives access to members-only pages.\n *\n * Call this API to:\n * - Approve a pending member.\n * - Unblock a blocked member.\n */\nexport function approveMember(payload: object): RequestOptionsFactory<any> {\n  function __approveMember({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.members.v1.member',\n      method: 'POST' as any,\n      methodFqn: 'com.wixpress.members.api.Members.ApproveMember',\n      packageName: PACKAGE_NAME,\n      url: resolveComWixpressMembersApiMembersUrl({\n        protoPath: '/v1/members/{id}/approve',\n        data: payload,\n        host,\n      }),\n      data: payload,\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTTimestampToSDKTimestamp,\n            paths: [\n              { path: 'member.createdDate' },\n              { path: 'member.updatedDate' },\n              { path: 'member.lastLoginDate' },\n            ],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __approveMember;\n}\n\n/**\n * Blocks a member.\n *\n * A blocked member can't log in to members-only pages.\n *\n * To unblock a member, call Approve Member.\n */\nexport function blockMember(payload: object): RequestOptionsFactory<any> {\n  function __blockMember({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.members.v1.member',\n      method: 'POST' as any,\n      methodFqn: 'com.wixpress.members.api.Members.BlockMember',\n      packageName: PACKAGE_NAME,\n      url: resolveComWixpressMembersApiMembersUrl({\n        protoPath: '/v1/members/{id}/block',\n        data: payload,\n        host,\n      }),\n      data: payload,\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTTimestampToSDKTimestamp,\n            paths: [\n              { path: 'member.createdDate' },\n              { path: 'member.updatedDate' },\n              { path: 'member.lastLoginDate' },\n            ],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __blockMember;\n}\n\n/**\n * Disconnects a member.\n *\n * A disconnected member can't log in to members-only pages, and the member isn't visible in the dashboard.\n *\n * >**Note:** This action is irreversible. To connect the same member again, you have to create a member with a new slug.\n */\nexport function disconnectMember(payload: object): RequestOptionsFactory<any> {\n  function __disconnectMember({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.members.v1.member',\n      method: 'POST' as any,\n      methodFqn: 'com.wixpress.members.api.Members.DisconnectMember',\n      packageName: PACKAGE_NAME,\n      url: resolveComWixpressMembersApiMembersUrl({\n        protoPath: '/v1/members/{id}/disconnect',\n        data: payload,\n        host,\n      }),\n      data: payload,\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTTimestampToSDKTimestamp,\n            paths: [\n              { path: 'member.createdDate' },\n              { path: 'member.updatedDate' },\n              { path: 'member.lastLoginDate' },\n            ],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __disconnectMember;\n}\n\n/**\n * Deletes a member by ID.\n *\n * All content created by this member is transferred to a site owner's account. For example, if a Wix user had blog posts, those posts are transferred to the site owner's account, which then becomes the owner of those posts.\n */\nexport function deleteMember(payload: object): RequestOptionsFactory<any> {\n  function __deleteMember({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.members.v1.member',\n      method: 'DELETE' as any,\n      methodFqn: 'com.wixpress.members.api.Members.DeleteMember',\n      packageName: PACKAGE_NAME,\n      url: resolveComWixpressMembersApiMembersUrl({\n        protoPath: '/v1/members/{id}',\n        data: payload,\n        host,\n      }),\n      params: toURLSearchParams(payload),\n    };\n\n    return metadata;\n  }\n\n  return __deleteMember;\n}\n\n/**\n * Deletes the current member.\n *\n * After calling this method, the member is logged out of the site.\n *\n * All content created by this member is transferred to another account. For example, if a Wix user had blog posts, those posts are transferred to the account specified in `contentAssignedId`, which then becomes the owner of those posts.\n *\n * >**Note:**\n * >This method requires [visitor or member authentication](https://dev.wix.com/docs/build-apps/develop-your-app/access/about-identities).\n */\nexport function deleteMyMember(payload: object): RequestOptionsFactory<any> {\n  function __deleteMyMember({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.members.v1.member',\n      method: 'DELETE' as any,\n      methodFqn: 'com.wixpress.members.api.Members.DeleteMyMember',\n      packageName: PACKAGE_NAME,\n      url: resolveComWixpressMembersApiMembersUrl({\n        protoPath: '/v1/members/my',\n        data: payload,\n        host,\n      }),\n      params: toURLSearchParams(payload),\n    };\n\n    return metadata;\n  }\n\n  return __deleteMyMember;\n}\n\n/**\n * Deletes multiple members by `memberId`.\n *\n * All content created by these members is transferred to a site owner's account. For example, if Wix users had blog posts, those posts are transferred to the site owner's account, which then becomes the owner of those posts.\n */\nexport function bulkDeleteMembers(payload: object): RequestOptionsFactory<any> {\n  function __bulkDeleteMembers({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.members.v1.member',\n      method: 'POST' as any,\n      methodFqn: 'com.wixpress.members.api.Members.BulkDeleteMembers',\n      packageName: PACKAGE_NAME,\n      url: resolveComWixpressMembersApiMembersUrl({\n        protoPath: '/v1/members/bulk/delete',\n        data: payload,\n        host,\n      }),\n      data: payload,\n    };\n\n    return metadata;\n  }\n\n  return __bulkDeleteMembers;\n}\n\n/**\n * Deletes multiple members by the specified filter.\n *\n * All content created by these members is transferred to a site owner's account. For example, if Wix users had blog posts, those posts are transferred to the site owner's account, which then becomes the owner of those posts.\n */\nexport function bulkDeleteMembersByFilter(\n  payload: object\n): RequestOptionsFactory<any> {\n  function __bulkDeleteMembersByFilter({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.members.v1.member',\n      method: 'POST' as any,\n      methodFqn: 'com.wixpress.members.api.Members.BulkDeleteMembersByFilter',\n      packageName: PACKAGE_NAME,\n      url: resolveComWixpressMembersApiMembersUrl({\n        protoPath: '/v1/members/bulk/delete-by-filter',\n        data: payload,\n        host,\n      }),\n      data: payload,\n    };\n\n    return metadata;\n  }\n\n  return __bulkDeleteMembersByFilter;\n}\n\n/**\n * Changes status of multiple members to `\"APPROVED\"`, and gives access to members-only pages.\n *\n * Call this API to:\n * - Approve pending members.\n * - Unblock blocked members.\n */\nexport function bulkApproveMembers(\n  payload: object\n): RequestOptionsFactory<any> {\n  function __bulkApproveMembers({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.members.v1.member',\n      method: 'POST' as any,\n      methodFqn: 'com.wixpress.members.api.Members.BulkApproveMembers',\n      packageName: PACKAGE_NAME,\n      url: resolveComWixpressMembersApiMembersUrl({\n        protoPath: '/v1/members/bulk/approve-by-filter',\n        data: payload,\n        host,\n      }),\n      data: payload,\n    };\n\n    return metadata;\n  }\n\n  return __bulkApproveMembers;\n}\n\n/**\n * Blocks multiple members by a specified filter.\n *\n * Blocked members can't log in to members-only pages.\n *\n * To unblock multiple members, call Bulk Approve Members.\n */\nexport function bulkBlockMembers(payload: object): RequestOptionsFactory<any> {\n  function __bulkBlockMembers({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.members.v1.member',\n      method: 'POST' as any,\n      methodFqn: 'com.wixpress.members.api.Members.BulkBlockMembers',\n      packageName: PACKAGE_NAME,\n      url: resolveComWixpressMembersApiMembersUrl({\n        protoPath: '/v1/members/bulk/block-by-filter',\n        data: payload,\n        host,\n      }),\n      data: payload,\n    };\n\n    return metadata;\n  }\n\n  return __bulkBlockMembers;\n}\n\n/**\n * Creates a site member.\n *\n * After creation, you can call\n * [Send Set Password Email ([SDK](https://dev.wix.com/docs/sdk/backend-modules/members/authentication/send-set-password-email) | [REST](https://dev.wix.com/docs/rest/crm/members-contacts/members/member-authentication/send-set-password-email))\n * to email the member with a link to set their password.\n * The member can log in to the site\n * when they set their password for the first time.\n *\n * > **Note:**\n * > When creating multiple members,\n * > set your requests at least 1 second apart to keep below rate limits.\n */\nexport function createMember(payload: object): RequestOptionsFactory<any> {\n  function __createMember({ host }: any) {\n    const serializedData = transformPaths(payload, [\n      {\n        transformFn: transformSDKTimestampToRESTTimestamp,\n        paths: [\n          { path: 'member.createdDate' },\n          { path: 'member.updatedDate' },\n          { path: 'member.lastLoginDate' },\n        ],\n      },\n    ]);\n    const metadata = {\n      entityFqdn: 'wix.members.v1.member',\n      method: 'POST' as any,\n      methodFqn: 'com.wixpress.members.api.Members.CreateMember',\n      packageName: PACKAGE_NAME,\n      url: resolveComWixpressMembersApiMembersUrl({\n        protoPath: '/v1/members',\n        data: serializedData,\n        host,\n      }),\n      data: serializedData,\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTTimestampToSDKTimestamp,\n            paths: [\n              { path: 'member.createdDate' },\n              { path: 'member.updatedDate' },\n              { path: 'member.lastLoginDate' },\n            ],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __createMember;\n}\n\n/**\n * Updates a member's properties.\n *\n * Only the requested fields are updated.\n * To clear a field's value, set an empty value with an empty string `\"\"`.\n *\n * > **Note:**\n * > Updating the `contact.addresses`, `contact.emails`, or `contact.phones` array overwrites the entire array, so any existing values you want to retain must be passed in the `updateMember()` call along with the new values to add.\n * > However, passing an empty array will have no effect, and these methods must be used to clear all data from the respective array:\n * >- To clear `contact.addresses`, use `deleteMemberAddresses()`.\n * >- To clear `contact.emails`, use `deleteMemberEmails()`.\n * >- To clear `contact.phones`, use `deleteMemberPhones()`.\n *\n * > **Note:**\n * > Only logged-in members can call this method without elevated permissions.\n * > To call this method as a different identity, [elevated permissions](https://dev.wix.com/docs/sdk/articles/work-with-the-sdk/about-elevated-permissions) are required.\n */\nexport function updateMember(payload: object): RequestOptionsFactory<any> {\n  function __updateMember({ host }: any) {\n    const serializedData = transformPaths(payload, [\n      {\n        transformFn: transformSDKTimestampToRESTTimestamp,\n        paths: [\n          { path: 'member.createdDate' },\n          { path: 'member.updatedDate' },\n          { path: 'member.lastLoginDate' },\n        ],\n      },\n    ]);\n    const metadata = {\n      entityFqdn: 'wix.members.v1.member',\n      method: 'PATCH' as any,\n      methodFqn: 'com.wixpress.members.api.Members.UpdateMember',\n      packageName: PACKAGE_NAME,\n      url: resolveComWixpressMembersApiMembersUrl({\n        protoPath: '/v1/members/{member.id}',\n        data: serializedData,\n        host,\n      }),\n      data: serializedData,\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTTimestampToSDKTimestamp,\n            paths: [\n              { path: 'member.createdDate' },\n              { path: 'member.updatedDate' },\n              { path: 'member.lastLoginDate' },\n            ],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __updateMember;\n}\n\n/**\n * Clears a member's phone numbers.\n *\n * `deleteMemberPhones()` clears the `phones` array under the `contact` property.\n *\n * > **Note:**\n * > Only logged-in members can call this method without elevated permissions.\n * > To call this method as a different identity, [elevated permissions](https://dev.wix.com/docs/sdk/articles/work-with-the-sdk/about-elevated-permissions) are required.\n */\nexport function deleteMemberPhones(\n  payload: object\n): RequestOptionsFactory<any> {\n  function __deleteMemberPhones({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.members.v1.member',\n      method: 'DELETE' as any,\n      methodFqn: 'com.wixpress.members.api.Members.DeleteMemberPhones',\n      packageName: PACKAGE_NAME,\n      url: resolveComWixpressMembersApiMembersUrl({\n        protoPath: '/v1/members/{id}/phones',\n        data: payload,\n        host,\n      }),\n      params: toURLSearchParams(payload),\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTTimestampToSDKTimestamp,\n            paths: [\n              { path: 'member.createdDate' },\n              { path: 'member.updatedDate' },\n              { path: 'member.lastLoginDate' },\n            ],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __deleteMemberPhones;\n}\n\n/**\n * Clears a member's email addresses.\n *\n * `deleteMemberEmails()` clears the `emails` array under the `contact` property.\n *\n * > **Notes:**\n * > A member can still log in with their `loginEmail`,\n * > which is not cleared when this method is called.\n *\n * > Only logged-in members can call this method without elevated permissions.\n * > To call this method as a different identity, [elevated permissions](https://dev.wix.com/docs/sdk/articles/work-with-the-sdk/about-elevated-permissions) are required.\n */\nexport function deleteMemberEmails(\n  payload: object\n): RequestOptionsFactory<any> {\n  function __deleteMemberEmails({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.members.v1.member',\n      method: 'DELETE' as any,\n      methodFqn: 'com.wixpress.members.api.Members.DeleteMemberEmails',\n      packageName: PACKAGE_NAME,\n      url: resolveComWixpressMembersApiMembersUrl({\n        protoPath: '/v1/members/{id}/emails',\n        data: payload,\n        host,\n      }),\n      params: toURLSearchParams(payload),\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTTimestampToSDKTimestamp,\n            paths: [\n              { path: 'member.createdDate' },\n              { path: 'member.updatedDate' },\n              { path: 'member.lastLoginDate' },\n            ],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __deleteMemberEmails;\n}\n\n/**\n * Deletes a member's street addresses.\n *\n * `deleteMemberAddresses()` clears the `addresses` array under the `contact` property.\n *\n * > **Note:**\n * > Only logged-in members can call this method without elevated permissions.\n * > To call this method as a different identity, [elevated permissions](https://dev.wix.com/docs/sdk/articles/work-with-the-sdk/about-elevated-permissions) are required.\n */\nexport function deleteMemberAddresses(\n  payload: object\n): RequestOptionsFactory<any> {\n  function __deleteMemberAddresses({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.members.v1.member',\n      method: 'DELETE' as any,\n      methodFqn: 'com.wixpress.members.api.Members.DeleteMemberAddresses',\n      packageName: PACKAGE_NAME,\n      url: resolveComWixpressMembersApiMembersUrl({\n        protoPath: '/v1/members/{id}/addresses',\n        data: payload,\n        host,\n      }),\n      params: toURLSearchParams(payload),\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTTimestampToSDKTimestamp,\n            paths: [\n              { path: 'member.createdDate' },\n              { path: 'member.updatedDate' },\n              { path: 'member.lastLoginDate' },\n            ],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __deleteMemberAddresses;\n}\n","import * as ambassadorWixMembersV1Member from './members-v1-member-members.http.js';\nimport * as ambassadorWixMembersV1MemberTypes from './members-v1-member-members.types.js';\nimport * as ambassadorWixMembersV1MemberUniversalTypes from './members-v1-member-members.universal.js';\n\nexport type __PublicMethodMetaInfo<\n  K = string,\n  M = unknown,\n  T = unknown,\n  S = unknown,\n  Q = unknown,\n  R = unknown\n> = {\n  getUrl: (context: any) => string;\n  httpMethod: K;\n  path: string;\n  pathParams: M;\n  __requestType: T;\n  __originalRequestType: S;\n  __responseType: Q;\n  __originalResponseType: R;\n};\n\nexport function updateCurrentMemberSlug(): __PublicMethodMetaInfo<\n  'POST',\n  {},\n  ambassadorWixMembersV1MemberUniversalTypes.UpdateMySlugRequest,\n  ambassadorWixMembersV1MemberTypes.UpdateMySlugRequest,\n  ambassadorWixMembersV1MemberUniversalTypes.UpdateMySlugResponse,\n  ambassadorWixMembersV1MemberTypes.UpdateMySlugResponse\n> {\n  const payload = {} as any;\n\n  const getRequestOptions = ambassadorWixMembersV1Member.updateMySlug(payload);\n\n  const getUrl = (context: any): string => {\n    const { url } = getRequestOptions(context);\n    return url!;\n  };\n\n  return {\n    getUrl,\n    httpMethod: 'POST',\n    path: '/v1/members/my/slug',\n    pathParams: {},\n    __requestType: null as any,\n    __originalRequestType: null as any,\n    __responseType: null as any,\n    __originalResponseType: null as any,\n  };\n}\n\nexport function updateMemberSlug(): __PublicMethodMetaInfo<\n  'POST',\n  { id: string },\n  ambassadorWixMembersV1MemberUniversalTypes.UpdateMemberSlugRequest,\n  ambassadorWixMembersV1MemberTypes.UpdateMemberSlugRequest,\n  ambassadorWixMembersV1MemberUniversalTypes.UpdateMemberSlugResponse,\n  ambassadorWixMembersV1MemberTypes.UpdateMemberSlugResponse\n> {\n  const payload = { id: ':id' } as any;\n\n  const getRequestOptions =\n    ambassadorWixMembersV1Member.updateMemberSlug(payload);\n\n  const getUrl = (context: any): string => {\n    const { url } = getRequestOptions(context);\n    return url!;\n  };\n\n  return {\n    getUrl,\n    httpMethod: 'POST',\n    path: '/v1/members/{id}/slug',\n    pathParams: { id: 'id' },\n    __requestType: null as any,\n    __originalRequestType: null as any,\n    __responseType: null as any,\n    __originalResponseType: null as any,\n  };\n}\n\nexport function joinCommunity(): __PublicMethodMetaInfo<\n  'POST',\n  {},\n  ambassadorWixMembersV1MemberUniversalTypes.JoinCommunityRequest,\n  ambassadorWixMembersV1MemberTypes.JoinCommunityRequest,\n  ambassadorWixMembersV1MemberUniversalTypes.JoinCommunityResponse,\n  ambassadorWixMembersV1MemberTypes.JoinCommunityResponse\n> {\n  const payload = {} as any;\n\n  const getRequestOptions = ambassadorWixMembersV1Member.joinCommunity(payload);\n\n  const getUrl = (context: any): string => {\n    const { url } = getRequestOptions(context);\n    return url!;\n  };\n\n  return {\n    getUrl,\n    httpMethod: 'POST',\n    path: '/v1/members/join-community',\n    pathParams: {},\n    __requestType: null as any,\n    __originalRequestType: null as any,\n    __responseType: null as any,\n    __originalResponseType: null as any,\n  };\n}\n\nexport function leaveCommunity(): __PublicMethodMetaInfo<\n  'POST',\n  {},\n  ambassadorWixMembersV1MemberUniversalTypes.LeaveCommunityRequest,\n  ambassadorWixMembersV1MemberTypes.LeaveCommunityRequest,\n  ambassadorWixMembersV1MemberUniversalTypes.LeaveCommunityResponse,\n  ambassadorWixMembersV1MemberTypes.LeaveCommunityResponse\n> {\n  const payload = {} as any;\n\n  const getRequestOptions =\n    ambassadorWixMembersV1Member.leaveCommunity(payload);\n\n  const getUrl = (context: any): string => {\n    const { url } = getRequestOptions(context);\n    return url!;\n  };\n\n  return {\n    getUrl,\n    httpMethod: 'POST',\n    path: '/v1/members/leave-community',\n    pathParams: {},\n    __requestType: null as any,\n    __originalRequestType: null as any,\n    __responseType: null as any,\n    __originalResponseType: null as any,\n  };\n}\n\nexport function getCurrentMember(): __PublicMethodMetaInfo<\n  'GET',\n  {},\n  ambassadorWixMembersV1MemberUniversalTypes.GetMyMemberRequest,\n  ambassadorWixMembersV1MemberTypes.GetMyMemberRequest,\n  ambassadorWixMembersV1MemberUniversalTypes.GetMyMemberResponse,\n  ambassadorWixMembersV1MemberTypes.GetMyMemberResponse\n> {\n  const payload = {} as any;\n\n  const getRequestOptions = ambassadorWixMembersV1Member.getMyMember(payload);\n\n  const getUrl = (context: any): string => {\n    const { url } = getRequestOptions(context);\n    return url!;\n  };\n\n  return {\n    getUrl,\n    httpMethod: 'GET',\n    path: '/v1/members/my',\n    pathParams: {},\n    __requestType: null as any,\n    __originalRequestType: null as any,\n    __responseType: null as any,\n    __originalResponseType: null as any,\n  };\n}\n\nexport function getMember(): __PublicMethodMetaInfo<\n  'GET',\n  { id: string },\n  ambassadorWixMembersV1MemberUniversalTypes.GetMemberRequest,\n  ambassadorWixMembersV1MemberTypes.GetMemberRequest,\n  ambassadorWixMembersV1MemberUniversalTypes.GetMemberResponse,\n  ambassadorWixMembersV1MemberTypes.GetMemberResponse\n> {\n  const payload = { id: ':id' } as any;\n\n  const getRequestOptions = ambassadorWixMembersV1Member.getMember(payload);\n\n  const getUrl = (context: any): string => {\n    const { url } = getRequestOptions(context);\n    return url!;\n  };\n\n  return {\n    getUrl,\n    httpMethod: 'GET',\n    path: '/v1/members/{id}',\n    pathParams: { id: 'id' },\n    __requestType: null as any,\n    __originalRequestType: null as any,\n    __responseType: null as any,\n    __originalResponseType: null as any,\n  };\n}\n\nexport function listMembers(): __PublicMethodMetaInfo<\n  'GET',\n  {},\n  ambassadorWixMembersV1MemberUniversalTypes.ListMembersRequest,\n  ambassadorWixMembersV1MemberTypes.ListMembersRequest,\n  ambassadorWixMembersV1MemberUniversalTypes.ListMembersResponse,\n  ambassadorWixMembersV1MemberTypes.ListMembersResponse\n> {\n  const payload = {} as any;\n\n  const getRequestOptions = ambassadorWixMembersV1Member.listMembers(payload);\n\n  const getUrl = (context: any): string => {\n    const { url } = getRequestOptions(context);\n    return url!;\n  };\n\n  return {\n    getUrl,\n    httpMethod: 'GET',\n    path: '/v1/members',\n    pathParams: {},\n    __requestType: null as any,\n    __originalRequestType: null as any,\n    __responseType: null as any,\n    __originalResponseType: null as any,\n  };\n}\n\nexport function queryMembers(): __PublicMethodMetaInfo<\n  'POST',\n  {},\n  ambassadorWixMembersV1MemberUniversalTypes.QueryMembersRequest,\n  ambassadorWixMembersV1MemberTypes.QueryMembersRequest,\n  ambassadorWixMembersV1MemberUniversalTypes.QueryMembersResponse,\n  ambassadorWixMembersV1MemberTypes.QueryMembersResponse\n> {\n  const payload = {} as any;\n\n  const getRequestOptions = ambassadorWixMembersV1Member.queryMembers(payload);\n\n  const getUrl = (context: any): string => {\n    const { url } = getRequestOptions(context);\n    return url!;\n  };\n\n  return {\n    getUrl,\n    httpMethod: 'POST',\n    path: '/v1/members/query',\n    pathParams: {},\n    __requestType: null as any,\n    __originalRequestType: null as any,\n    __responseType: null as any,\n    __originalResponseType: null as any,\n  };\n}\n\nexport function muteMember(): __PublicMethodMetaInfo<\n  'POST',\n  { id: string },\n  ambassadorWixMembersV1MemberUniversalTypes.MuteMemberRequest,\n  ambassadorWixMembersV1MemberTypes.MuteMemberRequest,\n  ambassadorWixMembersV1MemberUniversalTypes.MuteMemberResponse,\n  ambassadorWixMembersV1MemberTypes.MuteMemberResponse\n> {\n  const payload = { id: ':id' } as any;\n\n  const getRequestOptions = ambassadorWixMembersV1Member.muteMember(payload);\n\n  const getUrl = (context: any): string => {\n    const { url } = getRequestOptions(context);\n    return url!;\n  };\n\n  return {\n    getUrl,\n    httpMethod: 'POST',\n    path: '/v1/members/{id}/mute',\n    pathParams: { id: 'id' },\n    __requestType: null as any,\n    __originalRequestType: null as any,\n    __responseType: null as any,\n    __originalResponseType: null as any,\n  };\n}\n\nexport function unmuteMember(): __PublicMethodMetaInfo<\n  'POST',\n  { id: string },\n  ambassadorWixMembersV1MemberUniversalTypes.UnmuteMemberRequest,\n  ambassadorWixMembersV1MemberTypes.UnmuteMemberRequest,\n  ambassadorWixMembersV1MemberUniversalTypes.UnmuteMemberResponse,\n  ambassadorWixMembersV1MemberTypes.UnmuteMemberResponse\n> {\n  const payload = { id: ':id' } as any;\n\n  const getRequestOptions = ambassadorWixMembersV1Member.unmuteMember(payload);\n\n  const getUrl = (context: any): string => {\n    const { url } = getRequestOptions(context);\n    return url!;\n  };\n\n  return {\n    getUrl,\n    httpMethod: 'POST',\n    path: '/v1/members/{id}/unmute',\n    pathParams: { id: 'id' },\n    __requestType: null as any,\n    __originalRequestType: null as any,\n    __responseType: null as any,\n    __originalResponseType: null as any,\n  };\n}\n\nexport function approveMember(): __PublicMethodMetaInfo<\n  'POST',\n  { id: string },\n  ambassadorWixMembersV1MemberUniversalTypes.ApproveMemberRequest,\n  ambassadorWixMembersV1MemberTypes.ApproveMemberRequest,\n  ambassadorWixMembersV1MemberUniversalTypes.ApproveMemberResponse,\n  ambassadorWixMembersV1MemberTypes.ApproveMemberResponse\n> {\n  const payload = { id: ':id' } as any;\n\n  const getRequestOptions = ambassadorWixMembersV1Member.approveMember(payload);\n\n  const getUrl = (context: any): string => {\n    const { url } = getRequestOptions(context);\n    return url!;\n  };\n\n  return {\n    getUrl,\n    httpMethod: 'POST',\n    path: '/v1/members/{id}/approve',\n    pathParams: { id: 'id' },\n    __requestType: null as any,\n    __originalRequestType: null as any,\n    __responseType: null as any,\n    __originalResponseType: null as any,\n  };\n}\n\nexport function blockMember(): __PublicMethodMetaInfo<\n  'POST',\n  { id: string },\n  ambassadorWixMembersV1MemberUniversalTypes.BlockMemberRequest,\n  ambassadorWixMembersV1MemberTypes.BlockMemberRequest,\n  ambassadorWixMembersV1MemberUniversalTypes.BlockMemberResponse,\n  ambassadorWixMembersV1MemberTypes.BlockMemberResponse\n> {\n  const payload = { id: ':id' } as any;\n\n  const getRequestOptions = ambassadorWixMembersV1Member.blockMember(payload);\n\n  const getUrl = (context: any): string => {\n    const { url } = getRequestOptions(context);\n    return url!;\n  };\n\n  return {\n    getUrl,\n    httpMethod: 'POST',\n    path: '/v1/members/{id}/block',\n    pathParams: { id: 'id' },\n    __requestType: null as any,\n    __originalRequestType: null as any,\n    __responseType: null as any,\n    __originalResponseType: null as any,\n  };\n}\n\nexport function disconnectMember(): __PublicMethodMetaInfo<\n  'POST',\n  { id: string },\n  ambassadorWixMembersV1MemberUniversalTypes.DisconnectMemberRequest,\n  ambassadorWixMembersV1MemberTypes.DisconnectMemberRequest,\n  ambassadorWixMembersV1MemberUniversalTypes.DisconnectMemberResponse,\n  ambassadorWixMembersV1MemberTypes.DisconnectMemberResponse\n> {\n  const payload = { id: ':id' } as any;\n\n  const getRequestOptions =\n    ambassadorWixMembersV1Member.disconnectMember(payload);\n\n  const getUrl = (context: any): string => {\n    const { url } = getRequestOptions(context);\n    return url!;\n  };\n\n  return {\n    getUrl,\n    httpMethod: 'POST',\n    path: '/v1/members/{id}/disconnect',\n    pathParams: { id: 'id' },\n    __requestType: null as any,\n    __originalRequestType: null as any,\n    __responseType: null as any,\n    __originalResponseType: null as any,\n  };\n}\n\nexport function deleteMember(): __PublicMethodMetaInfo<\n  'DELETE',\n  { id: string },\n  ambassadorWixMembersV1MemberUniversalTypes.DeleteMemberRequest,\n  ambassadorWixMembersV1MemberTypes.DeleteMemberRequest,\n  ambassadorWixMembersV1MemberUniversalTypes.DeleteMemberResponse,\n  ambassadorWixMembersV1MemberTypes.DeleteMemberResponse\n> {\n  const payload = { id: ':id' } as any;\n\n  const getRequestOptions = ambassadorWixMembersV1Member.deleteMember(payload);\n\n  const getUrl = (context: any): string => {\n    const { url } = getRequestOptions(context);\n    return url!;\n  };\n\n  return {\n    getUrl,\n    httpMethod: 'DELETE',\n    path: '/v1/members/{id}',\n    pathParams: { id: 'id' },\n    __requestType: null as any,\n    __originalRequestType: null as any,\n    __responseType: null as any,\n    __originalResponseType: null as any,\n  };\n}\n\nexport function deleteMyMember(): __PublicMethodMetaInfo<\n  'DELETE',\n  {},\n  ambassadorWixMembersV1MemberUniversalTypes.DeleteMyMemberRequest,\n  ambassadorWixMembersV1MemberTypes.DeleteMyMemberRequest,\n  ambassadorWixMembersV1MemberUniversalTypes.DeleteMyMemberResponse,\n  ambassadorWixMembersV1MemberTypes.DeleteMyMemberResponse\n> {\n  const payload = {} as any;\n\n  const getRequestOptions =\n    ambassadorWixMembersV1Member.deleteMyMember(payload);\n\n  const getUrl = (context: any): string => {\n    const { url } = getRequestOptions(context);\n    return url!;\n  };\n\n  return {\n    getUrl,\n    httpMethod: 'DELETE',\n    path: '/v1/members/my',\n    pathParams: {},\n    __requestType: null as any,\n    __originalRequestType: null as any,\n    __responseType: null as any,\n    __originalResponseType: null as any,\n  };\n}\n\nexport function bulkDeleteMembers(): __PublicMethodMetaInfo<\n  'POST',\n  {},\n  ambassadorWixMembersV1MemberUniversalTypes.BulkDeleteMembersRequest,\n  ambassadorWixMembersV1MemberTypes.BulkDeleteMembersRequest,\n  ambassadorWixMembersV1MemberUniversalTypes.BulkDeleteMembersResponse,\n  ambassadorWixMembersV1MemberTypes.BulkDeleteMembersResponse\n> {\n  const payload = {} as any;\n\n  const getRequestOptions =\n    ambassadorWixMembersV1Member.bulkDeleteMembers(payload);\n\n  const getUrl = (context: any): string => {\n    const { url } = getRequestOptions(context);\n    return url!;\n  };\n\n  return {\n    getUrl,\n    httpMethod: 'POST',\n    path: '/v1/members/bulk/delete',\n    pathParams: {},\n    __requestType: null as any,\n    __originalRequestType: null as any,\n    __responseType: null as any,\n    __originalResponseType: null as any,\n  };\n}\n\nexport function bulkDeleteMembersByFilter(): __PublicMethodMetaInfo<\n  'POST',\n  {},\n  ambassadorWixMembersV1MemberUniversalTypes.BulkDeleteMembersByFilterRequest,\n  ambassadorWixMembersV1MemberTypes.BulkDeleteMembersByFilterRequest,\n  ambassadorWixMembersV1MemberUniversalTypes.BulkDeleteMembersByFilterResponse,\n  ambassadorWixMembersV1MemberTypes.BulkDeleteMembersByFilterResponse\n> {\n  const payload = {} as any;\n\n  const getRequestOptions =\n    ambassadorWixMembersV1Member.bulkDeleteMembersByFilter(payload);\n\n  const getUrl = (context: any): string => {\n    const { url } = getRequestOptions(context);\n    return url!;\n  };\n\n  return {\n    getUrl,\n    httpMethod: 'POST',\n    path: '/v1/members/bulk/delete-by-filter',\n    pathParams: {},\n    __requestType: null as any,\n    __originalRequestType: null as any,\n    __responseType: null as any,\n    __originalResponseType: null as any,\n  };\n}\n\nexport function bulkApproveMembers(): __PublicMethodMetaInfo<\n  'POST',\n  {},\n  ambassadorWixMembersV1MemberUniversalTypes.BulkApproveMembersRequest,\n  ambassadorWixMembersV1MemberTypes.BulkApproveMembersRequest,\n  ambassadorWixMembersV1MemberUniversalTypes.BulkApproveMembersResponse,\n  ambassadorWixMembersV1MemberTypes.BulkApproveMembersResponse\n> {\n  const payload = {} as any;\n\n  const getRequestOptions =\n    ambassadorWixMembersV1Member.bulkApproveMembers(payload);\n\n  const getUrl = (context: any): string => {\n    const { url } = getRequestOptions(context);\n    return url!;\n  };\n\n  return {\n    getUrl,\n    httpMethod: 'POST',\n    path: '/v1/members/bulk/approve-by-filter',\n    pathParams: {},\n    __requestType: null as any,\n    __originalRequestType: null as any,\n    __responseType: null as any,\n    __originalResponseType: null as any,\n  };\n}\n\nexport function bulkBlockMembers(): __PublicMethodMetaInfo<\n  'POST',\n  {},\n  ambassadorWixMembersV1MemberUniversalTypes.BulkBlockMembersRequest,\n  ambassadorWixMembersV1MemberTypes.BulkBlockMembersRequest,\n  ambassadorWixMembersV1MemberUniversalTypes.BulkBlockMembersResponse,\n  ambassadorWixMembersV1MemberTypes.BulkBlockMembersResponse\n> {\n  const payload = {} as any;\n\n  const getRequestOptions =\n    ambassadorWixMembersV1Member.bulkBlockMembers(payload);\n\n  const getUrl = (context: any): string => {\n    const { url } = getRequestOptions(context);\n    return url!;\n  };\n\n  return {\n    getUrl,\n    httpMethod: 'POST',\n    path: '/v1/members/bulk/block-by-filter',\n    pathParams: {},\n    __requestType: null as any,\n    __originalRequestType: null as any,\n    __responseType: null as any,\n    __originalResponseType: null as any,\n  };\n}\n\nexport function createMember(): __PublicMethodMetaInfo<\n  'POST',\n  {},\n  ambassadorWixMembersV1MemberUniversalTypes.CreateMemberRequest,\n  ambassadorWixMembersV1MemberTypes.CreateMemberRequest,\n  ambassadorWixMembersV1MemberUniversalTypes.CreateMemberResponse,\n  ambassadorWixMembersV1MemberTypes.CreateMemberResponse\n> {\n  const payload = {} as any;\n\n  const getRequestOptions = ambassadorWixMembersV1Member.createMember(payload);\n\n  const getUrl = (context: any): string => {\n    const { url } = getRequestOptions(context);\n    return url!;\n  };\n\n  return {\n    getUrl,\n    httpMethod: 'POST',\n    path: '/v1/members',\n    pathParams: {},\n    __requestType: null as any,\n    __originalRequestType: null as any,\n    __responseType: null as any,\n    __originalResponseType: null as any,\n  };\n}\n\nexport function updateMember(): __PublicMethodMetaInfo<\n  'PATCH',\n  { memberId: string },\n  ambassadorWixMembersV1MemberUniversalTypes.UpdateMemberRequest,\n  ambassadorWixMembersV1MemberTypes.UpdateMemberRequest,\n  ambassadorWixMembersV1MemberUniversalTypes.UpdateMemberResponse,\n  ambassadorWixMembersV1MemberTypes.UpdateMemberResponse\n> {\n  const payload = { member: { id: ':memberId' } } as any;\n\n  const getRequestOptions = ambassadorWixMembersV1Member.updateMember(payload);\n\n  const getUrl = (context: any): string => {\n    const { url } = getRequestOptions(context);\n    return url!;\n  };\n\n  return {\n    getUrl,\n    httpMethod: 'PATCH',\n    path: '/v1/members/{member.id}',\n    pathParams: { memberId: 'memberId' },\n    __requestType: null as any,\n    __originalRequestType: null as any,\n    __responseType: null as any,\n    __originalResponseType: null as any,\n  };\n}\n\nexport function deleteMemberPhones(): __PublicMethodMetaInfo<\n  'DELETE',\n  { id: string },\n  ambassadorWixMembersV1MemberUniversalTypes.DeleteMemberPhonesRequest,\n  ambassadorWixMembersV1MemberTypes.DeleteMemberPhonesRequest,\n  ambassadorWixMembersV1MemberUniversalTypes.DeleteMemberPhonesResponse,\n  ambassadorWixMembersV1MemberTypes.DeleteMemberPhonesResponse\n> {\n  const payload = { id: ':id' } as any;\n\n  const getRequestOptions =\n    ambassadorWixMembersV1Member.deleteMemberPhones(payload);\n\n  const getUrl = (context: any): string => {\n    const { url } = getRequestOptions(context);\n    return url!;\n  };\n\n  return {\n    getUrl,\n    httpMethod: 'DELETE',\n    path: '/v1/members/{id}/phones',\n    pathParams: { id: 'id' },\n    __requestType: null as any,\n    __originalRequestType: null as any,\n    __responseType: null as any,\n    __originalResponseType: null as any,\n  };\n}\n\nexport function deleteMemberEmails(): __PublicMethodMetaInfo<\n  'DELETE',\n  { id: string },\n  ambassadorWixMembersV1MemberUniversalTypes.DeleteMemberEmailsRequest,\n  ambassadorWixMembersV1MemberTypes.DeleteMemberEmailsRequest,\n  ambassadorWixMembersV1MemberUniversalTypes.DeleteMemberEmailsResponse,\n  ambassadorWixMembersV1MemberTypes.DeleteMemberEmailsResponse\n> {\n  const payload = { id: ':id' } as any;\n\n  const getRequestOptions =\n    ambassadorWixMembersV1Member.deleteMemberEmails(payload);\n\n  const getUrl = (context: any): string => {\n    const { url } = getRequestOptions(context);\n    return url!;\n  };\n\n  return {\n    getUrl,\n    httpMethod: 'DELETE',\n    path: '/v1/members/{id}/emails',\n    pathParams: { id: 'id' },\n    __requestType: null as any,\n    __originalRequestType: null as any,\n    __responseType: null as any,\n    __originalResponseType: null as any,\n  };\n}\n\nexport function deleteMemberAddresses(): __PublicMethodMetaInfo<\n  'DELETE',\n  { id: string },\n  ambassadorWixMembersV1MemberUniversalTypes.DeleteMemberAddressesRequest,\n  ambassadorWixMembersV1MemberTypes.DeleteMemberAddressesRequest,\n  ambassadorWixMembersV1MemberUniversalTypes.DeleteMemberAddressesResponse,\n  ambassadorWixMembersV1MemberTypes.DeleteMemberAddressesResponse\n> {\n  const payload = { id: ':id' } as any;\n\n  const getRequestOptions =\n    ambassadorWixMembersV1Member.deleteMemberAddresses(payload);\n\n  const getUrl = (context: any): string => {\n    const { url } = getRequestOptions(context);\n    return url!;\n  };\n\n  return {\n    getUrl,\n    httpMethod: 'DELETE',\n    path: '/v1/members/{id}/addresses',\n    pathParams: { id: 'id' },\n    __requestType: null as any,\n    __originalRequestType: null as any,\n    __responseType: null as any,\n    __originalResponseType: null as any,\n  };\n}\n"],"mappings":"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","names":["payload","updateMemberSlug","joinCommunity","leaveCommunity","getMember","listMembers","queryMembers","muteMember","unmuteMember","approveMember","blockMember","disconnectMember","deleteMember","deleteMyMember","bulkDeleteMembers","bulkDeleteMembersByFilter","bulkApproveMembers","bulkBlockMembers","createMember","updateMember","deleteMemberPhones","deleteMemberEmails","deleteMemberAddresses"]}