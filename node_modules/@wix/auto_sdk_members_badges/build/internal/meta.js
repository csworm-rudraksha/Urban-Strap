"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// meta.ts
var meta_exports = {};
__export(meta_exports, {
  assignBadge: () => assignBadge2,
  createBadge: () => createBadge2,
  deleteBadge: () => deleteBadge2,
  getBadge: () => getBadge2,
  getMemberCountsPerBadge: () => getMemberCountsPerBadge2,
  listBadges: () => listBadges2,
  listBadgesPerMember: () => listBadgesPerMember,
  listMembersByBadge: () => listMembersByBadge,
  unassignBadge: () => unassignBadge2,
  updateBadge: () => updateBadge2,
  updateBadgesDisplayOrder: () => updateBadgesDisplayOrder2
});
module.exports = __toCommonJS(meta_exports);

// src/badges-v3-badge-badges.http.ts
var import_rest_modules = require("@wix/sdk-runtime/rest-modules");
var import_timestamp = require("@wix/sdk-runtime/transformations/timestamp");
var import_timestamp2 = require("@wix/sdk-runtime/transformations/timestamp");
var import_transform_paths = require("@wix/sdk-runtime/transformations/transform-paths");
var import_rest_modules2 = require("@wix/sdk-runtime/rest-modules");
function resolveComWixpressBadgesV3BadgesServiceV3Url(opts) {
  const domainToMappings = {
    "www.wixapis.com": [
      {
        srcPath: "/members/v3/badges",
        destPath: "/v3/badges"
      }
    ],
    "manage._base_domain_": [
      {
        srcPath: "/_api/members-badges-server/v3",
        destPath: "/v3"
      }
    ]
  };
  return (0, import_rest_modules2.resolveUrl)(Object.assign(opts, { domainToMappings }));
}
var PACKAGE_NAME = "@wix/auto_sdk_members_badges";
function createBadge(payload) {
  function __createBadge({ host }) {
    const serializedData = (0, import_transform_paths.transformPaths)(payload, [
      {
        transformFn: import_timestamp.transformSDKTimestampToRESTTimestamp,
        paths: [{ path: "badge.createdDate" }, { path: "badge.updatedDate" }]
      }
    ]);
    const metadata = {
      entityFqdn: "wix.badges.v3.badge",
      method: "POST",
      methodFqn: "com.wixpress.badges.v3.BadgesServiceV3.CreateBadge",
      packageName: PACKAGE_NAME,
      url: resolveComWixpressBadgesV3BadgesServiceV3Url({
        protoPath: "/v3/badges",
        data: serializedData,
        host
      }),
      data: serializedData,
      transformResponse: (payload2) => (0, import_transform_paths.transformPaths)(payload2, [
        {
          transformFn: import_timestamp2.transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "badge.createdDate" },
            { path: "badge.updatedDate" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __createBadge;
}
function updateBadge(payload) {
  function __updateBadge({ host }) {
    const serializedData = (0, import_transform_paths.transformPaths)(payload, [
      {
        transformFn: import_timestamp.transformSDKTimestampToRESTTimestamp,
        paths: [{ path: "badge.createdDate" }, { path: "badge.updatedDate" }]
      }
    ]);
    const metadata = {
      entityFqdn: "wix.badges.v3.badge",
      method: "PATCH",
      methodFqn: "com.wixpress.badges.v3.BadgesServiceV3.UpdateBadge",
      packageName: PACKAGE_NAME,
      url: resolveComWixpressBadgesV3BadgesServiceV3Url({
        protoPath: "/v3/badges/{badge.id}",
        data: serializedData,
        host
      }),
      data: serializedData,
      transformResponse: (payload2) => (0, import_transform_paths.transformPaths)(payload2, [
        {
          transformFn: import_timestamp2.transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "badge.createdDate" },
            { path: "badge.updatedDate" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __updateBadge;
}
function listBadges(payload) {
  function __listBadges({ host }) {
    const metadata = {
      entityFqdn: "wix.badges.v3.badge",
      method: "GET",
      methodFqn: "com.wixpress.badges.v3.BadgesServiceV3.ListBadges",
      packageName: PACKAGE_NAME,
      url: resolveComWixpressBadgesV3BadgesServiceV3Url({
        protoPath: "/v3/badges",
        data: payload,
        host
      }),
      params: (0, import_rest_modules.toURLSearchParams)(payload),
      transformResponse: (payload2) => (0, import_transform_paths.transformPaths)(payload2, [
        {
          transformFn: import_timestamp2.transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "badges.createdDate" },
            { path: "badges.updatedDate" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __listBadges;
}
function getBadge(payload) {
  function __getBadge({ host }) {
    const metadata = {
      entityFqdn: "wix.badges.v3.badge",
      method: "GET",
      methodFqn: "com.wixpress.badges.v3.BadgesServiceV3.GetBadge",
      packageName: PACKAGE_NAME,
      url: resolveComWixpressBadgesV3BadgesServiceV3Url({
        protoPath: "/v3/badges/{id}",
        data: payload,
        host
      }),
      params: (0, import_rest_modules.toURLSearchParams)(payload),
      transformResponse: (payload2) => (0, import_transform_paths.transformPaths)(payload2, [
        {
          transformFn: import_timestamp2.transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "badge.createdDate" },
            { path: "badge.updatedDate" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __getBadge;
}
function deleteBadge(payload) {
  function __deleteBadge({ host }) {
    const metadata = {
      entityFqdn: "wix.badges.v3.badge",
      method: "DELETE",
      methodFqn: "com.wixpress.badges.v3.BadgesServiceV3.DeleteBadge",
      packageName: PACKAGE_NAME,
      url: resolveComWixpressBadgesV3BadgesServiceV3Url({
        protoPath: "/v3/badges/{id}",
        data: payload,
        host
      }),
      params: (0, import_rest_modules.toURLSearchParams)(payload)
    };
    return metadata;
  }
  return __deleteBadge;
}
function assignBadge(payload) {
  function __assignBadge({ host }) {
    const metadata = {
      entityFqdn: "wix.badges.v3.badge",
      method: "POST",
      methodFqn: "com.wixpress.badges.v3.BadgesServiceV3.AssignBadge",
      packageName: PACKAGE_NAME,
      url: resolveComWixpressBadgesV3BadgesServiceV3Url({
        protoPath: "/v3/badges/{id}/members",
        data: payload,
        host
      }),
      data: payload
    };
    return metadata;
  }
  return __assignBadge;
}
function unassignBadge(payload) {
  function __unassignBadge({ host }) {
    const metadata = {
      entityFqdn: "wix.badges.v3.badge",
      method: "DELETE",
      methodFqn: "com.wixpress.badges.v3.BadgesServiceV3.UnassignBadge",
      packageName: PACKAGE_NAME,
      url: resolveComWixpressBadgesV3BadgesServiceV3Url({
        protoPath: "/v3/badges/{id}/members",
        data: payload,
        host
      }),
      params: (0, import_rest_modules.toURLSearchParams)(payload)
    };
    return metadata;
  }
  return __unassignBadge;
}
function listMembers(payload) {
  function __listMembers({ host }) {
    const metadata = {
      entityFqdn: "wix.badges.v3.badge",
      method: "GET",
      methodFqn: "com.wixpress.badges.v3.BadgesServiceV3.ListMembers",
      packageName: PACKAGE_NAME,
      url: resolveComWixpressBadgesV3BadgesServiceV3Url({
        protoPath: "/v3/badges/{id}/members",
        data: payload,
        host
      }),
      params: (0, import_rest_modules.toURLSearchParams)(payload)
    };
    return metadata;
  }
  return __listMembers;
}
function listMembersBadgeIds(payload) {
  function __listMembersBadgeIds({ host }) {
    const metadata = {
      entityFqdn: "wix.badges.v3.badge",
      method: "POST",
      methodFqn: "com.wixpress.badges.v3.BadgesServiceV3.ListMembersBadgeIds",
      packageName: PACKAGE_NAME,
      url: resolveComWixpressBadgesV3BadgesServiceV3Url({
        protoPath: "/v3/badges/members",
        data: payload,
        host
      }),
      data: payload
    };
    return metadata;
  }
  return __listMembersBadgeIds;
}
function getMemberCountsPerBadge(payload) {
  function __getMemberCountsPerBadge({ host }) {
    const metadata = {
      entityFqdn: "wix.badges.v3.badge",
      method: "GET",
      methodFqn: "com.wixpress.badges.v3.BadgesServiceV3.GetMemberCountsPerBadge",
      packageName: PACKAGE_NAME,
      url: resolveComWixpressBadgesV3BadgesServiceV3Url({
        protoPath: "/v3/badges/members/count",
        data: payload,
        host
      }),
      params: (0, import_rest_modules.toURLSearchParams)(payload)
    };
    return metadata;
  }
  return __getMemberCountsPerBadge;
}
function updateBadgesDisplayOrder(payload) {
  function __updateBadgesDisplayOrder({ host }) {
    const metadata = {
      entityFqdn: "wix.badges.v3.badge",
      method: "PATCH",
      methodFqn: "com.wixpress.badges.v3.BadgesServiceV3.UpdateBadgesDisplayOrder",
      packageName: PACKAGE_NAME,
      url: resolveComWixpressBadgesV3BadgesServiceV3Url({
        protoPath: "/v3/badges/order",
        data: payload,
        host
      }),
      data: payload,
      transformResponse: (payload2) => (0, import_transform_paths.transformPaths)(payload2, [
        {
          transformFn: import_timestamp2.transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "badges.createdDate" },
            { path: "badges.updatedDate" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __updateBadgesDisplayOrder;
}

// src/badges-v3-badge-badges.meta.ts
function createBadge2() {
  const payload = {};
  const getRequestOptions = createBadge(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v3/badges",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function updateBadge2() {
  const payload = { badge: { id: ":badgeId" } };
  const getRequestOptions = updateBadge(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "PATCH",
    path: "/v3/badges/{badge.id}",
    pathParams: { badgeId: "badgeId" },
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function listBadges2() {
  const payload = {};
  const getRequestOptions = listBadges(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "GET",
    path: "/v3/badges",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function getBadge2() {
  const payload = { id: ":id" };
  const getRequestOptions = getBadge(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "GET",
    path: "/v3/badges/{id}",
    pathParams: { id: "id" },
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function deleteBadge2() {
  const payload = { id: ":id" };
  const getRequestOptions = deleteBadge(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "DELETE",
    path: "/v3/badges/{id}",
    pathParams: { id: "id" },
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function assignBadge2() {
  const payload = { id: ":id" };
  const getRequestOptions = assignBadge(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v3/badges/{id}/members",
    pathParams: { id: "id" },
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function unassignBadge2() {
  const payload = { id: ":id" };
  const getRequestOptions = unassignBadge(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "DELETE",
    path: "/v3/badges/{id}/members",
    pathParams: { id: "id" },
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function listMembersByBadge() {
  const payload = { id: ":id" };
  const getRequestOptions = listMembers(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "GET",
    path: "/v3/badges/{id}/members",
    pathParams: { id: "id" },
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function listBadgesPerMember() {
  const payload = {};
  const getRequestOptions = listMembersBadgeIds(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v3/badges/members",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function getMemberCountsPerBadge2() {
  const payload = {};
  const getRequestOptions = getMemberCountsPerBadge(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "GET",
    path: "/v3/badges/members/count",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function updateBadgesDisplayOrder2() {
  const payload = {};
  const getRequestOptions = updateBadgesDisplayOrder(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "PATCH",
    path: "/v3/badges/order",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  assignBadge,
  createBadge,
  deleteBadge,
  getBadge,
  getMemberCountsPerBadge,
  listBadges,
  listBadgesPerMember,
  listMembersByBadge,
  unassignBadge,
  updateBadge,
  updateBadgesDisplayOrder
});
//# sourceMappingURL=meta.js.map