"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.bulkUpdateStaffMemberTagsByFilter = exports.bulkUpdateStaffMemberTags = exports.assignCustomSchedule = exports.assignWorkingHoursSchedule = exports.disconnectStaffMemberFromUser = exports.searchStaffMembers = exports.connectStaffMemberToUser = exports.countStaffMembers = exports.queryStaffMembers = exports.deleteStaffMember = exports.updateStaffMember = exports.getStaffMember = exports.createStaffMember = void 0;
const rest_modules_1 = require("@wix/sdk-runtime/rest-modules");
const float_1 = require("@wix/sdk-runtime/transformations/float");
const timestamp_1 = require("@wix/sdk-runtime/transformations/timestamp");
const timestamp_2 = require("@wix/sdk-runtime/transformations/timestamp");
const field_mask_1 = require("@wix/sdk-runtime/transformations/field-mask");
const transform_paths_1 = require("@wix/sdk-runtime/transformations/transform-paths");
const rest_modules_2 = require("@wix/sdk-runtime/rest-modules");
function resolveWixBookingsStaffV1StaffMembersServiceUrl(opts) {
    const domainToMappings = {
        'www._base_domain_': [
            {
                srcPath: '/_api/staff-members',
                destPath: '',
            },
        ],
        'manage._base_domain_': [
            {
                srcPath: '/_api/staff-members',
                destPath: '',
            },
        ],
        'editor._base_domain_': [
            {
                srcPath: '/_api/staff-members',
                destPath: '',
            },
        ],
        'blocks._base_domain_': [
            {
                srcPath: '/_api/staff-members',
                destPath: '',
            },
        ],
        'create.editorx': [
            {
                srcPath: '/_api/staff-members',
                destPath: '',
            },
        ],
        _: [
            {
                srcPath: '/_api/staff-members',
                destPath: '',
            },
        ],
        '*.dev.wix-code.com': [
            {
                srcPath: '/_api/staff-members',
                destPath: '',
            },
        ],
        'www.wixapis.com': [
            {
                srcPath: '/bookings/v1/staff-members',
                destPath: '/v1/staff-members',
            },
        ],
    };
    return (0, rest_modules_2.resolveUrl)(Object.assign(opts, { domainToMappings }));
}
const PACKAGE_NAME = '@wix/auto_sdk_bookings_staff-members';
/**
 * Creates a staff member.
 *
 *
 * By default, the staff member works during the business working hours. You
 * could follow *this sample flow*
 * ([SDK](https://dev.wix.com/docs/sdk/backend-modules/bookings/staff-members/sample-flows#backend-modules_bookings_staff-members_assign-a-staff-working-hour-schedule) | [REST](https://dev.wix.com/docs/rest/business-solutions/bookings/staff-members/sample-flows#assign-a-staff-working-hour-schedule))
 * to set custom working hours.
 */
function createStaffMember(payload) {
    function __createStaffMember({ host }) {
        const serializedData = (0, transform_paths_1.transformPaths)(payload, [
            {
                transformFn: timestamp_1.transformSDKTimestampToRESTTimestamp,
                paths: [
                    { path: 'staffMember.createdDate' },
                    { path: 'staffMember.updatedDate' },
                    { path: 'staffMember.mainMedia.image.urlExpirationDate' },
                ],
            },
        ]);
        const metadata = {
            entityFqdn: 'wix.bookings.staff.v1.staff_member',
            method: 'POST',
            methodFqn: 'wix.bookings.staff.v1.StaffMembersService.CreateStaffMember',
            packageName: PACKAGE_NAME,
            url: resolveWixBookingsStaffV1StaffMembersServiceUrl({
                protoPath: '/v1/staff-members',
                data: serializedData,
                host,
            }),
            data: serializedData,
            transformResponse: (payload) => (0, transform_paths_1.transformPaths)(payload, [
                {
                    transformFn: timestamp_2.transformRESTTimestampToSDKTimestamp,
                    paths: [
                        { path: 'staffMember.createdDate' },
                        { path: 'staffMember.updatedDate' },
                        { path: 'staffMember.mainMedia.image.urlExpirationDate' },
                    ],
                },
            ]),
        };
        return metadata;
    }
    return __createStaffMember;
}
exports.createStaffMember = createStaffMember;
/** Retrieves a staff member. */
function getStaffMember(payload) {
    function __getStaffMember({ host }) {
        const metadata = {
            entityFqdn: 'wix.bookings.staff.v1.staff_member',
            method: 'GET',
            methodFqn: 'wix.bookings.staff.v1.StaffMembersService.GetStaffMember',
            packageName: PACKAGE_NAME,
            url: resolveWixBookingsStaffV1StaffMembersServiceUrl({
                protoPath: '/v1/staff-members/{staffMemberId}',
                data: payload,
                host,
            }),
            params: (0, rest_modules_1.toURLSearchParams)(payload),
            transformResponse: (payload) => (0, transform_paths_1.transformPaths)(payload, [
                {
                    transformFn: timestamp_2.transformRESTTimestampToSDKTimestamp,
                    paths: [
                        { path: 'staffMember.createdDate' },
                        { path: 'staffMember.updatedDate' },
                        { path: 'staffMember.mainMedia.image.urlExpirationDate' },
                    ],
                },
            ]),
        };
        return metadata;
    }
    return __getStaffMember;
}
exports.getStaffMember = getStaffMember;
/**
 * Updates a staff member.
 *
 *
 * Each time the staff member is updated, `revision` increments by 1. You must
 * include current revision of the staff member when updating it. This ensures
 * you're working with the latest service information and prevents unintended
 * overwrites.
 */
function updateStaffMember(payload) {
    function __updateStaffMember({ host }) {
        const serializedData = (0, transform_paths_1.transformPaths)(payload, [
            {
                transformFn: field_mask_1.transformSDKFieldMaskToRESTFieldMask,
                paths: [{ path: 'fieldMask' }],
            },
            {
                transformFn: timestamp_1.transformSDKTimestampToRESTTimestamp,
                paths: [
                    { path: 'staffMember.createdDate' },
                    { path: 'staffMember.updatedDate' },
                    { path: 'staffMember.mainMedia.image.urlExpirationDate' },
                ],
            },
        ]);
        const metadata = {
            entityFqdn: 'wix.bookings.staff.v1.staff_member',
            method: 'PATCH',
            methodFqn: 'wix.bookings.staff.v1.StaffMembersService.UpdateStaffMember',
            packageName: PACKAGE_NAME,
            url: resolveWixBookingsStaffV1StaffMembersServiceUrl({
                protoPath: '/v1/staff-members/{staffMember.id}',
                data: serializedData,
                host,
            }),
            data: serializedData,
            transformResponse: (payload) => (0, transform_paths_1.transformPaths)(payload, [
                {
                    transformFn: timestamp_2.transformRESTTimestampToSDKTimestamp,
                    paths: [
                        { path: 'staffMember.createdDate' },
                        { path: 'staffMember.updatedDate' },
                        { path: 'staffMember.mainMedia.image.urlExpirationDate' },
                    ],
                },
            ]),
        };
        return metadata;
    }
    return __updateStaffMember;
}
exports.updateStaffMember = updateStaffMember;
/**
 * Deletes a staff member.
 *
 *
 * Also deletes the *resource*
 * ([SDK](https://dev.wix.com/docs/sdk/backend-modules/bookings/resources/introduction) | [REST](https://dev.wix.com/docs/rest/business-solutions/bookings/resources/resources-v2/introduction))
 * associated with the staff member.
 */
function deleteStaffMember(payload) {
    function __deleteStaffMember({ host }) {
        const metadata = {
            entityFqdn: 'wix.bookings.staff.v1.staff_member',
            method: 'DELETE',
            methodFqn: 'wix.bookings.staff.v1.StaffMembersService.DeleteStaffMember',
            packageName: PACKAGE_NAME,
            url: resolveWixBookingsStaffV1StaffMembersServiceUrl({
                protoPath: '/v1/staff-members/{staffMemberId}',
                data: payload,
                host,
            }),
            params: (0, rest_modules_1.toURLSearchParams)(payload),
        };
        return metadata;
    }
    return __deleteStaffMember;
}
exports.deleteStaffMember = deleteStaffMember;
/**
 * Creates a query to retrieve a list of staff members.
 *
 * The `queryStaffMembers()` function builds a query to retrieve a list of staff members and returns a `StaffMembersQueryBuilder` object.
 *
 * The returned object contains the query definition, which is typically used to run the query using the [find()](https://dev.wix.com/docs/sdk/backend-modules/bookings/staff-members/staff-members-query-builder/find) function.
 *
 * You can refine the query by chaining `StaffMembersQueryBuilder` functions onto the query. `StaffMembersQueryBuilder` functions enable you to sort, filter, and control the results that `queryStaffMembers()` returns.
 *
 * `queryStaffMembers()` runs with the following `StaffMembersQueryBuilder` default that you can override:
 *
 * + `limit` is `50`.
 * + Sorted by `id` in ascending order.
 *
 * The functions that are chained to `staffMembersTypes()` are applied in the order they are called.
 *
 * The following `StaffMembersQueryBuilder` functions are supported for the `queryStaffMembers()` function. For a full description of the resource object, see the object returned for the [items](https://dev.wix.com/docs/sdk/backend-modules/bookings/staff-members/staff-members-query-result/items) property in `StaffMembersQueryResult`.
 */
function queryStaffMembers(payload) {
    function __queryStaffMembers({ host }) {
        const metadata = {
            entityFqdn: 'wix.bookings.staff.v1.staff_member',
            method: 'POST',
            methodFqn: 'wix.bookings.staff.v1.StaffMembersService.QueryStaffMembers',
            packageName: PACKAGE_NAME,
            url: resolveWixBookingsStaffV1StaffMembersServiceUrl({
                protoPath: '/v1/staff-members/query',
                data: payload,
                host,
            }),
            data: payload,
            transformResponse: (payload) => (0, transform_paths_1.transformPaths)(payload, [
                {
                    transformFn: timestamp_2.transformRESTTimestampToSDKTimestamp,
                    paths: [
                        { path: 'staffMembers.createdDate' },
                        { path: 'staffMembers.updatedDate' },
                        { path: 'staffMembers.mainMedia.image.urlExpirationDate' },
                    ],
                },
            ]),
        };
        return metadata;
    }
    return __queryStaffMembers;
}
exports.queryStaffMembers = queryStaffMembers;
/**
 * Counts how many staff members match the given filter.
 *
 *
 * ## Filter
 *
 * Refer to the _supported filters article_
 * ([SDK](https://dev.wix.com/docs/sdk/backend-modules/bookings/staff-members/supported-filters) | [REST](https://dev.wix.com/docs/rest/business-solutions/bookings/staff-members/filtering-and-sorting))
 * for a complete list of supported filters and sorting options.
 *
 * ## See also
 *
 * To learn about working with filters in general, see
 * [API Query Language](https://dev.wix.com/docs/rest/articles/getting-started/api-query-language#filters).
 */
function countStaffMembers(payload) {
    function __countStaffMembers({ host }) {
        const metadata = {
            entityFqdn: 'wix.bookings.staff.v1.staff_member',
            method: 'POST',
            methodFqn: 'wix.bookings.staff.v1.StaffMembersService.CountStaffMembers',
            packageName: PACKAGE_NAME,
            url: resolveWixBookingsStaffV1StaffMembersServiceUrl({
                protoPath: '/v1/staff-members/count',
                data: payload,
                host,
            }),
            data: payload,
        };
        return metadata;
    }
    return __countStaffMembers;
}
exports.countStaffMembers = countStaffMembers;
/**
 * Connects a Wix user to a staff member, enabling them to manage their own
 * working hour schedule in the dashboard.
 *
 *
 * By default, Wix Bookings uses the staff member's `email`. However, you can
 * specify an alternative email address. If no existing Wix user is associated
 * with that email, Wix sends them an invitation to become a Wix user. If an
 * existing user is found but not linked to the site, Wix Bookings sends an
 * invitation to join the site.
 *
 * To check the connection status, call *Get Staff Member*
 * ([SDK](https://dev.wix.com/docs/sdk/backend-modules/bookings/staff-members/get-staff-member) | [REST](https://dev.wix.com/docs/rest/business-solutions/bookings/staff-members/get-staff-member)),
 * and specify `ASSOCIATED_IDENTITY_STATUS` in the `fields` parameter.
 *
 * You must call *Disconnect Staff Member From User*
 * ([SDK](https://dev.wix.com/docs/sdk/backend-modules/bookings/staff-members/disconnect-staff-member-from-user) | [REST](https://dev.wix.com/docs/rest/business-solutions/bookings/staff-members/disconnect-staff-member-from-user))
 * before connecting a different Wix user to the staff member.
 */
function connectStaffMemberToUser(payload) {
    function __connectStaffMemberToUser({ host }) {
        const metadata = {
            entityFqdn: 'wix.bookings.staff.v1.staff_member',
            method: 'POST',
            methodFqn: 'wix.bookings.staff.v1.StaffMembersService.ConnectStaffMemberToUser',
            packageName: PACKAGE_NAME,
            url: resolveWixBookingsStaffV1StaffMembersServiceUrl({
                protoPath: '/v1/staff-members/{staffMemberId}/connect-staff-member-to-user',
                data: payload,
                host,
            }),
            data: payload,
            transformResponse: (payload) => (0, transform_paths_1.transformPaths)(payload, [
                {
                    transformFn: timestamp_2.transformRESTTimestampToSDKTimestamp,
                    paths: [
                        { path: 'staffMember.createdDate' },
                        { path: 'staffMember.updatedDate' },
                        { path: 'staffMember.mainMedia.image.urlExpirationDate' },
                    ],
                },
            ]),
        };
        return metadata;
    }
    return __connectStaffMemberToUser;
}
exports.connectStaffMemberToUser = connectStaffMemberToUser;
/**
 * Retrieves a list of up to 100 staff members, given the provided filtering, paging,
 * and sorting.
 *
 *
 * ## Defaults
 *
 * Search Staff Members has the following default settings, which you can override:
 * + Sorted by `createdDate` in ascending order.
 * + `cursorPaging.limit` set to `100`.
 *
 * ## Filter
 *
 * Refer to the _supported filters article_
 * ([SDK](https://dev.wix.com/docs/sdk/backend-modules/bookings/staff-members/supported-filters) | [REST](https://dev.wix.com/docs/rest/business-solutions/bookings/staff-members/filtering-and-sorting))
 * for a complete list of supported filters and sorting options.
 *
 * ## See also
 *
 * To learn about working with *Search* methods, see
 * _API Query Language_
 * ([SDK](https://dev.wix.com/docs/sdk/articles/work-with-the-sdk/api-query-language) | [REST](https://dev.wix.com/docs/rest/articles/getting-started/api-query-language))
 * and _Sorting and Paging_
 * ([SDK](https://dev.wix.com/docs/sdk/articles/work-with-the-sdk/api-query-language#the-sort-array) | [REST](https://dev.wix.com/docs/rest/articles/getting-started/sorting-and-paging)).
 */
function searchStaffMembers(payload) {
    function __searchStaffMembers({ host }) {
        const metadata = {
            entityFqdn: 'wix.bookings.staff.v1.staff_member',
            method: 'POST',
            methodFqn: 'wix.bookings.staff.v1.StaffMembersService.SearchStaffMembers',
            packageName: PACKAGE_NAME,
            url: resolveWixBookingsStaffV1StaffMembersServiceUrl({
                protoPath: '/v1/staff-members/search',
                data: payload,
                host,
            }),
            data: payload,
            transformResponse: (payload) => (0, transform_paths_1.transformPaths)(payload, [
                {
                    transformFn: timestamp_2.transformRESTTimestampToSDKTimestamp,
                    paths: [
                        { path: 'staffMembers.createdDate' },
                        { path: 'staffMembers.updatedDate' },
                        { path: 'staffMembers.mainMedia.image.urlExpirationDate' },
                    ],
                },
                {
                    transformFn: float_1.transformRESTFloatToSDKFloat,
                    paths: [
                        { path: 'aggregationData.results.ranges.results.from' },
                        { path: 'aggregationData.results.ranges.results.to' },
                        {
                            path: 'aggregationData.results.groupedByValue.results.nestedResults.ranges.results.from',
                        },
                        {
                            path: 'aggregationData.results.groupedByValue.results.nestedResults.ranges.results.to',
                        },
                        {
                            path: 'aggregationData.results.nested.results.results.*.range.from',
                        },
                        {
                            path: 'aggregationData.results.nested.results.results.*.range.to',
                        },
                        { path: 'aggregationData.results.scalar.value' },
                        {
                            path: 'aggregationData.results.groupedByValue.results.nestedResults.scalar.value',
                        },
                        {
                            path: 'aggregationData.results.nested.results.results.*.scalar.value',
                        },
                    ],
                },
            ]),
        };
        return metadata;
    }
    return __searchStaffMembers;
}
exports.searchStaffMembers = searchStaffMembers;
/**
 * Disconnects a staff member from a Wix user, clearing the `associatedWixIdentity`
 * field. Consequently, the user can no longer manage the staff member's working
 * hour schedule in the dashboard.
 *
 *
 * You must call *Disconnect Staff Member From User* before connecting a
 * different Wix user to the staff member.
 */
function disconnectStaffMemberFromUser(payload) {
    function __disconnectStaffMemberFromUser({ host }) {
        const metadata = {
            entityFqdn: 'wix.bookings.staff.v1.staff_member',
            method: 'POST',
            methodFqn: 'wix.bookings.staff.v1.StaffMembersService.DisconnectStaffMemberFromUser',
            packageName: PACKAGE_NAME,
            url: resolveWixBookingsStaffV1StaffMembersServiceUrl({
                protoPath: '/v1/staff-members/{staffMemberId}/disconnect-staff-member-from-user',
                data: payload,
                host,
            }),
            data: payload,
            transformResponse: (payload) => (0, transform_paths_1.transformPaths)(payload, [
                {
                    transformFn: timestamp_2.transformRESTTimestampToSDKTimestamp,
                    paths: [
                        { path: 'staffMember.createdDate' },
                        { path: 'staffMember.updatedDate' },
                        { path: 'staffMember.mainMedia.image.urlExpirationDate' },
                    ],
                },
            ]),
        };
        return metadata;
    }
    return __disconnectStaffMemberFromUser;
}
exports.disconnectStaffMemberFromUser = disconnectStaffMemberFromUser;
/**
 * Updates a staff member's working hours based on the specified *schedule ID*
 * ([SDK](https://dev.wix.com/docs/sdk/backend-modules/calendar/schedules/introduction) | [REST](https://dev.wix.com/docs/rest/business-management/calendar/schedules-v3/introduction)).
 *
 *
 * ## Default working hours
 *
 * By default, staff members work during the opening hours of the business's
 * _default location_
 * ([SDK](https://dev.wix.com/docs/sdk/backend-modules/business-tools/locations/introduction) | [REST](https://dev.wix.com/docs/rest/business-management/locations/introduction)).
 *
 * ## Schedule ID
 *
 * You can specify either the ID of the business's working hour schedule or the
 * staff member's event schedule. The call fails if you specify a different
 * schedule ID.
 *
 * ### Staff event schedule
 *
 * To customize a staff member's working hours, specify their event schedule ID
 * as `scheduleId`. Refer to *this sample flow*
 * ([SDK](https://dev.wix.com/docs/sdk/backend-modules/bookings/staff-members/sample-flows#backend-modules_bookings_staff-members_assign-a-staff-working-hour-schedule) | [REST](https://dev.wix.com/docs/rest/business-solutions/bookings/staff-members/sample-flows#assign-a-staff-working-hour-schedule))
 * for more details.
 *
 * ### Business working hour schedule
 *
 * To reset a staff member’s working hours to the default business hours,
 * specify the ID of the business working hour schedule as `scheduleId`.
 */
function assignWorkingHoursSchedule(payload) {
    function __assignWorkingHoursSchedule({ host }) {
        const metadata = {
            entityFqdn: 'wix.bookings.staff.v1.staff_member',
            method: 'POST',
            methodFqn: 'wix.bookings.staff.v1.StaffMembersService.AssignWorkingHoursSchedule',
            packageName: PACKAGE_NAME,
            url: resolveWixBookingsStaffV1StaffMembersServiceUrl({
                protoPath: '/v1/staff-members/{staffMemberId}/assign-working-hours-schedule',
                data: payload,
                host,
            }),
            data: payload,
            transformResponse: (payload) => (0, transform_paths_1.transformPaths)(payload, [
                {
                    transformFn: timestamp_2.transformRESTTimestampToSDKTimestamp,
                    paths: [
                        { path: 'staffMember.createdDate' },
                        { path: 'staffMember.updatedDate' },
                        { path: 'staffMember.mainMedia.image.urlExpirationDate' },
                    ],
                },
            ]),
        };
        return metadata;
    }
    return __assignWorkingHoursSchedule;
}
exports.assignWorkingHoursSchedule = assignWorkingHoursSchedule;
/**
 * Assigns a custom working hours schedule to the staff member
 *
 *
 * The working hours schedule is a schedule that defines the working hours of a staff member,
 * and dictate when the staff member is available for bookings.
 *
 * By default staff members use the shared business working hours schedule. By assigning a custom working hours schedule to a staff member,
 * you can define specific working hours for that staff member.
 *
 * To create and manage schedules and working hours sessions, use [Events API](https://dev.wix.com/docs/rest/business-management/calendar/events-v3/introduction).
 * @deprecated It has been replaced with wix.bookings.staff.v1.StaffMembersService.AssignWorkingHoursSchedule(), and will be removed on 2024-12-31.
 */
function assignCustomSchedule(payload) {
    function __assignCustomSchedule({ host }) {
        const metadata = {
            entityFqdn: 'wix.bookings.staff.v1.staff_member',
            method: 'POST',
            methodFqn: 'wix.bookings.staff.v1.StaffMembersService.AssignCustomSchedule',
            packageName: PACKAGE_NAME,
            url: resolveWixBookingsStaffV1StaffMembersServiceUrl({
                protoPath: '/v1/staff-members/{staffMemberId}/assign-custom-schedule',
                data: payload,
                host,
            }),
            data: payload,
            transformResponse: (payload) => (0, transform_paths_1.transformPaths)(payload, [
                {
                    transformFn: timestamp_2.transformRESTTimestampToSDKTimestamp,
                    paths: [
                        { path: 'staffMember.createdDate' },
                        { path: 'staffMember.updatedDate' },
                        { path: 'staffMember.mainMedia.image.urlExpirationDate' },
                    ],
                },
            ]),
        };
        return metadata;
    }
    return __assignCustomSchedule;
}
exports.assignCustomSchedule = assignCustomSchedule;
/**
 * Synchronously updates *tags*
 * ([SDK](https://dev.wix.com/docs/sdk/backend-modules/tags/tags/introduction) | [REST](https://dev.wix.com/docs/rest/business-management/tags/introduction)).
 * for up to 100 staff members.
 *
 *
 * If you specify a tag both in `assignTags` and `unassignTags`, the call
 * succeeds and the tag is assigned.
 */
function bulkUpdateStaffMemberTags(payload) {
    function __bulkUpdateStaffMemberTags({ host }) {
        const metadata = {
            entityFqdn: 'wix.bookings.staff.v1.staff_member',
            method: 'POST',
            methodFqn: 'wix.bookings.staff.v1.StaffMembersService.BulkUpdateStaffMemberTags',
            packageName: PACKAGE_NAME,
            url: resolveWixBookingsStaffV1StaffMembersServiceUrl({
                protoPath: '/v1/bulk/staff-members/update-tags',
                data: payload,
                host,
            }),
            data: payload,
        };
        return metadata;
    }
    return __bulkUpdateStaffMemberTags;
}
exports.bulkUpdateStaffMemberTags = bulkUpdateStaffMemberTags;
/**
 * Asynchronously updates *tags*
 * ([SDK](https://dev.wix.com/docs/sdk/backend-modules/tags/tags/introduction) | [REST](https://dev.wix.com/docs/rest/business-management/tags/introduction)).
 * for staff members, given the provided filtering.
 *
 *
 * If you specify a tag both in `assignTags` and `unassignTags`, the call
 * succeeds and the tag is assigned.
 *
 * ## Filter
 *
 * Refer to the supported filters article
 * ([REST](https://dev.wix.com/docs/rest/business-solutions/bookings/staff-members/filtering-and-sorting))
 * for a complete list of supported filters and sorting options.
 */
function bulkUpdateStaffMemberTagsByFilter(payload) {
    function __bulkUpdateStaffMemberTagsByFilter({ host }) {
        const metadata = {
            entityFqdn: 'wix.bookings.staff.v1.staff_member',
            method: 'POST',
            methodFqn: 'wix.bookings.staff.v1.StaffMembersService.BulkUpdateStaffMemberTagsByFilter',
            packageName: PACKAGE_NAME,
            url: resolveWixBookingsStaffV1StaffMembersServiceUrl({
                protoPath: '/v1/bulk/staff-members/update-tags-by-filter',
                data: payload,
                host,
            }),
            data: payload,
        };
        return metadata;
    }
    return __bulkUpdateStaffMemberTagsByFilter;
}
exports.bulkUpdateStaffMemberTagsByFilter = bulkUpdateStaffMemberTagsByFilter;
//# sourceMappingURL=bookings-staff-v1-staff-member-staff-members.http.js.map