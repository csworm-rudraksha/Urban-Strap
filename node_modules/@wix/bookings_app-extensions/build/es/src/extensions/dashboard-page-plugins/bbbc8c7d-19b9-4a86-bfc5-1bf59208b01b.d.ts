/**
 * @pageName BookingCalendar
 * @slotType dashboard plugin
 */
export interface ExtensionProps {
    notifyStartLoading?: () => void;
    notifyFinishedLoading?: () => void;
    liveCalendar3: {
        listenToLiveUpdates(params: {
            callback: (liveUpdateItems: LiveCalendar3UpdateItem[]) => void;
        }): {
            remove(): void;
        };
    };
}
/** @internal */
export type LiveCalendar3UpdateItem = {
    changeType: 'event-created' | 'event-updated';
    id?: string | null;
    title?: string | null;
    adjustedStart?: ZonedDate;
    adjustedEnd?: ZonedDate;
    start?: ZonedDate;
    end?: ZonedDate;
    status?: Status;
    recurrenceType?: RecurrenceType;
};
/** @internal */
export interface ZonedDate {
    /**
     * Local date time in [ISO-8601 format](https://en.wikipedia.org/wiki/ISO_8601).
     * For example, `2024-01-30T13:30:00`.
     */
    localDate?: string | null;
    /**
     * Time zone in
     * [IANA tz database format](https://en.wikipedia.org/wiki/Tz_database).
     * For example, `America/New_York`.
     */
    timeZone?: string | null;
    /**
     * UTC date time in [ISO-8601 format](https://en.wikipedia.org/wiki/ISO_8601).
     * For example, `2024-01-30T13:30:00`.
     * Not available for adjusted date fields.
     */
    utcDate?: Date | null;
}
/** @internal */
export declare enum Status {
    CONFIRMED = "CONFIRMED",
    CANCELLED = "CANCELLED"
}
/** @internal */
export declare enum RecurrenceType {
    NONE = "NONE",
    MASTER = "MASTER",
    INSTANCE = "INSTANCE",
    EXCEPTION = "EXCEPTION"
}
/**
 * @pageName BookingCalendar
 * @slotType dashboard plugin
 */
export interface SideBarExtensionProps {
    notifyStartLoading?: () => void;
    notifyFinishedLoading?: () => void;
    currentView: {
        startDate: Date;
        endDate: Date;
        viewType: 'weekly' | 'daily' | 'staff' | 'schedule';
        selectedEvent: Event | null;
    };
    timeZone: string;
    countryCode: string;
    showSidePanel(componentName: string, componentProps?: object): void;
    reportSidePanelLoaded(): void;
    hideSidePanel(): void;
    selectEvent(eventId: string, eventStartTime: Date): void;
}
/**
 * @pageName BookingCalendar
 * @slotType dashboard menu plugin
 */
export type CalendarMoreActionsMenuParams = {};
