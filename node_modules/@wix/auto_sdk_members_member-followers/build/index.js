"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// index.ts
var index_exports = {};
__export(index_exports, {
  WebhookIdentityType: () => WebhookIdentityType,
  followMember: () => followMember4,
  listCurrentMemberFollowers: () => listCurrentMemberFollowers3,
  listCurrentMemberFollowing: () => listCurrentMemberFollowing3,
  listMemberFollowers: () => listMemberFollowers4,
  listMemberFollowing: () => listMemberFollowing4,
  onFollowMemberFollowed: () => onFollowMemberFollowed2,
  onFollowMemberUnfollowed: () => onFollowMemberUnfollowed2,
  queryCurrentMemberConnections: () => queryCurrentMemberConnections3,
  queryMemberConnections: () => queryMemberConnections4,
  unfollowMember: () => unfollowMember4
});
module.exports = __toCommonJS(index_exports);

// src/members-v3-follow-member-followers.public.ts
var import_rename_all_nested_keys2 = require("@wix/sdk-runtime/rename-all-nested-keys");
var import_timestamp = require("@wix/sdk-runtime/transformations/timestamp");
var import_transform_paths = require("@wix/sdk-runtime/transformations/transform-paths");
var import_sdk_types = require("@wix/sdk-types");

// src/members-v3-follow-member-followers.universal.ts
var import_transform_error = require("@wix/sdk-runtime/transform-error");
var import_rename_all_nested_keys = require("@wix/sdk-runtime/rename-all-nested-keys");

// src/members-v3-follow-member-followers.http.ts
var import_rest_modules = require("@wix/sdk-runtime/rest-modules");
var import_rest_modules2 = require("@wix/sdk-runtime/rest-modules");
function resolveComWixpressMembersFollowV3MemberFollowersUrl(opts) {
  const domainToMappings = {
    "www.wixapis.com": [
      {
        srcPath: "/members/v3/followers",
        destPath: "/v3/followers"
      }
    ],
    "www._base_domain_": [
      {
        srcPath: "/_api/members/v3/followers",
        destPath: "/v3/followers"
      },
      {
        srcPath: "/members/v3/followers",
        destPath: "/v3/followers"
      }
    ],
    _: [
      {
        srcPath: "/_api/members/v3/followers",
        destPath: "/v3/followers"
      }
    ],
    "editor._base_domain_": [
      {
        srcPath: "/_api/members/v3/followers",
        destPath: "/v3/followers"
      }
    ],
    "blocks._base_domain_": [
      {
        srcPath: "/_api/members/v3/followers",
        destPath: "/v3/followers"
      }
    ],
    "create.editorx": [
      {
        srcPath: "/_api/members/v3/followers",
        destPath: "/v3/followers"
      }
    ],
    "manage._base_domain_": [
      {
        srcPath: "/_api/members/v3/followers",
        destPath: "/v3/followers"
      }
    ],
    "*.dev.wix-code.com": [
      {
        srcPath: "/_api/members/v3/followers",
        destPath: "/v3/followers"
      }
    ]
  };
  return (0, import_rest_modules2.resolveUrl)(Object.assign(opts, { domainToMappings }));
}
var PACKAGE_NAME = "@wix/auto_sdk_members_member-followers";
function followMember(payload) {
  function __followMember({ host }) {
    const metadata = {
      entityFqdn: "wix.members.v3.follow",
      method: "POST",
      methodFqn: "com.wixpress.members.follow.v3.MemberFollowers.FollowMember",
      packageName: PACKAGE_NAME,
      url: resolveComWixpressMembersFollowV3MemberFollowersUrl({
        protoPath: "/v3/followers/{memberId}",
        data: payload,
        host
      }),
      data: payload
    };
    return metadata;
  }
  return __followMember;
}
function unfollowMember(payload) {
  function __unfollowMember({ host }) {
    const metadata = {
      entityFqdn: "wix.members.v3.follow",
      method: "DELETE",
      methodFqn: "com.wixpress.members.follow.v3.MemberFollowers.UnfollowMember",
      packageName: PACKAGE_NAME,
      url: resolveComWixpressMembersFollowV3MemberFollowersUrl({
        protoPath: "/v3/followers/{memberId}",
        data: payload,
        host
      }),
      params: (0, import_rest_modules.toURLSearchParams)(payload)
    };
    return metadata;
  }
  return __unfollowMember;
}
function listMyMemberFollowing(payload) {
  function __listMyMemberFollowing({ host }) {
    const metadata = {
      entityFqdn: "wix.members.v3.follow",
      method: "GET",
      methodFqn: "com.wixpress.members.follow.v3.MemberFollowers.ListMyMemberFollowing",
      packageName: PACKAGE_NAME,
      url: resolveComWixpressMembersFollowV3MemberFollowersUrl({
        protoPath: "/v3/followers/my/following",
        data: payload,
        host
      }),
      params: (0, import_rest_modules.toURLSearchParams)(payload)
    };
    return metadata;
  }
  return __listMyMemberFollowing;
}
function listMemberFollowing(payload) {
  function __listMemberFollowing({ host }) {
    const metadata = {
      entityFqdn: "wix.members.v3.follow",
      method: "GET",
      methodFqn: "com.wixpress.members.follow.v3.MemberFollowers.ListMemberFollowing",
      packageName: PACKAGE_NAME,
      url: resolveComWixpressMembersFollowV3MemberFollowersUrl({
        protoPath: "/v3/followers/{memberId}/following",
        data: payload,
        host
      }),
      params: (0, import_rest_modules.toURLSearchParams)(payload)
    };
    return metadata;
  }
  return __listMemberFollowing;
}
function listMyMemberFollowers(payload) {
  function __listMyMemberFollowers({ host }) {
    const metadata = {
      entityFqdn: "wix.members.v3.follow",
      method: "GET",
      methodFqn: "com.wixpress.members.follow.v3.MemberFollowers.ListMyMemberFollowers",
      packageName: PACKAGE_NAME,
      url: resolveComWixpressMembersFollowV3MemberFollowersUrl({
        protoPath: "/v3/followers/my",
        data: payload,
        host
      }),
      params: (0, import_rest_modules.toURLSearchParams)(payload)
    };
    return metadata;
  }
  return __listMyMemberFollowers;
}
function listMemberFollowers(payload) {
  function __listMemberFollowers({ host }) {
    const metadata = {
      entityFqdn: "wix.members.v3.follow",
      method: "GET",
      methodFqn: "com.wixpress.members.follow.v3.MemberFollowers.ListMemberFollowers",
      packageName: PACKAGE_NAME,
      url: resolveComWixpressMembersFollowV3MemberFollowersUrl({
        protoPath: "/v3/followers/{memberId}",
        data: payload,
        host
      }),
      params: (0, import_rest_modules.toURLSearchParams)(payload)
    };
    return metadata;
  }
  return __listMemberFollowers;
}
function queryMyMemberConnections(payload) {
  function __queryMyMemberConnections({ host }) {
    const metadata = {
      entityFqdn: "wix.members.v3.follow",
      method: "POST",
      methodFqn: "com.wixpress.members.follow.v3.MemberFollowers.QueryMyMemberConnections",
      packageName: PACKAGE_NAME,
      url: resolveComWixpressMembersFollowV3MemberFollowersUrl({
        protoPath: "/v3/followers/my/connections",
        data: payload,
        host
      }),
      data: payload
    };
    return metadata;
  }
  return __queryMyMemberConnections;
}
function queryMemberConnections(payload) {
  function __queryMemberConnections({ host }) {
    const metadata = {
      entityFqdn: "wix.members.v3.follow",
      method: "POST",
      methodFqn: "com.wixpress.members.follow.v3.MemberFollowers.QueryMemberConnections",
      packageName: PACKAGE_NAME,
      url: resolveComWixpressMembersFollowV3MemberFollowersUrl({
        protoPath: "/v3/followers/{memberId}/connections",
        data: payload,
        host
      }),
      data: payload
    };
    return metadata;
  }
  return __queryMemberConnections;
}

// src/members-v3-follow-member-followers.universal.ts
var WebhookIdentityType = /* @__PURE__ */ ((WebhookIdentityType2) => {
  WebhookIdentityType2["UNKNOWN"] = "UNKNOWN";
  WebhookIdentityType2["ANONYMOUS_VISITOR"] = "ANONYMOUS_VISITOR";
  WebhookIdentityType2["MEMBER"] = "MEMBER";
  WebhookIdentityType2["WIX_USER"] = "WIX_USER";
  WebhookIdentityType2["APP"] = "APP";
  return WebhookIdentityType2;
})(WebhookIdentityType || {});
async function followMember2(memberId) {
  const { httpClient, sideEffects } = arguments[1];
  const payload = (0, import_rename_all_nested_keys.renameKeysFromSDKRequestToRESTRequest)({ memberId });
  const reqOpts = followMember(payload);
  sideEffects?.onSiteCall?.();
  try {
    const result = await httpClient.request(reqOpts);
    sideEffects?.onSuccess?.(result);
  } catch (err) {
    const transformedError = (0, import_transform_error.transformError)(
      err,
      {
        spreadPathsToArguments: {},
        explicitPathsToArguments: { memberId: "$[0]" },
        singleArgumentUnchanged: false
      },
      ["memberId"]
    );
    sideEffects?.onError?.(err);
    throw transformedError;
  }
}
async function unfollowMember2(memberId) {
  const { httpClient, sideEffects } = arguments[1];
  const payload = (0, import_rename_all_nested_keys.renameKeysFromSDKRequestToRESTRequest)({ memberId });
  const reqOpts = unfollowMember(payload);
  sideEffects?.onSiteCall?.();
  try {
    const result = await httpClient.request(reqOpts);
    sideEffects?.onSuccess?.(result);
  } catch (err) {
    const transformedError = (0, import_transform_error.transformError)(
      err,
      {
        spreadPathsToArguments: {},
        explicitPathsToArguments: { memberId: "$[0]" },
        singleArgumentUnchanged: false
      },
      ["memberId"]
    );
    sideEffects?.onError?.(err);
    throw transformedError;
  }
}
async function listCurrentMemberFollowing(options) {
  const { httpClient, sideEffects } = arguments[1];
  const payload = (0, import_rename_all_nested_keys.renameKeysFromSDKRequestToRESTRequest)({
    paging: options?.paging
  });
  const reqOpts = listMyMemberFollowing(payload);
  sideEffects?.onSiteCall?.();
  try {
    const result = await httpClient.request(reqOpts);
    sideEffects?.onSuccess?.(result);
    return {
      memberIds: (0, import_rename_all_nested_keys.renameKeysFromRESTResponseToSDKResponse)(result.data)?.memberIds,
      metadata: (0, import_rename_all_nested_keys.renameKeysFromRESTResponseToSDKResponse)(result.data)?.pagingMetadata
    };
  } catch (err) {
    const transformedError = (0, import_transform_error.transformError)(
      err,
      {
        spreadPathsToArguments: {},
        explicitPathsToArguments: { paging: "$[0].paging" },
        singleArgumentUnchanged: false
      },
      ["options"]
    );
    sideEffects?.onError?.(err);
    throw transformedError;
  }
}
async function listMemberFollowing2(memberId, options) {
  const { httpClient, sideEffects } = arguments[2];
  const payload = (0, import_rename_all_nested_keys.renameKeysFromSDKRequestToRESTRequest)({
    memberId,
    paging: options?.paging
  });
  const reqOpts = listMemberFollowing(payload);
  sideEffects?.onSiteCall?.();
  try {
    const result = await httpClient.request(reqOpts);
    sideEffects?.onSuccess?.(result);
    return {
      memberIds: (0, import_rename_all_nested_keys.renameKeysFromRESTResponseToSDKResponse)(result.data)?.memberIds,
      metadata: (0, import_rename_all_nested_keys.renameKeysFromRESTResponseToSDKResponse)(result.data)?.pagingMetadata
    };
  } catch (err) {
    const transformedError = (0, import_transform_error.transformError)(
      err,
      {
        spreadPathsToArguments: {},
        explicitPathsToArguments: { memberId: "$[0]", paging: "$[1].paging" },
        singleArgumentUnchanged: false
      },
      ["memberId", "options"]
    );
    sideEffects?.onError?.(err);
    throw transformedError;
  }
}
async function listCurrentMemberFollowers(options) {
  const { httpClient, sideEffects } = arguments[1];
  const payload = (0, import_rename_all_nested_keys.renameKeysFromSDKRequestToRESTRequest)({
    paging: options?.paging
  });
  const reqOpts = listMyMemberFollowers(payload);
  sideEffects?.onSiteCall?.();
  try {
    const result = await httpClient.request(reqOpts);
    sideEffects?.onSuccess?.(result);
    return {
      memberIds: (0, import_rename_all_nested_keys.renameKeysFromRESTResponseToSDKResponse)(result.data)?.memberIds,
      metadata: (0, import_rename_all_nested_keys.renameKeysFromRESTResponseToSDKResponse)(result.data)?.pagingMetadata
    };
  } catch (err) {
    const transformedError = (0, import_transform_error.transformError)(
      err,
      {
        spreadPathsToArguments: {},
        explicitPathsToArguments: { paging: "$[0].paging" },
        singleArgumentUnchanged: false
      },
      ["options"]
    );
    sideEffects?.onError?.(err);
    throw transformedError;
  }
}
async function listMemberFollowers2(memberId, options) {
  const { httpClient, sideEffects } = arguments[2];
  const payload = (0, import_rename_all_nested_keys.renameKeysFromSDKRequestToRESTRequest)({
    memberId,
    paging: options?.paging
  });
  const reqOpts = listMemberFollowers(payload);
  sideEffects?.onSiteCall?.();
  try {
    const result = await httpClient.request(reqOpts);
    sideEffects?.onSuccess?.(result);
    return {
      memberIds: (0, import_rename_all_nested_keys.renameKeysFromRESTResponseToSDKResponse)(result.data)?.memberIds,
      metadata: (0, import_rename_all_nested_keys.renameKeysFromRESTResponseToSDKResponse)(result.data)?.pagingMetadata
    };
  } catch (err) {
    const transformedError = (0, import_transform_error.transformError)(
      err,
      {
        spreadPathsToArguments: {},
        explicitPathsToArguments: { memberId: "$[0]", paging: "$[1].paging" },
        singleArgumentUnchanged: false
      },
      ["memberId", "options"]
    );
    sideEffects?.onError?.(err);
    throw transformedError;
  }
}
async function queryCurrentMemberConnections(connectedMemberIds) {
  const { httpClient, sideEffects } = arguments[1];
  const payload = (0, import_rename_all_nested_keys.renameKeysFromSDKRequestToRESTRequest)({
    connectedMemberIds
  });
  const reqOpts = queryMyMemberConnections(payload);
  sideEffects?.onSiteCall?.();
  try {
    const result = await httpClient.request(reqOpts);
    sideEffects?.onSuccess?.(result);
    return (0, import_rename_all_nested_keys.renameKeysFromRESTResponseToSDKResponse)(result.data);
  } catch (err) {
    const transformedError = (0, import_transform_error.transformError)(
      err,
      {
        spreadPathsToArguments: {},
        explicitPathsToArguments: { connectedMemberIds: "$[0]" },
        singleArgumentUnchanged: false
      },
      ["connectedMemberIds"]
    );
    sideEffects?.onError?.(err);
    throw transformedError;
  }
}
async function queryMemberConnections2(memberId, connectedMemberIds) {
  const { httpClient, sideEffects } = arguments[2];
  const payload = (0, import_rename_all_nested_keys.renameKeysFromSDKRequestToRESTRequest)({
    memberId,
    connectedMemberIds
  });
  const reqOpts = queryMemberConnections(payload);
  sideEffects?.onSiteCall?.();
  try {
    const result = await httpClient.request(reqOpts);
    sideEffects?.onSuccess?.(result);
    return (0, import_rename_all_nested_keys.renameKeysFromRESTResponseToSDKResponse)(result.data);
  } catch (err) {
    const transformedError = (0, import_transform_error.transformError)(
      err,
      {
        spreadPathsToArguments: {},
        explicitPathsToArguments: {
          memberId: "$[0]",
          connectedMemberIds: "$[1]"
        },
        singleArgumentUnchanged: false
      },
      ["memberId", "connectedMemberIds"]
    );
    sideEffects?.onError?.(err);
    throw transformedError;
  }
}

// src/members-v3-follow-member-followers.public.ts
function followMember3(httpClient) {
  return (memberId) => followMember2(
    memberId,
    // @ts-ignore
    { httpClient }
  );
}
function unfollowMember3(httpClient) {
  return (memberId) => unfollowMember2(
    memberId,
    // @ts-ignore
    { httpClient }
  );
}
function listCurrentMemberFollowing2(httpClient) {
  return (options) => listCurrentMemberFollowing(
    options,
    // @ts-ignore
    { httpClient }
  );
}
function listMemberFollowing3(httpClient) {
  return (memberId, options) => listMemberFollowing2(
    memberId,
    options,
    // @ts-ignore
    { httpClient }
  );
}
function listCurrentMemberFollowers2(httpClient) {
  return (options) => listCurrentMemberFollowers(
    options,
    // @ts-ignore
    { httpClient }
  );
}
function listMemberFollowers3(httpClient) {
  return (memberId, options) => listMemberFollowers2(
    memberId,
    options,
    // @ts-ignore
    { httpClient }
  );
}
function queryCurrentMemberConnections2(httpClient) {
  return (connectedMemberIds) => queryCurrentMemberConnections(
    connectedMemberIds,
    // @ts-ignore
    { httpClient }
  );
}
function queryMemberConnections3(httpClient) {
  return (memberId, connectedMemberIds) => queryMemberConnections2(
    memberId,
    connectedMemberIds,
    // @ts-ignore
    { httpClient }
  );
}
var onFollowMemberFollowed = (0, import_sdk_types.EventDefinition)(
  "wix.members.v3.follow_member_followed",
  true,
  (event) => (0, import_rename_all_nested_keys2.renameKeysFromRESTResponseToSDKResponse)(
    (0, import_transform_paths.transformPaths)(event, [
      {
        transformFn: import_timestamp.transformRESTTimestampToSDKTimestamp,
        paths: [{ path: "metadata.eventTime" }]
      }
    ])
  )
)();
var onFollowMemberUnfollowed = (0, import_sdk_types.EventDefinition)(
  "wix.members.v3.follow_member_unfollowed",
  true,
  (event) => (0, import_rename_all_nested_keys2.renameKeysFromRESTResponseToSDKResponse)(
    (0, import_transform_paths.transformPaths)(event, [
      {
        transformFn: import_timestamp.transformRESTTimestampToSDKTimestamp,
        paths: [{ path: "metadata.eventTime" }]
      }
    ])
  )
)();

// src/members-v3-follow-member-followers.context.ts
var import_rest_modules3 = require("@wix/sdk-runtime/rest-modules");
var import_event_definition_modules = require("@wix/sdk-runtime/event-definition-modules");
var followMember4 = /* @__PURE__ */ (0, import_rest_modules3.createRESTModule)(followMember3);
var unfollowMember4 = /* @__PURE__ */ (0, import_rest_modules3.createRESTModule)(unfollowMember3);
var listCurrentMemberFollowing3 = /* @__PURE__ */ (0, import_rest_modules3.createRESTModule)(listCurrentMemberFollowing2);
var listMemberFollowing4 = /* @__PURE__ */ (0, import_rest_modules3.createRESTModule)(listMemberFollowing3);
var listCurrentMemberFollowers3 = /* @__PURE__ */ (0, import_rest_modules3.createRESTModule)(listCurrentMemberFollowers2);
var listMemberFollowers4 = /* @__PURE__ */ (0, import_rest_modules3.createRESTModule)(listMemberFollowers3);
var queryCurrentMemberConnections3 = /* @__PURE__ */ (0, import_rest_modules3.createRESTModule)(queryCurrentMemberConnections2);
var queryMemberConnections4 = /* @__PURE__ */ (0, import_rest_modules3.createRESTModule)(queryMemberConnections3);
var onFollowMemberFollowed2 = (0, import_event_definition_modules.createEventModule)(onFollowMemberFollowed);
var onFollowMemberUnfollowed2 = (0, import_event_definition_modules.createEventModule)(onFollowMemberUnfollowed);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  WebhookIdentityType,
  followMember,
  listCurrentMemberFollowers,
  listCurrentMemberFollowing,
  listMemberFollowers,
  listMemberFollowing,
  onFollowMemberFollowed,
  onFollowMemberUnfollowed,
  queryCurrentMemberConnections,
  queryMemberConnections,
  unfollowMember
});
//# sourceMappingURL=index.js.map