{"version":3,"sources":["../index.ts","../src/members-v3-follow-member-followers.public.ts","../src/members-v3-follow-member-followers.universal.ts","../src/members-v3-follow-member-followers.http.ts","../src/members-v3-follow-member-followers.context.ts"],"sourcesContent":["export * from './src/members-v3-follow-member-followers.context.js';\n","import { renameKeysFromRESTResponseToSDKResponse } from '@wix/sdk-runtime/rename-all-nested-keys';\nimport { transformRESTTimestampToSDKTimestamp } from '@wix/sdk-runtime/transformations/timestamp';\nimport { transformPaths } from '@wix/sdk-runtime/transformations/transform-paths';\nimport { EventDefinition, HttpClient } from '@wix/sdk-types';\nimport {\n  FollowMemberFollowedEnvelope,\n  FollowMemberUnfollowedEnvelope,\n  ListCurrentMemberFollowersOptions,\n  ListCurrentMemberFollowersResult,\n  ListCurrentMemberFollowingOptions,\n  ListCurrentMemberFollowingResult,\n  ListMemberFollowersOptions,\n  ListMemberFollowersResult,\n  ListMemberFollowingOptions,\n  ListMemberFollowingResult,\n  QueryMemberConnectionsResponse,\n  QueryMyMemberConnectionsResponse,\n  followMember as universalFollowMember,\n  listCurrentMemberFollowers as universalListCurrentMemberFollowers,\n  listCurrentMemberFollowing as universalListCurrentMemberFollowing,\n  listMemberFollowers as universalListMemberFollowers,\n  listMemberFollowing as universalListMemberFollowing,\n  queryCurrentMemberConnections as universalQueryCurrentMemberConnections,\n  queryMemberConnections as universalQueryMemberConnections,\n  unfollowMember as universalUnfollowMember,\n} from './members-v3-follow-member-followers.universal.js';\n\nexport const __metadata = { PACKAGE_NAME: '@wix/members' };\n\nexport function followMember(httpClient: HttpClient): FollowMemberSignature {\n  return (memberId: string) =>\n    universalFollowMember(\n      memberId,\n      // @ts-ignore\n      { httpClient }\n    );\n}\n\ninterface FollowMemberSignature {\n  /**\n   * Sets the current member to follow another, specified member.\n   * @param - ID of the member to follow.\n   */\n  (memberId: string): Promise<void>;\n}\n\nexport function unfollowMember(\n  httpClient: HttpClient\n): UnfollowMemberSignature {\n  return (memberId: string) =>\n    universalUnfollowMember(\n      memberId,\n      // @ts-ignore\n      { httpClient }\n    );\n}\n\ninterface UnfollowMemberSignature {\n  /**\n   * Sets the current member to unfollow another, specified member.\n   * @param - ID of the member to unfollow.\n   */\n  (memberId: string): Promise<void>;\n}\n\nexport function listCurrentMemberFollowing(\n  httpClient: HttpClient\n): ListCurrentMemberFollowingSignature {\n  return (options?: ListCurrentMemberFollowingOptions) =>\n    universalListCurrentMemberFollowing(\n      options,\n      // @ts-ignore\n      { httpClient }\n    );\n}\n\ninterface ListCurrentMemberFollowingSignature {\n  /**\n   * Retrieves a list of members who are followed by the current member.\n   */\n  (\n    options?: ListCurrentMemberFollowingOptions | undefined\n  ): Promise<ListCurrentMemberFollowingResult>;\n}\n\nexport function listMemberFollowing(\n  httpClient: HttpClient\n): ListMemberFollowingSignature {\n  return (memberId: string, options?: ListMemberFollowingOptions) =>\n    universalListMemberFollowing(\n      memberId,\n      options,\n      // @ts-ignore\n      { httpClient }\n    );\n}\n\ninterface ListMemberFollowingSignature {\n  /**\n   * Retrieves a list of members who are followed by the given member.\n   * @param - ID of the member whose followers to list.\n   */\n  (\n    memberId: string,\n    options?: ListMemberFollowingOptions | undefined\n  ): Promise<ListMemberFollowingResult>;\n}\n\nexport function listCurrentMemberFollowers(\n  httpClient: HttpClient\n): ListCurrentMemberFollowersSignature {\n  return (options?: ListCurrentMemberFollowersOptions) =>\n    universalListCurrentMemberFollowers(\n      options,\n      // @ts-ignore\n      { httpClient }\n    );\n}\n\ninterface ListCurrentMemberFollowersSignature {\n  /**\n   * Retrieves a list of members who are following the current member.\n   */\n  (\n    options?: ListCurrentMemberFollowersOptions | undefined\n  ): Promise<ListCurrentMemberFollowersResult>;\n}\n\nexport function listMemberFollowers(\n  httpClient: HttpClient\n): ListMemberFollowersSignature {\n  return (memberId: string, options?: ListMemberFollowersOptions) =>\n    universalListMemberFollowers(\n      memberId,\n      options,\n      // @ts-ignore\n      { httpClient }\n    );\n}\n\ninterface ListMemberFollowersSignature {\n  /**\n   * Retrieves a list of members who are following the given member.\n   * @param - ID of the member whose followed members to list.\n   */\n  (\n    memberId: string,\n    options?: ListMemberFollowersOptions | undefined\n  ): Promise<ListMemberFollowersResult>;\n}\n\nexport function queryCurrentMemberConnections(\n  httpClient: HttpClient\n): QueryCurrentMemberConnectionsSignature {\n  return (connectedMemberIds: string[]) =>\n    universalQueryCurrentMemberConnections(\n      connectedMemberIds,\n      // @ts-ignore\n      { httpClient }\n    );\n}\n\ninterface QueryCurrentMemberConnectionsSignature {\n  /**\n   * Retrieves a list of members and their connections to the current member.\n   * @param - List of member IDs whose connections to the current member will be retrieved.\n   */\n  (connectedMemberIds: string[]): Promise<QueryMyMemberConnectionsResponse>;\n}\n\nexport function queryMemberConnections(\n  httpClient: HttpClient\n): QueryMemberConnectionsSignature {\n  return (memberId: string, connectedMemberIds: string[]) =>\n    universalQueryMemberConnections(\n      memberId,\n      connectedMemberIds,\n      // @ts-ignore\n      { httpClient }\n    );\n}\n\ninterface QueryMemberConnectionsSignature {\n  /**\n   * Retrieves a list of members and their connections to the given member.\n   * > **Note:** If an empty array is passed as `connectedMemberIds`, the call will succeed, but it will not return any data.\n   * @param - Member ID.\n   * @param - List of member IDs whose connections to the given member will be retrieved.\n   */\n  (\n    memberId: string,\n    connectedMemberIds: string[]\n  ): Promise<QueryMemberConnectionsResponse>;\n}\n\nexport const onFollowMemberFollowed = EventDefinition(\n  'wix.members.v3.follow_member_followed',\n  true,\n  (event: FollowMemberFollowedEnvelope) =>\n    renameKeysFromRESTResponseToSDKResponse(\n      transformPaths(event, [\n        {\n          transformFn: transformRESTTimestampToSDKTimestamp,\n          paths: [{ path: 'metadata.eventTime' }],\n        },\n      ])\n    )\n)<FollowMemberFollowedEnvelope>();\nexport const onFollowMemberUnfollowed = EventDefinition(\n  'wix.members.v3.follow_member_unfollowed',\n  true,\n  (event: FollowMemberUnfollowedEnvelope) =>\n    renameKeysFromRESTResponseToSDKResponse(\n      transformPaths(event, [\n        {\n          transformFn: transformRESTTimestampToSDKTimestamp,\n          paths: [{ path: 'metadata.eventTime' }],\n        },\n      ])\n    )\n)<FollowMemberUnfollowedEnvelope>();\n\nexport {\n  ActionEvent,\n  App,\n  BaseEventMetadata,\n  ConnectedMembers,\n  CursorPaging,\n  Cursors,\n  DomainEvent,\n  DomainEventBodyOneOf,\n  Empty,\n  EntityCreatedEvent,\n  EntityDeletedEvent,\n  EntityUpdatedEvent,\n  EventMetadata,\n  File,\n  FollowMemberFollowedEnvelope,\n  FollowMemberRequest,\n  FollowMemberResponse,\n  FollowMemberUnfollowedEnvelope,\n  Follower,\n  IdentificationData,\n  IdentificationDataIdOneOf,\n  InvalidateCache,\n  InvalidateCacheGetByOneOf,\n  ListCurrentMemberFollowersOptions,\n  ListCurrentMemberFollowersResult,\n  ListCurrentMemberFollowingOptions,\n  ListCurrentMemberFollowingResult,\n  ListMemberFollowersOptions,\n  ListMemberFollowersRequest,\n  ListMemberFollowersResponse,\n  ListMemberFollowersResult,\n  ListMemberFollowingOptions,\n  ListMemberFollowingRequest,\n  ListMemberFollowingResponse,\n  ListMemberFollowingResult,\n  ListMyMemberFollowersRequest,\n  ListMyMemberFollowersResponse,\n  ListMyMemberFollowingRequest,\n  ListMyMemberFollowingResponse,\n  MemberFollowed,\n  MemberUnfollowed,\n  MessageEnvelope,\n  Page,\n  PagingMetadataV2,\n  QueryMemberConnectionsRequest,\n  QueryMemberConnectionsResponse,\n  QueryMyMemberConnectionsRequest,\n  QueryMyMemberConnectionsResponse,\n  RestoreInfo,\n  URI,\n  UnfollowMemberRequest,\n  UnfollowMemberResponse,\n  WebhookIdentityType,\n} from './members-v3-follow-member-followers.universal.js';\n","import { transformError as sdkTransformError } from '@wix/sdk-runtime/transform-error';\nimport {\n  renameKeysFromSDKRequestToRESTRequest,\n  renameKeysFromRESTResponseToSDKResponse,\n} from '@wix/sdk-runtime/rename-all-nested-keys';\nimport { HttpClient, NonNullablePaths } from '@wix/sdk-types';\nimport * as ambassadorWixMembersV3Follow from './members-v3-follow-member-followers.http.js';\n\nexport interface Follower {\n  /**\n   * Member ID of the member who performed the action.\n   * @format GUID\n   */\n  memberId?: string;\n  /**\n   * Member ID of the member being followed or unfollowed.\n   * @format GUID\n   */\n  affectedMemberId?: string;\n}\n\nexport interface InvalidateCache extends InvalidateCacheGetByOneOf {\n  /**\n   * Invalidate by msId. NOT recommended, as this will invalidate the entire site cache!\n   * @format GUID\n   */\n  metaSiteId?: string;\n  /**\n   * Invalidate by Site ID. NOT recommended, as this will invalidate the entire site cache!\n   * @format GUID\n   */\n  siteId?: string;\n  /** Invalidate by App */\n  app?: App;\n  /** Invalidate by page id */\n  page?: Page;\n  /** Invalidate by URI path */\n  uri?: URI;\n  /** Invalidate by file (for media files such as PDFs) */\n  file?: File;\n  /**\n   * tell us why you're invalidating the cache. You don't need to add your app name\n   * @maxLength 256\n   */\n  reason?: string | null;\n  /** Is local DS */\n  localDc?: boolean;\n  hardPurge?: boolean;\n}\n\n/** @oneof */\nexport interface InvalidateCacheGetByOneOf {\n  /**\n   * Invalidate by msId. NOT recommended, as this will invalidate the entire site cache!\n   * @format GUID\n   */\n  metaSiteId?: string;\n  /**\n   * Invalidate by Site ID. NOT recommended, as this will invalidate the entire site cache!\n   * @format GUID\n   */\n  siteId?: string;\n  /** Invalidate by App */\n  app?: App;\n  /** Invalidate by page id */\n  page?: Page;\n  /** Invalidate by URI path */\n  uri?: URI;\n  /** Invalidate by file (for media files such as PDFs) */\n  file?: File;\n}\n\nexport interface App {\n  /**\n   * The AppDefId\n   * @minLength 1\n   */\n  appDefId?: string;\n  /**\n   * The instance Id\n   * @format GUID\n   */\n  instanceId?: string;\n}\n\nexport interface Page {\n  /**\n   * the msid the page is on\n   * @format GUID\n   */\n  metaSiteId?: string;\n  /**\n   * Invalidate by Page ID\n   * @minLength 1\n   */\n  pageId?: string;\n}\n\nexport interface URI {\n  /**\n   * the msid the URI is on\n   * @format GUID\n   */\n  metaSiteId?: string;\n  /**\n   * URI path to invalidate (e.g. page/my/path) - without leading/trailing slashes\n   * @minLength 1\n   */\n  uriPath?: string;\n}\n\nexport interface File {\n  /**\n   * the msid the file is related to\n   * @format GUID\n   */\n  metaSiteId?: string;\n  /**\n   * Invalidate by filename (for media files such as PDFs)\n   * @minLength 1\n   * @maxLength 256\n   */\n  fileName?: string;\n}\n\nexport interface FollowMemberRequest {\n  /**\n   * ID of the member to follow.\n   * @format GUID\n   */\n  memberId: string;\n}\n\nexport interface FollowMemberResponse {}\n\nexport interface MemberFollowed {\n  /** Member who is following the other member. */\n  memberConnection?: Follower;\n}\n\nexport interface UnfollowMemberRequest {\n  /**\n   * ID of the member to unfollow.\n   * @format GUID\n   */\n  memberId: string;\n}\n\nexport interface UnfollowMemberResponse {}\n\nexport interface MemberUnfollowed {\n  /** Member who is unfollowing the other member. */\n  memberConnection?: Follower;\n}\n\nexport interface ListMyMemberFollowingRequest {\n  /**\n   * Pagination options. For more information, see\n   * [Sorting and Paging](https://dev.wix.com/docs/rest/articles/getting-started/sorting-and-paging).\n   */\n  paging?: CursorPaging;\n}\n\nexport interface CursorPaging {\n  /**\n   * Number of items to return. See [Sorting and Paging](https://dev.wix.com/docs/rest/articles/getting-started/sorting-and-paging).\n   * @min 1\n   * @max 100\n   */\n  limit?: number | null;\n  /** Cursor returned from last query response. */\n  cursor?: string | null;\n}\n\nexport interface ListMyMemberFollowingResponse {\n  /**\n   * Retrieved list of members followed by the current member.\n   * @format GUID\n   */\n  memberIds?: string[];\n  /** Details on the paged set of results returned. */\n  pagingMetadata?: PagingMetadataV2;\n}\n\nexport interface PagingMetadataV2 {\n  /** Number of items starting from given cursor. */\n  count?: number | null;\n  /** Cursors to navigate through the result pages using `next` and `prev`. */\n  cursors?: Cursors;\n}\n\nexport interface Cursors {\n  /**\n   * Cursor string pointing to the next page in the list of results.\n   * @maxLength 16000\n   */\n  next?: string | null;\n  /**\n   * Cursor pointing to the previous page in the list of results.\n   * @maxLength 16000\n   */\n  prev?: string | null;\n}\n\nexport interface ListMemberFollowingRequest {\n  /**\n   * ID of the member whose followers to list.\n   * @format GUID\n   */\n  memberId: string;\n  /**\n   * Pagination options. For more information, see\n   * [Sorting and Paging](https://dev.wix.com/docs/rest/articles/getting-started/sorting-and-paging).\n   */\n  paging?: CursorPaging;\n}\n\nexport interface ListMemberFollowingResponse {\n  /**\n   * Retrieved list of members who are followed by the given member.\n   * @format GUID\n   */\n  memberIds?: string[];\n  /** Details on the paged set of results returned. */\n  pagingMetadata?: PagingMetadataV2;\n}\n\nexport interface ListMyMemberFollowersRequest {\n  /**\n   * Pagination options. For more information, see\n   * [Sorting and Paging](https://dev.wix.com/docs/rest/articles/getting-started/sorting-and-paging).\n   */\n  paging?: CursorPaging;\n}\n\nexport interface ListMyMemberFollowersResponse {\n  /**\n   * Retrieved list of members who are following the current member.\n   * @format GUID\n   */\n  memberIds?: string[];\n  /** Details on the paged set of results returned. */\n  pagingMetadata?: PagingMetadataV2;\n}\n\nexport interface ListMemberFollowersRequest {\n  /**\n   * ID of the member whose followed members to list.\n   * @format GUID\n   */\n  memberId: string;\n  /**\n   * Pagination options. For more information, see\n   * [Sorting and Paging](https://dev.wix.com/docs/rest/articles/getting-started/sorting-and-paging).\n   */\n  paging?: CursorPaging;\n}\n\nexport interface ListMemberFollowersResponse {\n  /**\n   * Retrieved list of members who are following the given member.\n   * @format GUID\n   */\n  memberIds?: string[];\n  /** Details on the paged set of results returned. */\n  pagingMetadata?: PagingMetadataV2;\n}\n\nexport interface QueryMyMemberConnectionsRequest {\n  /**\n   * List of member IDs whose connections to the current member will be retrieved.\n   * @format GUID\n   * @maxSize 100\n   */\n  connectedMemberIds: string[];\n}\n\nexport interface QueryMyMemberConnectionsResponse {\n  /** Retrieved list of members whose connections to the current member were retrieved. */\n  connectedMembers?: ConnectedMembers[];\n}\n\nexport interface ConnectedMembers {\n  /**\n   * Site member ID.\n   * @format GUID\n   */\n  connectedMemberId?: string;\n  /** Whether the listed member is followed by the given member. */\n  followedByMember?: boolean;\n  /** Whether the listed member follows the given member. */\n  followingMember?: boolean;\n}\n\nexport interface QueryMemberConnectionsRequest {\n  /**\n   * List of member IDs whose connections to the given member will be retrieved.\n   * @format GUID\n   * @maxSize 100\n   */\n  connectedMemberIds: string[];\n  /**\n   * Member ID.\n   * @format GUID\n   */\n  memberId: string;\n}\n\nexport interface QueryMemberConnectionsResponse {\n  /** Retrieved list of members whose connections to the given member were retrieved. */\n  connectedMembers?: ConnectedMembers[];\n}\n\nexport interface DomainEvent extends DomainEventBodyOneOf {\n  createdEvent?: EntityCreatedEvent;\n  updatedEvent?: EntityUpdatedEvent;\n  deletedEvent?: EntityDeletedEvent;\n  actionEvent?: ActionEvent;\n  /**\n   * Unique event ID.\n   * Allows clients to ignore duplicate webhooks.\n   */\n  _id?: string;\n  /**\n   * Assumes actions are also always typed to an entity_type\n   * Example: wix.stores.catalog.product, wix.bookings.session, wix.payments.transaction\n   */\n  entityFqdn?: string;\n  /**\n   * This is top level to ease client code dispatching of messages (switch on entity_fqdn+slug)\n   * This is although the created/updated/deleted notion is duplication of the oneof types\n   * Example: created/updated/deleted/started/completed/email_opened\n   */\n  slug?: string;\n  /** ID of the entity associated with the event. */\n  entityId?: string;\n  /** Event timestamp in [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601) format and UTC time. For example: 2020-04-26T13:57:50.699Z */\n  eventTime?: Date | null;\n  /**\n   * Whether the event was triggered as a result of a privacy regulation application\n   * (for example, GDPR).\n   */\n  triggeredByAnonymizeRequest?: boolean | null;\n  /** If present, indicates the action that triggered the event. */\n  originatedFrom?: string | null;\n  /**\n   * A sequence number defining the order of updates to the underlying entity.\n   * For example, given that some entity was updated at 16:00 and than again at 16:01,\n   * it is guaranteed that the sequence number of the second update is strictly higher than the first.\n   * As the consumer, you can use this value to ensure that you handle messages in the correct order.\n   * To do so, you will need to persist this number on your end, and compare the sequence number from the\n   * message against the one you have stored. Given that the stored number is higher, you should ignore the message.\n   */\n  entityEventSequence?: string | null;\n}\n\n/** @oneof */\nexport interface DomainEventBodyOneOf {\n  createdEvent?: EntityCreatedEvent;\n  updatedEvent?: EntityUpdatedEvent;\n  deletedEvent?: EntityDeletedEvent;\n  actionEvent?: ActionEvent;\n}\n\nexport interface EntityCreatedEvent {\n  entity?: string;\n}\n\nexport interface RestoreInfo {\n  deletedDate?: Date | null;\n}\n\nexport interface EntityUpdatedEvent {\n  /**\n   * Since platformized APIs only expose PATCH and not PUT we can't assume that the fields sent from the client are the actual diff.\n   * This means that to generate a list of changed fields (as opposed to sent fields) one needs to traverse both objects.\n   * We don't want to impose this on all developers and so we leave this traversal to the notification recipients which need it.\n   */\n  currentEntity?: string;\n}\n\nexport interface EntityDeletedEvent {\n  /** Entity that was deleted */\n  deletedEntity?: string | null;\n}\n\nexport interface ActionEvent {\n  body?: string;\n}\n\nexport interface Empty {}\n\nexport interface MessageEnvelope {\n  /**\n   * App instance ID.\n   * @format GUID\n   */\n  instanceId?: string | null;\n  /**\n   * Event type.\n   * @maxLength 150\n   */\n  eventType?: string;\n  /** The identification type and identity data. */\n  identity?: IdentificationData;\n  /** Stringify payload. */\n  data?: string;\n}\n\nexport interface IdentificationData extends IdentificationDataIdOneOf {\n  /**\n   * ID of a site visitor that has not logged in to the site.\n   * @format GUID\n   */\n  anonymousVisitorId?: string;\n  /**\n   * ID of a site visitor that has logged in to the site.\n   * @format GUID\n   */\n  memberId?: string;\n  /**\n   * ID of a Wix user (site owner, contributor, etc.).\n   * @format GUID\n   */\n  wixUserId?: string;\n  /**\n   * ID of an app.\n   * @format GUID\n   */\n  appId?: string;\n  /** @readonly */\n  identityType?: WebhookIdentityType;\n}\n\n/** @oneof */\nexport interface IdentificationDataIdOneOf {\n  /**\n   * ID of a site visitor that has not logged in to the site.\n   * @format GUID\n   */\n  anonymousVisitorId?: string;\n  /**\n   * ID of a site visitor that has logged in to the site.\n   * @format GUID\n   */\n  memberId?: string;\n  /**\n   * ID of a Wix user (site owner, contributor, etc.).\n   * @format GUID\n   */\n  wixUserId?: string;\n  /**\n   * ID of an app.\n   * @format GUID\n   */\n  appId?: string;\n}\n\nexport enum WebhookIdentityType {\n  UNKNOWN = 'UNKNOWN',\n  ANONYMOUS_VISITOR = 'ANONYMOUS_VISITOR',\n  MEMBER = 'MEMBER',\n  WIX_USER = 'WIX_USER',\n  APP = 'APP',\n}\n\nexport interface BaseEventMetadata {\n  /**\n   * App instance ID.\n   * @format GUID\n   */\n  instanceId?: string | null;\n  /**\n   * Event type.\n   * @maxLength 150\n   */\n  eventType?: string;\n  /** The identification type and identity data. */\n  identity?: IdentificationData;\n}\n\nexport interface EventMetadata extends BaseEventMetadata {\n  /**\n   * Unique event ID.\n   * Allows clients to ignore duplicate webhooks.\n   */\n  _id?: string;\n  /**\n   * Assumes actions are also always typed to an entity_type\n   * Example: wix.stores.catalog.product, wix.bookings.session, wix.payments.transaction\n   */\n  entityFqdn?: string;\n  /**\n   * This is top level to ease client code dispatching of messages (switch on entity_fqdn+slug)\n   * This is although the created/updated/deleted notion is duplication of the oneof types\n   * Example: created/updated/deleted/started/completed/email_opened\n   */\n  slug?: string;\n  /** ID of the entity associated with the event. */\n  entityId?: string;\n  /** Event timestamp in [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601) format and UTC time. For example: 2020-04-26T13:57:50.699Z */\n  eventTime?: Date | null;\n  /**\n   * Whether the event was triggered as a result of a privacy regulation application\n   * (for example, GDPR).\n   */\n  triggeredByAnonymizeRequest?: boolean | null;\n  /** If present, indicates the action that triggered the event. */\n  originatedFrom?: string | null;\n  /**\n   * A sequence number defining the order of updates to the underlying entity.\n   * For example, given that some entity was updated at 16:00 and than again at 16:01,\n   * it is guaranteed that the sequence number of the second update is strictly higher than the first.\n   * As the consumer, you can use this value to ensure that you handle messages in the correct order.\n   * To do so, you will need to persist this number on your end, and compare the sequence number from the\n   * message against the one you have stored. Given that the stored number is higher, you should ignore the message.\n   */\n  entityEventSequence?: string | null;\n}\n\nexport interface FollowMemberFollowedEnvelope {\n  data: MemberFollowed;\n  metadata: EventMetadata;\n}\n\n/**\n * Triggered when a member follows another member.\n * @permissionScope Manage Members\n * @permissionScopeId SCOPE.DC-MEMBERS.MANAGE-MEMBERS\n * @permissionScope Read Member Connections\n * @permissionScopeId SCOPE.DC-MEMBERS.READ-FOLLOWERS\n * @permissionId MEMBERS.FOLLOW_READ\n * @webhook\n * @eventType wix.members.v3.follow_member_followed\n * @serviceIdentifier com.wixpress.members.follow.v3.MemberFollowers\n * @slug member_followed\n */\nexport declare function onFollowMemberFollowed(\n  handler: (event: FollowMemberFollowedEnvelope) => void | Promise<void>\n): void;\n\nexport interface FollowMemberUnfollowedEnvelope {\n  data: MemberUnfollowed;\n  metadata: EventMetadata;\n}\n\n/**\n * Triggered when a member unfollows another member.\n * @permissionScope Manage Members\n * @permissionScopeId SCOPE.DC-MEMBERS.MANAGE-MEMBERS\n * @permissionScope Read Member Connections\n * @permissionScopeId SCOPE.DC-MEMBERS.READ-FOLLOWERS\n * @permissionId MEMBERS.FOLLOW_READ\n * @webhook\n * @eventType wix.members.v3.follow_member_unfollowed\n * @serviceIdentifier com.wixpress.members.follow.v3.MemberFollowers\n * @slug member_unfollowed\n */\nexport declare function onFollowMemberUnfollowed(\n  handler: (event: FollowMemberUnfollowedEnvelope) => void | Promise<void>\n): void;\n\n/**\n * Sets the current member to follow another, specified member.\n * @param memberId - ID of the member to follow.\n * @public\n * @requiredField memberId\n * @permissionId MEMBERS.MEMBER_FOLLOW\n * @applicableIdentity MEMBER\n * @fqn com.wixpress.members.follow.v3.MemberFollowers.FollowMember\n */\nexport async function followMember(memberId: string): Promise<void> {\n  // @ts-ignore\n  const { httpClient, sideEffects } = arguments[1] as {\n    httpClient: HttpClient;\n    sideEffects?: any;\n  };\n\n  const payload = renameKeysFromSDKRequestToRESTRequest({ memberId: memberId });\n\n  const reqOpts = ambassadorWixMembersV3Follow.followMember(payload);\n\n  sideEffects?.onSiteCall?.();\n  try {\n    const result = await httpClient.request(reqOpts);\n    sideEffects?.onSuccess?.(result);\n  } catch (err: any) {\n    const transformedError = sdkTransformError(\n      err,\n      {\n        spreadPathsToArguments: {},\n        explicitPathsToArguments: { memberId: '$[0]' },\n        singleArgumentUnchanged: false,\n      },\n      ['memberId']\n    );\n    sideEffects?.onError?.(err);\n\n    throw transformedError;\n  }\n}\n\n/**\n * Sets the current member to unfollow another, specified member.\n * @param memberId - ID of the member to unfollow.\n * @public\n * @requiredField memberId\n * @permissionId MEMBERS.MEMBER_FOLLOW\n * @applicableIdentity MEMBER\n * @fqn com.wixpress.members.follow.v3.MemberFollowers.UnfollowMember\n */\nexport async function unfollowMember(memberId: string): Promise<void> {\n  // @ts-ignore\n  const { httpClient, sideEffects } = arguments[1] as {\n    httpClient: HttpClient;\n    sideEffects?: any;\n  };\n\n  const payload = renameKeysFromSDKRequestToRESTRequest({ memberId: memberId });\n\n  const reqOpts = ambassadorWixMembersV3Follow.unfollowMember(payload);\n\n  sideEffects?.onSiteCall?.();\n  try {\n    const result = await httpClient.request(reqOpts);\n    sideEffects?.onSuccess?.(result);\n  } catch (err: any) {\n    const transformedError = sdkTransformError(\n      err,\n      {\n        spreadPathsToArguments: {},\n        explicitPathsToArguments: { memberId: '$[0]' },\n        singleArgumentUnchanged: false,\n      },\n      ['memberId']\n    );\n    sideEffects?.onError?.(err);\n\n    throw transformedError;\n  }\n}\n\n/**\n * Retrieves a list of members who are followed by the current member.\n * @public\n * @permissionId MEMBERS.FOLLOW_READ_MY\n * @permissionScope Manage Members\n * @permissionScopeId SCOPE.DC-MEMBERS.MANAGE-MEMBERS\n * @applicableIdentity APP\n * @applicableIdentity VISITOR\n * @fqn com.wixpress.members.follow.v3.MemberFollowers.ListMyMemberFollowing\n */\nexport async function listCurrentMemberFollowing(\n  options?: ListCurrentMemberFollowingOptions\n): Promise<ListCurrentMemberFollowingResult> {\n  // @ts-ignore\n  const { httpClient, sideEffects } = arguments[1] as {\n    httpClient: HttpClient;\n    sideEffects?: any;\n  };\n\n  const payload = renameKeysFromSDKRequestToRESTRequest({\n    paging: options?.paging,\n  });\n\n  const reqOpts = ambassadorWixMembersV3Follow.listMyMemberFollowing(payload);\n\n  sideEffects?.onSiteCall?.();\n  try {\n    const result = await httpClient.request(reqOpts);\n    sideEffects?.onSuccess?.(result);\n\n    return {\n      memberIds: renameKeysFromRESTResponseToSDKResponse(result.data)\n        ?.memberIds,\n      metadata: renameKeysFromRESTResponseToSDKResponse(result.data)\n        ?.pagingMetadata,\n    }!;\n  } catch (err: any) {\n    const transformedError = sdkTransformError(\n      err,\n      {\n        spreadPathsToArguments: {},\n        explicitPathsToArguments: { paging: '$[0].paging' },\n        singleArgumentUnchanged: false,\n      },\n      ['options']\n    );\n    sideEffects?.onError?.(err);\n\n    throw transformedError;\n  }\n}\n\nexport interface ListCurrentMemberFollowingOptions {\n  /**\n   * Pagination options. For more information, see\n   * [Sorting and Paging](https://dev.wix.com/docs/rest/articles/getting-started/sorting-and-paging).\n   */\n  paging?: CursorPaging;\n}\n\nexport interface ListCurrentMemberFollowingResult {\n  memberIds: string[];\n  metadata: PagingMetadataV2;\n}\n\n/**\n * Retrieves a list of members who are followed by the given member.\n * @param memberId - ID of the member whose followers to list.\n * @public\n * @requiredField memberId\n * @permissionId MEMBERS.FOLLOW_READ\n * @permissionScope Manage Members\n * @permissionScopeId SCOPE.DC-MEMBERS.MANAGE-MEMBERS\n * @permissionScope Read Member Connections\n * @permissionScopeId SCOPE.DC-MEMBERS.READ-FOLLOWERS\n * @applicableIdentity APP\n * @applicableIdentity VISITOR\n * @fqn com.wixpress.members.follow.v3.MemberFollowers.ListMemberFollowing\n */\nexport async function listMemberFollowing(\n  memberId: string,\n  options?: ListMemberFollowingOptions\n): Promise<ListMemberFollowingResult> {\n  // @ts-ignore\n  const { httpClient, sideEffects } = arguments[2] as {\n    httpClient: HttpClient;\n    sideEffects?: any;\n  };\n\n  const payload = renameKeysFromSDKRequestToRESTRequest({\n    memberId: memberId,\n    paging: options?.paging,\n  });\n\n  const reqOpts = ambassadorWixMembersV3Follow.listMemberFollowing(payload);\n\n  sideEffects?.onSiteCall?.();\n  try {\n    const result = await httpClient.request(reqOpts);\n    sideEffects?.onSuccess?.(result);\n\n    return {\n      memberIds: renameKeysFromRESTResponseToSDKResponse(result.data)\n        ?.memberIds,\n      metadata: renameKeysFromRESTResponseToSDKResponse(result.data)\n        ?.pagingMetadata,\n    }!;\n  } catch (err: any) {\n    const transformedError = sdkTransformError(\n      err,\n      {\n        spreadPathsToArguments: {},\n        explicitPathsToArguments: { memberId: '$[0]', paging: '$[1].paging' },\n        singleArgumentUnchanged: false,\n      },\n      ['memberId', 'options']\n    );\n    sideEffects?.onError?.(err);\n\n    throw transformedError;\n  }\n}\n\nexport interface ListMemberFollowingOptions {\n  /**\n   * Pagination options. For more information, see\n   * [Sorting and Paging](https://dev.wix.com/docs/rest/articles/getting-started/sorting-and-paging).\n   */\n  paging?: CursorPaging;\n}\n\nexport interface ListMemberFollowingResult {\n  memberIds: string[];\n  metadata: PagingMetadataV2;\n}\n\n/**\n * Retrieves a list of members who are following the current member.\n * @public\n * @permissionId MEMBERS.FOLLOW_READ_MY\n * @permissionScope Manage Members\n * @permissionScopeId SCOPE.DC-MEMBERS.MANAGE-MEMBERS\n * @applicableIdentity APP\n * @applicableIdentity VISITOR\n * @fqn com.wixpress.members.follow.v3.MemberFollowers.ListMyMemberFollowers\n */\nexport async function listCurrentMemberFollowers(\n  options?: ListCurrentMemberFollowersOptions\n): Promise<ListCurrentMemberFollowersResult> {\n  // @ts-ignore\n  const { httpClient, sideEffects } = arguments[1] as {\n    httpClient: HttpClient;\n    sideEffects?: any;\n  };\n\n  const payload = renameKeysFromSDKRequestToRESTRequest({\n    paging: options?.paging,\n  });\n\n  const reqOpts = ambassadorWixMembersV3Follow.listMyMemberFollowers(payload);\n\n  sideEffects?.onSiteCall?.();\n  try {\n    const result = await httpClient.request(reqOpts);\n    sideEffects?.onSuccess?.(result);\n\n    return {\n      memberIds: renameKeysFromRESTResponseToSDKResponse(result.data)\n        ?.memberIds,\n      metadata: renameKeysFromRESTResponseToSDKResponse(result.data)\n        ?.pagingMetadata,\n    }!;\n  } catch (err: any) {\n    const transformedError = sdkTransformError(\n      err,\n      {\n        spreadPathsToArguments: {},\n        explicitPathsToArguments: { paging: '$[0].paging' },\n        singleArgumentUnchanged: false,\n      },\n      ['options']\n    );\n    sideEffects?.onError?.(err);\n\n    throw transformedError;\n  }\n}\n\nexport interface ListCurrentMemberFollowersOptions {\n  /**\n   * Pagination options. For more information, see\n   * [Sorting and Paging](https://dev.wix.com/docs/rest/articles/getting-started/sorting-and-paging).\n   */\n  paging?: CursorPaging;\n}\n\nexport interface ListCurrentMemberFollowersResult {\n  memberIds: string[];\n  metadata: PagingMetadataV2;\n}\n\n/**\n * Retrieves a list of members who are following the given member.\n * @param memberId - ID of the member whose followed members to list.\n * @public\n * @requiredField memberId\n * @permissionId MEMBERS.FOLLOW_READ\n * @permissionScope Manage Members\n * @permissionScopeId SCOPE.DC-MEMBERS.MANAGE-MEMBERS\n * @permissionScope Read Member Connections\n * @permissionScopeId SCOPE.DC-MEMBERS.READ-FOLLOWERS\n * @applicableIdentity APP\n * @applicableIdentity VISITOR\n * @fqn com.wixpress.members.follow.v3.MemberFollowers.ListMemberFollowers\n */\nexport async function listMemberFollowers(\n  memberId: string,\n  options?: ListMemberFollowersOptions\n): Promise<ListMemberFollowersResult> {\n  // @ts-ignore\n  const { httpClient, sideEffects } = arguments[2] as {\n    httpClient: HttpClient;\n    sideEffects?: any;\n  };\n\n  const payload = renameKeysFromSDKRequestToRESTRequest({\n    memberId: memberId,\n    paging: options?.paging,\n  });\n\n  const reqOpts = ambassadorWixMembersV3Follow.listMemberFollowers(payload);\n\n  sideEffects?.onSiteCall?.();\n  try {\n    const result = await httpClient.request(reqOpts);\n    sideEffects?.onSuccess?.(result);\n\n    return {\n      memberIds: renameKeysFromRESTResponseToSDKResponse(result.data)\n        ?.memberIds,\n      metadata: renameKeysFromRESTResponseToSDKResponse(result.data)\n        ?.pagingMetadata,\n    }!;\n  } catch (err: any) {\n    const transformedError = sdkTransformError(\n      err,\n      {\n        spreadPathsToArguments: {},\n        explicitPathsToArguments: { memberId: '$[0]', paging: '$[1].paging' },\n        singleArgumentUnchanged: false,\n      },\n      ['memberId', 'options']\n    );\n    sideEffects?.onError?.(err);\n\n    throw transformedError;\n  }\n}\n\nexport interface ListMemberFollowersOptions {\n  /**\n   * Pagination options. For more information, see\n   * [Sorting and Paging](https://dev.wix.com/docs/rest/articles/getting-started/sorting-and-paging).\n   */\n  paging?: CursorPaging;\n}\n\nexport interface ListMemberFollowersResult {\n  memberIds: string[];\n  metadata: PagingMetadataV2;\n}\n\n/**\n * Retrieves a list of members and their connections to the current member.\n * @param connectedMemberIds - List of member IDs whose connections to the current member will be retrieved.\n * @public\n * @requiredField connectedMemberIds\n * @permissionId MEMBERS.FOLLOW_READ_MY\n * @permissionScope Manage Members\n * @permissionScopeId SCOPE.DC-MEMBERS.MANAGE-MEMBERS\n * @applicableIdentity APP\n * @applicableIdentity VISITOR\n * @fqn com.wixpress.members.follow.v3.MemberFollowers.QueryMyMemberConnections\n */\nexport async function queryCurrentMemberConnections(\n  connectedMemberIds: string[]\n): Promise<\n  NonNullablePaths<\n    QueryMyMemberConnectionsResponse,\n    | `connectedMembers`\n    | `connectedMembers.${number}.connectedMemberId`\n    | `connectedMembers.${number}.followedByMember`\n    | `connectedMembers.${number}.followingMember`\n  >\n> {\n  // @ts-ignore\n  const { httpClient, sideEffects } = arguments[1] as {\n    httpClient: HttpClient;\n    sideEffects?: any;\n  };\n\n  const payload = renameKeysFromSDKRequestToRESTRequest({\n    connectedMemberIds: connectedMemberIds,\n  });\n\n  const reqOpts =\n    ambassadorWixMembersV3Follow.queryMyMemberConnections(payload);\n\n  sideEffects?.onSiteCall?.();\n  try {\n    const result = await httpClient.request(reqOpts);\n    sideEffects?.onSuccess?.(result);\n\n    return renameKeysFromRESTResponseToSDKResponse(result.data)!;\n  } catch (err: any) {\n    const transformedError = sdkTransformError(\n      err,\n      {\n        spreadPathsToArguments: {},\n        explicitPathsToArguments: { connectedMemberIds: '$[0]' },\n        singleArgumentUnchanged: false,\n      },\n      ['connectedMemberIds']\n    );\n    sideEffects?.onError?.(err);\n\n    throw transformedError;\n  }\n}\n\n/**\n * Retrieves a list of members and their connections to the given member.\n * > **Note:** If an empty array is passed as `connectedMemberIds`, the call will succeed, but it will not return any data.\n * @param memberId - Member ID.\n * @param connectedMemberIds - List of member IDs whose connections to the given member will be retrieved.\n * @public\n * @requiredField connectedMemberIds\n * @requiredField memberId\n * @permissionId MEMBERS.FOLLOW_READ\n * @permissionScope Manage Members\n * @permissionScopeId SCOPE.DC-MEMBERS.MANAGE-MEMBERS\n * @permissionScope Read Member Connections\n * @permissionScopeId SCOPE.DC-MEMBERS.READ-FOLLOWERS\n * @applicableIdentity APP\n * @applicableIdentity VISITOR\n * @fqn com.wixpress.members.follow.v3.MemberFollowers.QueryMemberConnections\n */\nexport async function queryMemberConnections(\n  memberId: string,\n  connectedMemberIds: string[]\n): Promise<\n  NonNullablePaths<\n    QueryMemberConnectionsResponse,\n    | `connectedMembers`\n    | `connectedMembers.${number}.connectedMemberId`\n    | `connectedMembers.${number}.followedByMember`\n    | `connectedMembers.${number}.followingMember`\n  >\n> {\n  // @ts-ignore\n  const { httpClient, sideEffects } = arguments[2] as {\n    httpClient: HttpClient;\n    sideEffects?: any;\n  };\n\n  const payload = renameKeysFromSDKRequestToRESTRequest({\n    memberId: memberId,\n    connectedMemberIds: connectedMemberIds,\n  });\n\n  const reqOpts = ambassadorWixMembersV3Follow.queryMemberConnections(payload);\n\n  sideEffects?.onSiteCall?.();\n  try {\n    const result = await httpClient.request(reqOpts);\n    sideEffects?.onSuccess?.(result);\n\n    return renameKeysFromRESTResponseToSDKResponse(result.data)!;\n  } catch (err: any) {\n    const transformedError = sdkTransformError(\n      err,\n      {\n        spreadPathsToArguments: {},\n        explicitPathsToArguments: {\n          memberId: '$[0]',\n          connectedMemberIds: '$[1]',\n        },\n        singleArgumentUnchanged: false,\n      },\n      ['memberId', 'connectedMemberIds']\n    );\n    sideEffects?.onError?.(err);\n\n    throw transformedError;\n  }\n}\n","import { toURLSearchParams } from '@wix/sdk-runtime/rest-modules';\nimport { resolveUrl } from '@wix/sdk-runtime/rest-modules';\nimport { ResolveUrlOpts } from '@wix/sdk-runtime/rest-modules';\nimport { RequestOptionsFactory } from '@wix/sdk-types';\n\nfunction resolveComWixpressMembersFollowV3MemberFollowersUrl(\n  opts: Omit<ResolveUrlOpts, 'domainToMappings'>\n) {\n  const domainToMappings = {\n    'www.wixapis.com': [\n      {\n        srcPath: '/members/v3/followers',\n        destPath: '/v3/followers',\n      },\n    ],\n    'www._base_domain_': [\n      {\n        srcPath: '/_api/members/v3/followers',\n        destPath: '/v3/followers',\n      },\n      {\n        srcPath: '/members/v3/followers',\n        destPath: '/v3/followers',\n      },\n    ],\n    _: [\n      {\n        srcPath: '/_api/members/v3/followers',\n        destPath: '/v3/followers',\n      },\n    ],\n    'editor._base_domain_': [\n      {\n        srcPath: '/_api/members/v3/followers',\n        destPath: '/v3/followers',\n      },\n    ],\n    'blocks._base_domain_': [\n      {\n        srcPath: '/_api/members/v3/followers',\n        destPath: '/v3/followers',\n      },\n    ],\n    'create.editorx': [\n      {\n        srcPath: '/_api/members/v3/followers',\n        destPath: '/v3/followers',\n      },\n    ],\n    'manage._base_domain_': [\n      {\n        srcPath: '/_api/members/v3/followers',\n        destPath: '/v3/followers',\n      },\n    ],\n    '*.dev.wix-code.com': [\n      {\n        srcPath: '/_api/members/v3/followers',\n        destPath: '/v3/followers',\n      },\n    ],\n  };\n\n  return resolveUrl(Object.assign(opts, { domainToMappings }));\n}\n\nconst PACKAGE_NAME = '@wix/auto_sdk_members_member-followers';\n\n/** Sets the current member to follow another, specified member. */\nexport function followMember(payload: object): RequestOptionsFactory<any> {\n  function __followMember({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.members.v3.follow',\n      method: 'POST' as any,\n      methodFqn: 'com.wixpress.members.follow.v3.MemberFollowers.FollowMember',\n      packageName: PACKAGE_NAME,\n      url: resolveComWixpressMembersFollowV3MemberFollowersUrl({\n        protoPath: '/v3/followers/{memberId}',\n        data: payload,\n        host,\n      }),\n      data: payload,\n    };\n\n    return metadata;\n  }\n\n  return __followMember;\n}\n\n/** Sets the current member to unfollow another, specified member. */\nexport function unfollowMember(payload: object): RequestOptionsFactory<any> {\n  function __unfollowMember({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.members.v3.follow',\n      method: 'DELETE' as any,\n      methodFqn:\n        'com.wixpress.members.follow.v3.MemberFollowers.UnfollowMember',\n      packageName: PACKAGE_NAME,\n      url: resolveComWixpressMembersFollowV3MemberFollowersUrl({\n        protoPath: '/v3/followers/{memberId}',\n        data: payload,\n        host,\n      }),\n      params: toURLSearchParams(payload),\n    };\n\n    return metadata;\n  }\n\n  return __unfollowMember;\n}\n\n/** Retrieves a list of members who are followed by the current member. */\nexport function listMyMemberFollowing(\n  payload: object\n): RequestOptionsFactory<any> {\n  function __listMyMemberFollowing({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.members.v3.follow',\n      method: 'GET' as any,\n      methodFqn:\n        'com.wixpress.members.follow.v3.MemberFollowers.ListMyMemberFollowing',\n      packageName: PACKAGE_NAME,\n      url: resolveComWixpressMembersFollowV3MemberFollowersUrl({\n        protoPath: '/v3/followers/my/following',\n        data: payload,\n        host,\n      }),\n      params: toURLSearchParams(payload),\n    };\n\n    return metadata;\n  }\n\n  return __listMyMemberFollowing;\n}\n\n/** Retrieves a list of members who are followed by the given member. */\nexport function listMemberFollowing(\n  payload: object\n): RequestOptionsFactory<any> {\n  function __listMemberFollowing({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.members.v3.follow',\n      method: 'GET' as any,\n      methodFqn:\n        'com.wixpress.members.follow.v3.MemberFollowers.ListMemberFollowing',\n      packageName: PACKAGE_NAME,\n      url: resolveComWixpressMembersFollowV3MemberFollowersUrl({\n        protoPath: '/v3/followers/{memberId}/following',\n        data: payload,\n        host,\n      }),\n      params: toURLSearchParams(payload),\n    };\n\n    return metadata;\n  }\n\n  return __listMemberFollowing;\n}\n\n/** Retrieves a list of members who are following the current member. */\nexport function listMyMemberFollowers(\n  payload: object\n): RequestOptionsFactory<any> {\n  function __listMyMemberFollowers({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.members.v3.follow',\n      method: 'GET' as any,\n      methodFqn:\n        'com.wixpress.members.follow.v3.MemberFollowers.ListMyMemberFollowers',\n      packageName: PACKAGE_NAME,\n      url: resolveComWixpressMembersFollowV3MemberFollowersUrl({\n        protoPath: '/v3/followers/my',\n        data: payload,\n        host,\n      }),\n      params: toURLSearchParams(payload),\n    };\n\n    return metadata;\n  }\n\n  return __listMyMemberFollowers;\n}\n\n/** Retrieves a list of members who are following the given member. */\nexport function listMemberFollowers(\n  payload: object\n): RequestOptionsFactory<any> {\n  function __listMemberFollowers({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.members.v3.follow',\n      method: 'GET' as any,\n      methodFqn:\n        'com.wixpress.members.follow.v3.MemberFollowers.ListMemberFollowers',\n      packageName: PACKAGE_NAME,\n      url: resolveComWixpressMembersFollowV3MemberFollowersUrl({\n        protoPath: '/v3/followers/{memberId}',\n        data: payload,\n        host,\n      }),\n      params: toURLSearchParams(payload),\n    };\n\n    return metadata;\n  }\n\n  return __listMemberFollowers;\n}\n\n/** Retrieves a list of members and their connections to the current member. */\nexport function queryMyMemberConnections(\n  payload: object\n): RequestOptionsFactory<any> {\n  function __queryMyMemberConnections({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.members.v3.follow',\n      method: 'POST' as any,\n      methodFqn:\n        'com.wixpress.members.follow.v3.MemberFollowers.QueryMyMemberConnections',\n      packageName: PACKAGE_NAME,\n      url: resolveComWixpressMembersFollowV3MemberFollowersUrl({\n        protoPath: '/v3/followers/my/connections',\n        data: payload,\n        host,\n      }),\n      data: payload,\n    };\n\n    return metadata;\n  }\n\n  return __queryMyMemberConnections;\n}\n\n/**\n * Retrieves a list of members and their connections to the given member.\n * > **Note:** If an empty array is passed as `connectedMemberIds`, the call will succeed, but it will not return any data.\n */\nexport function queryMemberConnections(\n  payload: object\n): RequestOptionsFactory<any> {\n  function __queryMemberConnections({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.members.v3.follow',\n      method: 'POST' as any,\n      methodFqn:\n        'com.wixpress.members.follow.v3.MemberFollowers.QueryMemberConnections',\n      packageName: PACKAGE_NAME,\n      url: resolveComWixpressMembersFollowV3MemberFollowersUrl({\n        protoPath: '/v3/followers/{memberId}/connections',\n        data: payload,\n        host,\n      }),\n      data: payload,\n    };\n\n    return metadata;\n  }\n\n  return __queryMemberConnections;\n}\n","import {\n  followMember as publicFollowMember,\n  unfollowMember as publicUnfollowMember,\n  listCurrentMemberFollowing as publicListCurrentMemberFollowing,\n  listMemberFollowing as publicListMemberFollowing,\n  listCurrentMemberFollowers as publicListCurrentMemberFollowers,\n  listMemberFollowers as publicListMemberFollowers,\n  queryCurrentMemberConnections as publicQueryCurrentMemberConnections,\n  queryMemberConnections as publicQueryMemberConnections,\n} from './members-v3-follow-member-followers.public.js';\nimport { createRESTModule } from '@wix/sdk-runtime/rest-modules';\nimport { createEventModule } from '@wix/sdk-runtime/event-definition-modules';\nimport { BuildRESTFunction, MaybeContext } from '@wix/sdk-types';\nimport { onFollowMemberFollowed as publicOnFollowMemberFollowed } from './members-v3-follow-member-followers.public.js';\nimport { onFollowMemberUnfollowed as publicOnFollowMemberUnfollowed } from './members-v3-follow-member-followers.public.js';\n\nexport const followMember: MaybeContext<\n  BuildRESTFunction<typeof publicFollowMember> & typeof publicFollowMember\n> = /*#__PURE__*/ createRESTModule(publicFollowMember);\nexport const unfollowMember: MaybeContext<\n  BuildRESTFunction<typeof publicUnfollowMember> & typeof publicUnfollowMember\n> = /*#__PURE__*/ createRESTModule(publicUnfollowMember);\nexport const listCurrentMemberFollowing: MaybeContext<\n  BuildRESTFunction<typeof publicListCurrentMemberFollowing> &\n    typeof publicListCurrentMemberFollowing\n> = /*#__PURE__*/ createRESTModule(publicListCurrentMemberFollowing);\nexport const listMemberFollowing: MaybeContext<\n  BuildRESTFunction<typeof publicListMemberFollowing> &\n    typeof publicListMemberFollowing\n> = /*#__PURE__*/ createRESTModule(publicListMemberFollowing);\nexport const listCurrentMemberFollowers: MaybeContext<\n  BuildRESTFunction<typeof publicListCurrentMemberFollowers> &\n    typeof publicListCurrentMemberFollowers\n> = /*#__PURE__*/ createRESTModule(publicListCurrentMemberFollowers);\nexport const listMemberFollowers: MaybeContext<\n  BuildRESTFunction<typeof publicListMemberFollowers> &\n    typeof publicListMemberFollowers\n> = /*#__PURE__*/ createRESTModule(publicListMemberFollowers);\nexport const queryCurrentMemberConnections: MaybeContext<\n  BuildRESTFunction<typeof publicQueryCurrentMemberConnections> &\n    typeof publicQueryCurrentMemberConnections\n> = /*#__PURE__*/ createRESTModule(publicQueryCurrentMemberConnections);\nexport const queryMemberConnections: MaybeContext<\n  BuildRESTFunction<typeof publicQueryMemberConnections> &\n    typeof publicQueryMemberConnections\n> = /*#__PURE__*/ createRESTModule(publicQueryMemberConnections);\n/**\n * Triggered when a member follows another member.\n */\nexport const onFollowMemberFollowed: ReturnType<\n  typeof createEventModule<typeof publicOnFollowMemberFollowed>\n> = createEventModule(publicOnFollowMemberFollowed);\n/**\n * Triggered when a member unfollows another member.\n */\nexport const onFollowMemberUnfollowed: ReturnType<\n  typeof createEventModule<typeof publicOnFollowMemberUnfollowed>\n> = createEventModule(publicOnFollowMemberUnfollowed);\n\nexport { WebhookIdentityType } from './members-v3-follow-member-followers.universal.js';\nexport {\n  Follower,\n  InvalidateCache,\n  InvalidateCacheGetByOneOf,\n  App,\n  Page,\n  URI,\n  File,\n  FollowMemberRequest,\n  FollowMemberResponse,\n  MemberFollowed,\n  UnfollowMemberRequest,\n  UnfollowMemberResponse,\n  MemberUnfollowed,\n  ListMyMemberFollowingRequest,\n  CursorPaging,\n  ListMyMemberFollowingResponse,\n  PagingMetadataV2,\n  Cursors,\n  ListMemberFollowingRequest,\n  ListMemberFollowingResponse,\n  ListMyMemberFollowersRequest,\n  ListMyMemberFollowersResponse,\n  ListMemberFollowersRequest,\n  ListMemberFollowersResponse,\n  QueryMyMemberConnectionsRequest,\n  QueryMyMemberConnectionsResponse,\n  ConnectedMembers,\n  QueryMemberConnectionsRequest,\n  QueryMemberConnectionsResponse,\n  DomainEvent,\n  DomainEventBodyOneOf,\n  EntityCreatedEvent,\n  RestoreInfo,\n  EntityUpdatedEvent,\n  EntityDeletedEvent,\n  ActionEvent,\n  Empty,\n  MessageEnvelope,\n  IdentificationData,\n  IdentificationDataIdOneOf,\n  BaseEventMetadata,\n  EventMetadata,\n  FollowMemberFollowedEnvelope,\n  FollowMemberUnfollowedEnvelope,\n  ListCurrentMemberFollowingOptions,\n  ListCurrentMemberFollowingResult,\n  ListMemberFollowingOptions,\n  ListMemberFollowingResult,\n  ListCurrentMemberFollowersOptions,\n  ListCurrentMemberFollowersResult,\n  ListMemberFollowersOptions,\n  ListMemberFollowersResult,\n} from './members-v3-follow-member-followers.universal.js';\n"],"mappings":"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","names":["followMember","listCurrentMemberFollowers","listCurrentMemberFollowing","listMemberFollowers","listMemberFollowing","onFollowMemberFollowed","onFollowMemberUnfollowed","queryCurrentMemberConnections","queryMemberConnections","unfollowMember","import_rename_all_nested_keys","import_rest_modules","WebhookIdentityType","followMember","sdkTransformError","unfollowMember","listMemberFollowing","listMemberFollowers","queryMemberConnections","followMember","unfollowMember","listCurrentMemberFollowing","listMemberFollowing","listCurrentMemberFollowers","listMemberFollowers","queryCurrentMemberConnections","queryMemberConnections","import_rest_modules","followMember","unfollowMember","listCurrentMemberFollowing","listMemberFollowing","listCurrentMemberFollowers","listMemberFollowers","queryCurrentMemberConnections","queryMemberConnections","onFollowMemberFollowed","onFollowMemberUnfollowed"]}