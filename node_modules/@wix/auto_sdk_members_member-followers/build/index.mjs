// src/members-v3-follow-member-followers.public.ts
import { renameKeysFromRESTResponseToSDKResponse as renameKeysFromRESTResponseToSDKResponse2 } from "@wix/sdk-runtime/rename-all-nested-keys";
import { transformRESTTimestampToSDKTimestamp } from "@wix/sdk-runtime/transformations/timestamp";
import { transformPaths } from "@wix/sdk-runtime/transformations/transform-paths";
import { EventDefinition } from "@wix/sdk-types";

// src/members-v3-follow-member-followers.universal.ts
import { transformError as sdkTransformError } from "@wix/sdk-runtime/transform-error";
import {
  renameKeysFromSDKRequestToRESTRequest,
  renameKeysFromRESTResponseToSDKResponse
} from "@wix/sdk-runtime/rename-all-nested-keys";

// src/members-v3-follow-member-followers.http.ts
import { toURLSearchParams } from "@wix/sdk-runtime/rest-modules";
import { resolveUrl } from "@wix/sdk-runtime/rest-modules";
function resolveComWixpressMembersFollowV3MemberFollowersUrl(opts) {
  const domainToMappings = {
    "www.wixapis.com": [
      {
        srcPath: "/members/v3/followers",
        destPath: "/v3/followers"
      }
    ],
    "www._base_domain_": [
      {
        srcPath: "/_api/members/v3/followers",
        destPath: "/v3/followers"
      },
      {
        srcPath: "/members/v3/followers",
        destPath: "/v3/followers"
      }
    ],
    _: [
      {
        srcPath: "/_api/members/v3/followers",
        destPath: "/v3/followers"
      }
    ],
    "editor._base_domain_": [
      {
        srcPath: "/_api/members/v3/followers",
        destPath: "/v3/followers"
      }
    ],
    "blocks._base_domain_": [
      {
        srcPath: "/_api/members/v3/followers",
        destPath: "/v3/followers"
      }
    ],
    "create.editorx": [
      {
        srcPath: "/_api/members/v3/followers",
        destPath: "/v3/followers"
      }
    ],
    "manage._base_domain_": [
      {
        srcPath: "/_api/members/v3/followers",
        destPath: "/v3/followers"
      }
    ],
    "*.dev.wix-code.com": [
      {
        srcPath: "/_api/members/v3/followers",
        destPath: "/v3/followers"
      }
    ]
  };
  return resolveUrl(Object.assign(opts, { domainToMappings }));
}
var PACKAGE_NAME = "@wix/auto_sdk_members_member-followers";
function followMember(payload) {
  function __followMember({ host }) {
    const metadata = {
      entityFqdn: "wix.members.v3.follow",
      method: "POST",
      methodFqn: "com.wixpress.members.follow.v3.MemberFollowers.FollowMember",
      packageName: PACKAGE_NAME,
      url: resolveComWixpressMembersFollowV3MemberFollowersUrl({
        protoPath: "/v3/followers/{memberId}",
        data: payload,
        host
      }),
      data: payload
    };
    return metadata;
  }
  return __followMember;
}
function unfollowMember(payload) {
  function __unfollowMember({ host }) {
    const metadata = {
      entityFqdn: "wix.members.v3.follow",
      method: "DELETE",
      methodFqn: "com.wixpress.members.follow.v3.MemberFollowers.UnfollowMember",
      packageName: PACKAGE_NAME,
      url: resolveComWixpressMembersFollowV3MemberFollowersUrl({
        protoPath: "/v3/followers/{memberId}",
        data: payload,
        host
      }),
      params: toURLSearchParams(payload)
    };
    return metadata;
  }
  return __unfollowMember;
}
function listMyMemberFollowing(payload) {
  function __listMyMemberFollowing({ host }) {
    const metadata = {
      entityFqdn: "wix.members.v3.follow",
      method: "GET",
      methodFqn: "com.wixpress.members.follow.v3.MemberFollowers.ListMyMemberFollowing",
      packageName: PACKAGE_NAME,
      url: resolveComWixpressMembersFollowV3MemberFollowersUrl({
        protoPath: "/v3/followers/my/following",
        data: payload,
        host
      }),
      params: toURLSearchParams(payload)
    };
    return metadata;
  }
  return __listMyMemberFollowing;
}
function listMemberFollowing(payload) {
  function __listMemberFollowing({ host }) {
    const metadata = {
      entityFqdn: "wix.members.v3.follow",
      method: "GET",
      methodFqn: "com.wixpress.members.follow.v3.MemberFollowers.ListMemberFollowing",
      packageName: PACKAGE_NAME,
      url: resolveComWixpressMembersFollowV3MemberFollowersUrl({
        protoPath: "/v3/followers/{memberId}/following",
        data: payload,
        host
      }),
      params: toURLSearchParams(payload)
    };
    return metadata;
  }
  return __listMemberFollowing;
}
function listMyMemberFollowers(payload) {
  function __listMyMemberFollowers({ host }) {
    const metadata = {
      entityFqdn: "wix.members.v3.follow",
      method: "GET",
      methodFqn: "com.wixpress.members.follow.v3.MemberFollowers.ListMyMemberFollowers",
      packageName: PACKAGE_NAME,
      url: resolveComWixpressMembersFollowV3MemberFollowersUrl({
        protoPath: "/v3/followers/my",
        data: payload,
        host
      }),
      params: toURLSearchParams(payload)
    };
    return metadata;
  }
  return __listMyMemberFollowers;
}
function listMemberFollowers(payload) {
  function __listMemberFollowers({ host }) {
    const metadata = {
      entityFqdn: "wix.members.v3.follow",
      method: "GET",
      methodFqn: "com.wixpress.members.follow.v3.MemberFollowers.ListMemberFollowers",
      packageName: PACKAGE_NAME,
      url: resolveComWixpressMembersFollowV3MemberFollowersUrl({
        protoPath: "/v3/followers/{memberId}",
        data: payload,
        host
      }),
      params: toURLSearchParams(payload)
    };
    return metadata;
  }
  return __listMemberFollowers;
}
function queryMyMemberConnections(payload) {
  function __queryMyMemberConnections({ host }) {
    const metadata = {
      entityFqdn: "wix.members.v3.follow",
      method: "POST",
      methodFqn: "com.wixpress.members.follow.v3.MemberFollowers.QueryMyMemberConnections",
      packageName: PACKAGE_NAME,
      url: resolveComWixpressMembersFollowV3MemberFollowersUrl({
        protoPath: "/v3/followers/my/connections",
        data: payload,
        host
      }),
      data: payload
    };
    return metadata;
  }
  return __queryMyMemberConnections;
}
function queryMemberConnections(payload) {
  function __queryMemberConnections({ host }) {
    const metadata = {
      entityFqdn: "wix.members.v3.follow",
      method: "POST",
      methodFqn: "com.wixpress.members.follow.v3.MemberFollowers.QueryMemberConnections",
      packageName: PACKAGE_NAME,
      url: resolveComWixpressMembersFollowV3MemberFollowersUrl({
        protoPath: "/v3/followers/{memberId}/connections",
        data: payload,
        host
      }),
      data: payload
    };
    return metadata;
  }
  return __queryMemberConnections;
}

// src/members-v3-follow-member-followers.universal.ts
var WebhookIdentityType = /* @__PURE__ */ ((WebhookIdentityType2) => {
  WebhookIdentityType2["UNKNOWN"] = "UNKNOWN";
  WebhookIdentityType2["ANONYMOUS_VISITOR"] = "ANONYMOUS_VISITOR";
  WebhookIdentityType2["MEMBER"] = "MEMBER";
  WebhookIdentityType2["WIX_USER"] = "WIX_USER";
  WebhookIdentityType2["APP"] = "APP";
  return WebhookIdentityType2;
})(WebhookIdentityType || {});
async function followMember2(memberId) {
  const { httpClient, sideEffects } = arguments[1];
  const payload = renameKeysFromSDKRequestToRESTRequest({ memberId });
  const reqOpts = followMember(payload);
  sideEffects?.onSiteCall?.();
  try {
    const result = await httpClient.request(reqOpts);
    sideEffects?.onSuccess?.(result);
  } catch (err) {
    const transformedError = sdkTransformError(
      err,
      {
        spreadPathsToArguments: {},
        explicitPathsToArguments: { memberId: "$[0]" },
        singleArgumentUnchanged: false
      },
      ["memberId"]
    );
    sideEffects?.onError?.(err);
    throw transformedError;
  }
}
async function unfollowMember2(memberId) {
  const { httpClient, sideEffects } = arguments[1];
  const payload = renameKeysFromSDKRequestToRESTRequest({ memberId });
  const reqOpts = unfollowMember(payload);
  sideEffects?.onSiteCall?.();
  try {
    const result = await httpClient.request(reqOpts);
    sideEffects?.onSuccess?.(result);
  } catch (err) {
    const transformedError = sdkTransformError(
      err,
      {
        spreadPathsToArguments: {},
        explicitPathsToArguments: { memberId: "$[0]" },
        singleArgumentUnchanged: false
      },
      ["memberId"]
    );
    sideEffects?.onError?.(err);
    throw transformedError;
  }
}
async function listCurrentMemberFollowing(options) {
  const { httpClient, sideEffects } = arguments[1];
  const payload = renameKeysFromSDKRequestToRESTRequest({
    paging: options?.paging
  });
  const reqOpts = listMyMemberFollowing(payload);
  sideEffects?.onSiteCall?.();
  try {
    const result = await httpClient.request(reqOpts);
    sideEffects?.onSuccess?.(result);
    return {
      memberIds: renameKeysFromRESTResponseToSDKResponse(result.data)?.memberIds,
      metadata: renameKeysFromRESTResponseToSDKResponse(result.data)?.pagingMetadata
    };
  } catch (err) {
    const transformedError = sdkTransformError(
      err,
      {
        spreadPathsToArguments: {},
        explicitPathsToArguments: { paging: "$[0].paging" },
        singleArgumentUnchanged: false
      },
      ["options"]
    );
    sideEffects?.onError?.(err);
    throw transformedError;
  }
}
async function listMemberFollowing2(memberId, options) {
  const { httpClient, sideEffects } = arguments[2];
  const payload = renameKeysFromSDKRequestToRESTRequest({
    memberId,
    paging: options?.paging
  });
  const reqOpts = listMemberFollowing(payload);
  sideEffects?.onSiteCall?.();
  try {
    const result = await httpClient.request(reqOpts);
    sideEffects?.onSuccess?.(result);
    return {
      memberIds: renameKeysFromRESTResponseToSDKResponse(result.data)?.memberIds,
      metadata: renameKeysFromRESTResponseToSDKResponse(result.data)?.pagingMetadata
    };
  } catch (err) {
    const transformedError = sdkTransformError(
      err,
      {
        spreadPathsToArguments: {},
        explicitPathsToArguments: { memberId: "$[0]", paging: "$[1].paging" },
        singleArgumentUnchanged: false
      },
      ["memberId", "options"]
    );
    sideEffects?.onError?.(err);
    throw transformedError;
  }
}
async function listCurrentMemberFollowers(options) {
  const { httpClient, sideEffects } = arguments[1];
  const payload = renameKeysFromSDKRequestToRESTRequest({
    paging: options?.paging
  });
  const reqOpts = listMyMemberFollowers(payload);
  sideEffects?.onSiteCall?.();
  try {
    const result = await httpClient.request(reqOpts);
    sideEffects?.onSuccess?.(result);
    return {
      memberIds: renameKeysFromRESTResponseToSDKResponse(result.data)?.memberIds,
      metadata: renameKeysFromRESTResponseToSDKResponse(result.data)?.pagingMetadata
    };
  } catch (err) {
    const transformedError = sdkTransformError(
      err,
      {
        spreadPathsToArguments: {},
        explicitPathsToArguments: { paging: "$[0].paging" },
        singleArgumentUnchanged: false
      },
      ["options"]
    );
    sideEffects?.onError?.(err);
    throw transformedError;
  }
}
async function listMemberFollowers2(memberId, options) {
  const { httpClient, sideEffects } = arguments[2];
  const payload = renameKeysFromSDKRequestToRESTRequest({
    memberId,
    paging: options?.paging
  });
  const reqOpts = listMemberFollowers(payload);
  sideEffects?.onSiteCall?.();
  try {
    const result = await httpClient.request(reqOpts);
    sideEffects?.onSuccess?.(result);
    return {
      memberIds: renameKeysFromRESTResponseToSDKResponse(result.data)?.memberIds,
      metadata: renameKeysFromRESTResponseToSDKResponse(result.data)?.pagingMetadata
    };
  } catch (err) {
    const transformedError = sdkTransformError(
      err,
      {
        spreadPathsToArguments: {},
        explicitPathsToArguments: { memberId: "$[0]", paging: "$[1].paging" },
        singleArgumentUnchanged: false
      },
      ["memberId", "options"]
    );
    sideEffects?.onError?.(err);
    throw transformedError;
  }
}
async function queryCurrentMemberConnections(connectedMemberIds) {
  const { httpClient, sideEffects } = arguments[1];
  const payload = renameKeysFromSDKRequestToRESTRequest({
    connectedMemberIds
  });
  const reqOpts = queryMyMemberConnections(payload);
  sideEffects?.onSiteCall?.();
  try {
    const result = await httpClient.request(reqOpts);
    sideEffects?.onSuccess?.(result);
    return renameKeysFromRESTResponseToSDKResponse(result.data);
  } catch (err) {
    const transformedError = sdkTransformError(
      err,
      {
        spreadPathsToArguments: {},
        explicitPathsToArguments: { connectedMemberIds: "$[0]" },
        singleArgumentUnchanged: false
      },
      ["connectedMemberIds"]
    );
    sideEffects?.onError?.(err);
    throw transformedError;
  }
}
async function queryMemberConnections2(memberId, connectedMemberIds) {
  const { httpClient, sideEffects } = arguments[2];
  const payload = renameKeysFromSDKRequestToRESTRequest({
    memberId,
    connectedMemberIds
  });
  const reqOpts = queryMemberConnections(payload);
  sideEffects?.onSiteCall?.();
  try {
    const result = await httpClient.request(reqOpts);
    sideEffects?.onSuccess?.(result);
    return renameKeysFromRESTResponseToSDKResponse(result.data);
  } catch (err) {
    const transformedError = sdkTransformError(
      err,
      {
        spreadPathsToArguments: {},
        explicitPathsToArguments: {
          memberId: "$[0]",
          connectedMemberIds: "$[1]"
        },
        singleArgumentUnchanged: false
      },
      ["memberId", "connectedMemberIds"]
    );
    sideEffects?.onError?.(err);
    throw transformedError;
  }
}

// src/members-v3-follow-member-followers.public.ts
function followMember3(httpClient) {
  return (memberId) => followMember2(
    memberId,
    // @ts-ignore
    { httpClient }
  );
}
function unfollowMember3(httpClient) {
  return (memberId) => unfollowMember2(
    memberId,
    // @ts-ignore
    { httpClient }
  );
}
function listCurrentMemberFollowing2(httpClient) {
  return (options) => listCurrentMemberFollowing(
    options,
    // @ts-ignore
    { httpClient }
  );
}
function listMemberFollowing3(httpClient) {
  return (memberId, options) => listMemberFollowing2(
    memberId,
    options,
    // @ts-ignore
    { httpClient }
  );
}
function listCurrentMemberFollowers2(httpClient) {
  return (options) => listCurrentMemberFollowers(
    options,
    // @ts-ignore
    { httpClient }
  );
}
function listMemberFollowers3(httpClient) {
  return (memberId, options) => listMemberFollowers2(
    memberId,
    options,
    // @ts-ignore
    { httpClient }
  );
}
function queryCurrentMemberConnections2(httpClient) {
  return (connectedMemberIds) => queryCurrentMemberConnections(
    connectedMemberIds,
    // @ts-ignore
    { httpClient }
  );
}
function queryMemberConnections3(httpClient) {
  return (memberId, connectedMemberIds) => queryMemberConnections2(
    memberId,
    connectedMemberIds,
    // @ts-ignore
    { httpClient }
  );
}
var onFollowMemberFollowed = EventDefinition(
  "wix.members.v3.follow_member_followed",
  true,
  (event) => renameKeysFromRESTResponseToSDKResponse2(
    transformPaths(event, [
      {
        transformFn: transformRESTTimestampToSDKTimestamp,
        paths: [{ path: "metadata.eventTime" }]
      }
    ])
  )
)();
var onFollowMemberUnfollowed = EventDefinition(
  "wix.members.v3.follow_member_unfollowed",
  true,
  (event) => renameKeysFromRESTResponseToSDKResponse2(
    transformPaths(event, [
      {
        transformFn: transformRESTTimestampToSDKTimestamp,
        paths: [{ path: "metadata.eventTime" }]
      }
    ])
  )
)();

// src/members-v3-follow-member-followers.context.ts
import { createRESTModule } from "@wix/sdk-runtime/rest-modules";
import { createEventModule } from "@wix/sdk-runtime/event-definition-modules";
var followMember4 = /* @__PURE__ */ createRESTModule(followMember3);
var unfollowMember4 = /* @__PURE__ */ createRESTModule(unfollowMember3);
var listCurrentMemberFollowing3 = /* @__PURE__ */ createRESTModule(listCurrentMemberFollowing2);
var listMemberFollowing4 = /* @__PURE__ */ createRESTModule(listMemberFollowing3);
var listCurrentMemberFollowers3 = /* @__PURE__ */ createRESTModule(listCurrentMemberFollowers2);
var listMemberFollowers4 = /* @__PURE__ */ createRESTModule(listMemberFollowers3);
var queryCurrentMemberConnections3 = /* @__PURE__ */ createRESTModule(queryCurrentMemberConnections2);
var queryMemberConnections4 = /* @__PURE__ */ createRESTModule(queryMemberConnections3);
var onFollowMemberFollowed2 = createEventModule(onFollowMemberFollowed);
var onFollowMemberUnfollowed2 = createEventModule(onFollowMemberUnfollowed);
export {
  WebhookIdentityType,
  followMember4 as followMember,
  listCurrentMemberFollowers3 as listCurrentMemberFollowers,
  listCurrentMemberFollowing3 as listCurrentMemberFollowing,
  listMemberFollowers4 as listMemberFollowers,
  listMemberFollowing4 as listMemberFollowing,
  onFollowMemberFollowed2 as onFollowMemberFollowed,
  onFollowMemberUnfollowed2 as onFollowMemberUnfollowed,
  queryCurrentMemberConnections3 as queryCurrentMemberConnections,
  queryMemberConnections4 as queryMemberConnections,
  unfollowMember4 as unfollowMember
};
//# sourceMappingURL=index.mjs.map