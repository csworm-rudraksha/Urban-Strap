import { RequestOptionsFactory } from '@wix/sdk-types';
/** Creates a booking policy. */
export declare function createBookingPolicy(payload: object): RequestOptionsFactory<any>;
/** Retrieves a booking policy. */
export declare function getBookingPolicy(payload: object): RequestOptionsFactory<any>;
/**
 * Retrieves the strictest version of each policy rule from a list of booking
 * policies.
 *
 *
 * Returns a hypothetical `bookingPolicy` object that combines the strictest
 * version of each rule. The `id` of the returned policy is `null` and no
 * corresponding `bookingPolicy` object is created. To create a new policy, you
 * can call *Create Booking Policy*
 * ([SDK](https://dev.wix.com/docs/sdk/backend-modules/bookings/booking-policies/create-booking-policy) | [REST](https://dev.wix.com/docs/rest/business-solutions/bookings/policies/booking-policies/create-booking-policy)).
 */
export declare function getStrictestBookingPolicy(payload: object): RequestOptionsFactory<any>;
/**
 * Updates a booking policy.
 *
 *
 * Each time the booking policy is updated, `revision` increments by 1.
 * The current `revision` must be specified when updating the booking policy.
 * This ensures you're working with the latest booking policy and prevents unintended overwrites.
 */
export declare function updateBookingPolicy(payload: object): RequestOptionsFactory<any>;
/**
 * Sets a booking policy as the default.
 *
 *
 * Also updates the site's current default policy by setting its `default`
 * attribute to `false`. If the provided policy is already the site's
 * default, the call succeeds without changing any `bookingPolicy` object.
 */
export declare function setDefaultBookingPolicy(payload: object): RequestOptionsFactory<any>;
/**
 * Deletes a booking policy.
 *
 *
 * You can't delete the default policy without first *setting a different policy as default*
 * ([SDK](https://dev.wix.com/docs/sdk/backend-modules/bookings/booking-policies/set-default-booking-policy) | [REST](https://dev.wix.com/docs/rest/business-solutions/bookings/policies/booking-policies/set-default-booking-policy)).
 */
export declare function deleteBookingPolicy(payload: object): RequestOptionsFactory<any>;
/**
 * Retrieves a list of booking policies, given the provided paging, filtering, and sorting.
 *
 *
 * Query Booking Policies runs with these defaults, which you can override:
 *
 * - Sorted by `createdDate` in ascending order.
 * - `cursorPaging.limit` set to `100`.
 *
 * For details about all supported filters and sorting options, see
 * [supported filters](https://dev.wix.com/docs/rest/business-solutions/bookings/policies/booking-policies/supported-filters).
 *
 * To learn about working with _Query_ endpoints, see
 * [API Query Language](https://dev.wix.com/api/rest/getting-started/api-query-language),
 * [Sorting and Paging](https://dev.wix.com/api/rest/getting-started/pagination),
 * and [Field Projection](https://dev.wix.com/api/rest/getting-started/field-projection).
 */
export declare function queryBookingPolicies(payload: object): RequestOptionsFactory<any>;
/**
 * Counts booking policies, given the provided filtering.
 *
 *
 * See *supported filters*
 * ([REST](https://dev.wix.com/docs/rest/business-solutions/bookings/policies/booking-policies/supported-filters))
 * for a complete list of supported filters.
 */
export declare function countBookingPolicies(payload: object): RequestOptionsFactory<any>;
