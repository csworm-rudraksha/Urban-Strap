import { createBookingPolicy as publicCreateBookingPolicy, getBookingPolicy as publicGetBookingPolicy, getStrictestBookingPolicy as publicGetStrictestBookingPolicy, updateBookingPolicy as publicUpdateBookingPolicy, setDefaultBookingPolicy as publicSetDefaultBookingPolicy, deleteBookingPolicy as publicDeleteBookingPolicy, queryBookingPolicies as publicQueryBookingPolicies, countBookingPolicies as publicCountBookingPolicies } from './bookings-v1-booking-policy-booking-policies.public.js';
import { createEventModule } from '@wix/sdk-runtime/event-definition-modules';
import { BuildRESTFunction, MaybeContext } from '@wix/sdk-types';
import { onBookingPolicyCreated as publicOnBookingPolicyCreated } from './bookings-v1-booking-policy-booking-policies.public.js';
import { onBookingPolicyDefaultBookingPolicySet as publicOnBookingPolicyDefaultBookingPolicySet } from './bookings-v1-booking-policy-booking-policies.public.js';
import { onBookingPolicyDeleted as publicOnBookingPolicyDeleted } from './bookings-v1-booking-policy-booking-policies.public.js';
import { onBookingPolicyUpdated as publicOnBookingPolicyUpdated } from './bookings-v1-booking-policy-booking-policies.public.js';
export declare const createBookingPolicy: MaybeContext<BuildRESTFunction<typeof publicCreateBookingPolicy> & typeof publicCreateBookingPolicy>;
export declare const getBookingPolicy: MaybeContext<BuildRESTFunction<typeof publicGetBookingPolicy> & typeof publicGetBookingPolicy>;
export declare const getStrictestBookingPolicy: MaybeContext<BuildRESTFunction<typeof publicGetStrictestBookingPolicy> & typeof publicGetStrictestBookingPolicy>;
export declare const updateBookingPolicy: MaybeContext<BuildRESTFunction<typeof publicUpdateBookingPolicy> & typeof publicUpdateBookingPolicy>;
export declare const setDefaultBookingPolicy: MaybeContext<BuildRESTFunction<typeof publicSetDefaultBookingPolicy> & typeof publicSetDefaultBookingPolicy>;
export declare const deleteBookingPolicy: MaybeContext<BuildRESTFunction<typeof publicDeleteBookingPolicy> & typeof publicDeleteBookingPolicy>;
export declare const queryBookingPolicies: MaybeContext<BuildRESTFunction<typeof publicQueryBookingPolicies> & typeof publicQueryBookingPolicies>;
export declare const countBookingPolicies: MaybeContext<BuildRESTFunction<typeof publicCountBookingPolicies> & typeof publicCountBookingPolicies>;
/**
 * Triggered when a booking policy is created.
 */
export declare const onBookingPolicyCreated: ReturnType<typeof createEventModule<typeof publicOnBookingPolicyCreated>>;
/**
 * Triggered when the site's default policy changes. Then,
 * _Booking Policy Updated_
 * ([SDK](https://dev.wix.com/docs/sdk/backend-modules/bookings/booking-policies/on-booking-policy-updated) | [REST](https://dev.wix.com/docs/rest/business-solutions/bookings/policies/booking-policies/booking-policy-updated))
 * is also triggered both for the new and the previous default policy.
 */
export declare const onBookingPolicyDefaultBookingPolicySet: ReturnType<typeof createEventModule<typeof publicOnBookingPolicyDefaultBookingPolicySet>>;
/**
 * Triggered when a booking policy is deleted.
 */
export declare const onBookingPolicyDeleted: ReturnType<typeof createEventModule<typeof publicOnBookingPolicyDeleted>>;
/**
 * Triggered when a booking policy is updated, including when a policy's
 * `default` attribute changes.
 */
export declare const onBookingPolicyUpdated: ReturnType<typeof createEventModule<typeof publicOnBookingPolicyUpdated>>;
export { SortOrder, PlacementType, DayOfWeek, ResolutionMethod, State, SiteCreatedContext, Namespace, DeleteStatus, WebhookIdentityType, } from './bookings-v1-booking-policy-booking-policies.universal.js';
export { BookingPolicy, PolicyDescription, LimitEarlyBookingPolicy, LimitLateBookingPolicy, BookAfterStartPolicy, CancellationPolicy, ReschedulePolicy, WaitlistPolicy, ParticipantsPolicy, ResourcesPolicy, CancellationFeePolicy, Money, CancellationWindow, CancellationWindowFeeOneOf, SaveCreditCardPolicy, ExtendedFields, DefaultBookingPolicySet, CreateBookingPolicyRequest, CreateBookingPolicyResponse, GetBookingPolicyRequest, GetBookingPolicyResponse, GetStrictestBookingPolicyRequest, GetStrictestBookingPolicyResponse, UpdateBookingPolicyRequest, UpdateBookingPolicyResponse, SetDefaultBookingPolicyRequest, SetDefaultBookingPolicyResponse, DeleteBookingPolicyRequest, DeleteBookingPolicyResponse, QueryBookingPoliciesRequest, CursorQuery, CursorQueryPagingMethodOneOf, Sorting, CursorPaging, QueryBookingPoliciesResponse, CursorPagingMetadata, Cursors, CountBookingPoliciesRequest, CountBookingPoliciesResponse, UpdateAllPoliciesRequest, UpdateAllPoliciesResponse, CreateMissingDefaultPolicyRequest, CreateMissingDefaultPolicyResponse, DomainEvent, DomainEventBodyOneOf, EntityCreatedEvent, RestoreInfo, EntityUpdatedEvent, EntityDeletedEvent, ActionEvent, Empty, SitePropertiesNotification, SitePropertiesEvent, Properties, Categories, Locale, Address, AddressHint, GeoCoordinates, BusinessSchedule, TimePeriod, SpecialHourPeriod, Multilingual, SupportedLanguage, ConsentPolicy, Translation, ChangeContext, ChangeContextPayloadOneOf, PropertiesChange, V4SiteCreated, SiteCloned, MetaSiteSpecialEvent, MetaSiteSpecialEventPayloadOneOf, Asset, SiteCreated, SiteTransferred, SiteDeleted, DeleteContext, SiteUndeleted, SitePublished, SiteUnpublished, SiteMarkedAsTemplate, SiteMarkedAsWixSite, ServiceProvisioned, ServiceRemoved, SiteRenamed, SiteHardDeleted, NamespaceChanged, StudioAssigned, StudioUnassigned, MessageEnvelope, IdentificationData, IdentificationDataIdOneOf, BookingPolicyNonNullableFields, CreateBookingPolicyResponseNonNullableFields, GetBookingPolicyResponseNonNullableFields, GetStrictestBookingPolicyResponseNonNullableFields, UpdateBookingPolicyResponseNonNullableFields, SetDefaultBookingPolicyResponseNonNullableFields, QueryBookingPoliciesResponseNonNullableFields, CountBookingPoliciesResponseNonNullableFields, BaseEventMetadata, EventMetadata, BookingPolicyCreatedEnvelope, BookingPolicyDefaultBookingPolicySetEnvelope, BookingPolicyDeletedEnvelope, BookingPolicyUpdatedEnvelope, UpdateBookingPolicy, BookingPoliciesQueryResult, BookingPoliciesQueryBuilder, CountBookingPoliciesOptions, } from './bookings-v1-booking-policy-booking-policies.universal.js';
