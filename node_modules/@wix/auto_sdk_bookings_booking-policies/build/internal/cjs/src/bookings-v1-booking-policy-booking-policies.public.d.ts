import { EventDefinition, HttpClient } from '@wix/sdk-types';
import { BookingPoliciesQueryBuilder, BookingPolicy, BookingPolicyCreatedEnvelope, BookingPolicyDefaultBookingPolicySetEnvelope, BookingPolicyDeletedEnvelope, BookingPolicyNonNullableFields, BookingPolicyUpdatedEnvelope, CountBookingPoliciesOptions, CountBookingPoliciesResponse, CountBookingPoliciesResponseNonNullableFields, GetStrictestBookingPolicyResponse, GetStrictestBookingPolicyResponseNonNullableFields, SetDefaultBookingPolicyResponse, SetDefaultBookingPolicyResponseNonNullableFields, UpdateBookingPolicy } from './bookings-v1-booking-policy-booking-policies.universal.js';
export declare const __metadata: {
    PACKAGE_NAME: string;
};
export declare function createBookingPolicy(httpClient: HttpClient): CreateBookingPolicySignature;
interface CreateBookingPolicySignature {
    /**
     * Creates a booking policy.
     * @param - Booking policy to create.
     * @returns Created booking policy.
     */
    (bookingPolicy: BookingPolicy): Promise<BookingPolicy & BookingPolicyNonNullableFields>;
}
export declare function getBookingPolicy(httpClient: HttpClient): GetBookingPolicySignature;
interface GetBookingPolicySignature {
    /**
     * Retrieves a booking policy.
     * @param - ID of the booking policy to retrieve.
     * @returns Retrieved booking policy.
     */
    (bookingPolicyId: string): Promise<BookingPolicy & BookingPolicyNonNullableFields>;
}
export declare function getStrictestBookingPolicy(httpClient: HttpClient): GetStrictestBookingPolicySignature;
interface GetStrictestBookingPolicySignature {
    /**
     * Retrieves the strictest version of each policy rule from a list of booking
     * policies.
     *
     *
     * Returns a hypothetical `bookingPolicy` object that combines the strictest
     * version of each rule. The `id` of the returned policy is `null` and no
     * corresponding `bookingPolicy` object is created. To create a new policy, you
     * can call *Create Booking Policy*
     * ([SDK](https://dev.wix.com/docs/sdk/backend-modules/bookings/booking-policies/create-booking-policy) | [REST](https://dev.wix.com/docs/rest/business-solutions/bookings/policies/booking-policies/create-booking-policy)).
     * @param - IDs of the booking policies for which to retrieve the strictest rules for.
     */
    (bookingPolicyIds: string[]): Promise<GetStrictestBookingPolicyResponse & GetStrictestBookingPolicyResponseNonNullableFields>;
}
export declare function updateBookingPolicy(httpClient: HttpClient): UpdateBookingPolicySignature;
interface UpdateBookingPolicySignature {
    /**
     * Updates a booking policy.
     *
     *
     * Each time the booking policy is updated, `revision` increments by 1.
     * The current `revision` must be specified when updating the booking policy.
     * This ensures you're working with the latest booking policy and prevents unintended overwrites.
     * @param - ID of the booking policy.
     * @returns Updated booking policy.
     */
    (_id: string | null, bookingPolicy: UpdateBookingPolicy): Promise<BookingPolicy & BookingPolicyNonNullableFields>;
}
export declare function setDefaultBookingPolicy(httpClient: HttpClient): SetDefaultBookingPolicySignature;
interface SetDefaultBookingPolicySignature {
    /**
     * Sets a booking policy as the default.
     *
     *
     * Also updates the site's current default policy by setting its `default`
     * attribute to `false`. If the provided policy is already the site's
     * default, the call succeeds without changing any `bookingPolicy` object.
     * @param - ID of the booking policy that's set as default.
     */
    (bookingPolicyId: string): Promise<SetDefaultBookingPolicyResponse & SetDefaultBookingPolicyResponseNonNullableFields>;
}
export declare function deleteBookingPolicy(httpClient: HttpClient): DeleteBookingPolicySignature;
interface DeleteBookingPolicySignature {
    /**
     * Deletes a booking policy.
     *
     *
     * You can't delete the default policy without first *setting a different policy as default*
     * ([SDK](https://dev.wix.com/docs/sdk/backend-modules/bookings/booking-policies/set-default-booking-policy) | [REST](https://dev.wix.com/docs/rest/business-solutions/bookings/policies/booking-policies/set-default-booking-policy)).
     * @param - ID of the booking policy to delete.
     */
    (bookingPolicyId: string): Promise<void>;
}
export declare function queryBookingPolicies(httpClient: HttpClient): QueryBookingPoliciesSignature;
interface QueryBookingPoliciesSignature {
    /**
     * Retrieves a list of booking policies, given the provided paging, filtering, and sorting.
     *
     *
     * Query Booking Policies runs with these defaults, which you can override:
     *
     * - Sorted by `createdDate` in ascending order.
     * - `cursorPaging.limit` set to `100`.
     *
     * For details about all supported filters and sorting options, see
     * [supported filters](https://dev.wix.com/docs/rest/business-solutions/bookings/policies/booking-policies/supported-filters).
     *
     * To learn about working with _Query_ endpoints, see
     * [API Query Language](https://dev.wix.com/api/rest/getting-started/api-query-language),
     * [Sorting and Paging](https://dev.wix.com/api/rest/getting-started/pagination),
     * and [Field Projection](https://dev.wix.com/api/rest/getting-started/field-projection).
     */
    (): BookingPoliciesQueryBuilder;
}
export declare function countBookingPolicies(httpClient: HttpClient): CountBookingPoliciesSignature;
interface CountBookingPoliciesSignature {
    /**
     * Counts booking policies, given the provided filtering.
     *
     *
     * See *supported filters*
     * ([REST](https://dev.wix.com/docs/rest/business-solutions/bookings/policies/booking-policies/supported-filters))
     * for a complete list of supported filters.
     */
    (options?: CountBookingPoliciesOptions | undefined): Promise<CountBookingPoliciesResponse & CountBookingPoliciesResponseNonNullableFields>;
}
export declare const onBookingPolicyCreated: EventDefinition<BookingPolicyCreatedEnvelope, "wix.bookings.v1.booking_policy_created">;
export declare const onBookingPolicyDefaultBookingPolicySet: EventDefinition<BookingPolicyDefaultBookingPolicySetEnvelope, "wix.bookings.v1.booking_policy_default_booking_policy_set">;
export declare const onBookingPolicyDeleted: EventDefinition<BookingPolicyDeletedEnvelope, "wix.bookings.v1.booking_policy_deleted">;
export declare const onBookingPolicyUpdated: EventDefinition<BookingPolicyUpdatedEnvelope, "wix.bookings.v1.booking_policy_updated">;
export { ActionEvent, Address, AddressHint, Asset, BaseEventMetadata, BookAfterStartPolicy, BookingPoliciesQueryBuilder, BookingPoliciesQueryResult, BookingPolicy, BookingPolicyCreatedEnvelope, BookingPolicyDefaultBookingPolicySetEnvelope, BookingPolicyDeletedEnvelope, BookingPolicyNonNullableFields, BookingPolicyUpdatedEnvelope, BusinessSchedule, CancellationFeePolicy, CancellationPolicy, CancellationWindow, CancellationWindowFeeOneOf, Categories, ChangeContext, ChangeContextPayloadOneOf, ConsentPolicy, CountBookingPoliciesOptions, CountBookingPoliciesRequest, CountBookingPoliciesResponse, CountBookingPoliciesResponseNonNullableFields, CreateBookingPolicyRequest, CreateBookingPolicyResponse, CreateBookingPolicyResponseNonNullableFields, CreateMissingDefaultPolicyRequest, CreateMissingDefaultPolicyResponse, CursorPaging, CursorPagingMetadata, CursorQuery, CursorQueryPagingMethodOneOf, Cursors, DayOfWeek, DefaultBookingPolicySet, DeleteBookingPolicyRequest, DeleteBookingPolicyResponse, DeleteContext, DeleteStatus, DomainEvent, DomainEventBodyOneOf, Empty, EntityCreatedEvent, EntityDeletedEvent, EntityUpdatedEvent, EventMetadata, ExtendedFields, GeoCoordinates, GetBookingPolicyRequest, GetBookingPolicyResponse, GetBookingPolicyResponseNonNullableFields, GetStrictestBookingPolicyRequest, GetStrictestBookingPolicyResponse, GetStrictestBookingPolicyResponseNonNullableFields, IdentificationData, IdentificationDataIdOneOf, LimitEarlyBookingPolicy, LimitLateBookingPolicy, Locale, MessageEnvelope, MetaSiteSpecialEvent, MetaSiteSpecialEventPayloadOneOf, Money, Multilingual, Namespace, NamespaceChanged, ParticipantsPolicy, PlacementType, PolicyDescription, Properties, PropertiesChange, QueryBookingPoliciesRequest, QueryBookingPoliciesResponse, QueryBookingPoliciesResponseNonNullableFields, ReschedulePolicy, ResolutionMethod, ResourcesPolicy, RestoreInfo, SaveCreditCardPolicy, ServiceProvisioned, ServiceRemoved, SetDefaultBookingPolicyRequest, SetDefaultBookingPolicyResponse, SetDefaultBookingPolicyResponseNonNullableFields, SiteCloned, SiteCreated, SiteCreatedContext, SiteDeleted, SiteHardDeleted, SiteMarkedAsTemplate, SiteMarkedAsWixSite, SitePropertiesEvent, SitePropertiesNotification, SitePublished, SiteRenamed, SiteTransferred, SiteUndeleted, SiteUnpublished, SortOrder, Sorting, SpecialHourPeriod, State, StudioAssigned, StudioUnassigned, SupportedLanguage, TimePeriod, Translation, UpdateAllPoliciesRequest, UpdateAllPoliciesResponse, UpdateBookingPolicy, UpdateBookingPolicyRequest, UpdateBookingPolicyResponse, UpdateBookingPolicyResponseNonNullableFields, V4SiteCreated, WaitlistPolicy, WebhookIdentityType, } from './bookings-v1-booking-policy-booking-policies.universal.js';
