import { renameKeysFromRESTResponseToSDKResponse } from '@wix/sdk-runtime/rename-all-nested-keys';
import { transformRESTTimestampToSDKTimestamp } from '@wix/sdk-runtime/transformations/timestamp';
import { transformPaths } from '@wix/sdk-runtime/transformations/transform-paths';
import { EventDefinition } from '@wix/sdk-types';
import { countBookingPolicies as universalCountBookingPolicies, createBookingPolicy as universalCreateBookingPolicy, deleteBookingPolicy as universalDeleteBookingPolicy, getBookingPolicy as universalGetBookingPolicy, getStrictestBookingPolicy as universalGetStrictestBookingPolicy, queryBookingPolicies as universalQueryBookingPolicies, setDefaultBookingPolicy as universalSetDefaultBookingPolicy, updateBookingPolicy as universalUpdateBookingPolicy, } from './bookings-v1-booking-policy-booking-policies.universal.js';
export const __metadata = { PACKAGE_NAME: '@wix/bookings' };
export function createBookingPolicy(httpClient) {
    return (bookingPolicy) => universalCreateBookingPolicy(bookingPolicy, 
    // @ts-ignore
    { httpClient });
}
export function getBookingPolicy(httpClient) {
    return (bookingPolicyId) => universalGetBookingPolicy(bookingPolicyId, 
    // @ts-ignore
    { httpClient });
}
export function getStrictestBookingPolicy(httpClient) {
    return (bookingPolicyIds) => universalGetStrictestBookingPolicy(bookingPolicyIds, 
    // @ts-ignore
    { httpClient });
}
export function updateBookingPolicy(httpClient) {
    return (_id, bookingPolicy) => universalUpdateBookingPolicy(_id, bookingPolicy, 
    // @ts-ignore
    { httpClient });
}
export function setDefaultBookingPolicy(httpClient) {
    return (bookingPolicyId) => universalSetDefaultBookingPolicy(bookingPolicyId, 
    // @ts-ignore
    { httpClient });
}
export function deleteBookingPolicy(httpClient) {
    return (bookingPolicyId) => universalDeleteBookingPolicy(bookingPolicyId, 
    // @ts-ignore
    { httpClient });
}
export function queryBookingPolicies(httpClient) {
    return () => universalQueryBookingPolicies(
    // @ts-ignore
    { httpClient });
}
export function countBookingPolicies(httpClient) {
    return (options) => universalCountBookingPolicies(options, 
    // @ts-ignore
    { httpClient });
}
export const onBookingPolicyCreated = EventDefinition('wix.bookings.v1.booking_policy_created', true, (event) => renameKeysFromRESTResponseToSDKResponse(transformPaths(event, [
    {
        transformFn: transformRESTTimestampToSDKTimestamp,
        paths: [
            { path: 'entity.createdDate' },
            { path: 'entity.updatedDate' },
            { path: 'metadata.eventTime' },
        ],
    },
])))();
export const onBookingPolicyDefaultBookingPolicySet = EventDefinition('wix.bookings.v1.booking_policy_default_booking_policy_set', true, (event) => renameKeysFromRESTResponseToSDKResponse(transformPaths(event, [
    {
        transformFn: transformRESTTimestampToSDKTimestamp,
        paths: [
            { path: 'data.currentDefaultBookingPolicy.createdDate' },
            { path: 'data.currentDefaultBookingPolicy.updatedDate' },
            { path: 'data.previousDefaultBookingPolicy.createdDate' },
            { path: 'data.previousDefaultBookingPolicy.updatedDate' },
            { path: 'metadata.eventTime' },
        ],
    },
])))();
export const onBookingPolicyDeleted = EventDefinition('wix.bookings.v1.booking_policy_deleted', true, (event) => renameKeysFromRESTResponseToSDKResponse(transformPaths(event, [
    {
        transformFn: transformRESTTimestampToSDKTimestamp,
        paths: [
            { path: 'undefined.createdDate' },
            { path: 'undefined.updatedDate' },
            { path: 'metadata.eventTime' },
        ],
    },
])))();
export const onBookingPolicyUpdated = EventDefinition('wix.bookings.v1.booking_policy_updated', true, (event) => renameKeysFromRESTResponseToSDKResponse(transformPaths(event, [
    {
        transformFn: transformRESTTimestampToSDKTimestamp,
        paths: [
            { path: 'entity.createdDate' },
            { path: 'entity.updatedDate' },
            { path: 'metadata.eventTime' },
        ],
    },
])))();
export { DayOfWeek, DeleteStatus, Namespace, PlacementType, ResolutionMethod, SiteCreatedContext, SortOrder, State, WebhookIdentityType, } from './bookings-v1-booking-policy-booking-policies.universal.js';
//# sourceMappingURL=bookings-v1-booking-policy-booking-policies.public.js.map