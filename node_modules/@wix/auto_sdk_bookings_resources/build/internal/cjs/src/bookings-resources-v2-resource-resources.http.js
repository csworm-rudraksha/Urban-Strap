"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.countResources = exports.queryResources = exports.searchResources = exports.bulkDeleteResources = exports.deleteResource = exports.updateResource = exports.getResource = exports.bulkCreateResources = exports.createResource = void 0;
const rest_modules_1 = require("@wix/sdk-runtime/rest-modules");
const float_1 = require("@wix/sdk-runtime/transformations/float");
const float_2 = require("@wix/sdk-runtime/transformations/float");
const timestamp_1 = require("@wix/sdk-runtime/transformations/timestamp");
const timestamp_2 = require("@wix/sdk-runtime/transformations/timestamp");
const field_mask_1 = require("@wix/sdk-runtime/transformations/field-mask");
const transform_paths_1 = require("@wix/sdk-runtime/transformations/transform-paths");
const rest_modules_2 = require("@wix/sdk-runtime/rest-modules");
function resolveWixBookingsResourcesV2ResourcesServiceUrl(opts) {
    const domainToMappings = {
        'manage._base_domain_': [
            {
                srcPath: '/bookings/v2/resources',
                destPath: '/v2/resources',
            },
            {
                srcPath: '/_api/bookings/v2/resources',
                destPath: '/v2/resources',
            },
            {
                srcPath: '/v2/bulk/resources',
                destPath: '/v2/bulk/resources',
            },
        ],
        'api._api_base_domain_': [
            {
                srcPath: '/resources-2',
                destPath: '',
            },
        ],
        'www.wixapis.com': [
            {
                srcPath: '/bookings/v2/resources',
                destPath: '/v2/resources',
            },
            {
                srcPath: '/bookings/v2/bulk/resources',
                destPath: '/v2/bulk/resources',
            },
        ],
        '*.dev.wix-code.com': [
            {
                srcPath: '/_api/resources-2',
                destPath: '',
            },
        ],
    };
    return (0, rest_modules_2.resolveUrl)(Object.assign(opts, { domainToMappings }));
}
const PACKAGE_NAME = '@wix/auto_sdk_bookings_resources';
/**
 * Creates a new resource.
 *
 *
 * ## Connected schedules
 *
 * A new event *schedule*
 * ([SDK](https://dev.wix.com/docs/sdk/backend-modules/calendar/wix-bookings-integration) | [REST](https://dev.wix.com/docs/rest/business-management/calendar/wix-bookings-integration))
 * is automatically created for the resource.
 *
 * ## Locations
 *
 * If you don't specify `locationOptions`, Wix Bookings automatically sets
 * `locationOptions.availableInAllLocations` to `true`.
 *
 * If you specify 1 business location ID in `locationOptions.specificLocationOptions.businessLocations`,
 * you must specify `locationOptions.specificLocationOptions.availableInBusinessLocations`
 * as `true`. Currently, you can specify only a single business location.
 */
function createResource(payload) {
    function __createResource({ host }) {
        const serializedData = (0, transform_paths_1.transformPaths)(payload, [
            {
                transformFn: timestamp_1.transformSDKTimestampToRESTTimestamp,
                paths: [
                    { path: 'resource.createdDate' },
                    { path: 'resource.updatedDate' },
                ],
            },
        ]);
        const metadata = {
            entityFqdn: 'wix.bookings.resources.v2.resource',
            method: 'POST',
            methodFqn: 'wix.bookings.resources.v2.ResourcesService.CreateResource',
            packageName: PACKAGE_NAME,
            url: resolveWixBookingsResourcesV2ResourcesServiceUrl({
                protoPath: '/v2/resources',
                data: serializedData,
                host,
            }),
            data: serializedData,
            transformResponse: (payload) => (0, transform_paths_1.transformPaths)(payload, [
                {
                    transformFn: timestamp_2.transformRESTTimestampToSDKTimestamp,
                    paths: [
                        { path: 'resource.createdDate' },
                        { path: 'resource.updatedDate' },
                    ],
                },
            ]),
        };
        return metadata;
    }
    return __createResource;
}
exports.createResource = createResource;
/**
 * Creates up to 50 resources.
 *
 *
 * Refer to *Create Resource*
 * ([SDK](https://dev.wix.com/docs/sdk/backend-modules/bookings/resources/create-resource) | [REST](https://dev.wix.com/docs/rest/business-solutions/bookings/resources/resources-v2/create-resource))
 * for more details.
 */
function bulkCreateResources(payload) {
    function __bulkCreateResources({ host }) {
        const serializedData = (0, transform_paths_1.transformPaths)(payload, [
            {
                transformFn: timestamp_1.transformSDKTimestampToRESTTimestamp,
                paths: [
                    { path: 'resources.createdDate' },
                    { path: 'resources.updatedDate' },
                ],
            },
        ]);
        const metadata = {
            entityFqdn: 'wix.bookings.resources.v2.resource',
            method: 'POST',
            methodFqn: 'wix.bookings.resources.v2.ResourcesService.BulkCreateResources',
            packageName: PACKAGE_NAME,
            url: resolveWixBookingsResourcesV2ResourcesServiceUrl({
                protoPath: '/v2/bulk/resources/create',
                data: serializedData,
                host,
            }),
            data: serializedData,
            transformResponse: (payload) => (0, transform_paths_1.transformPaths)(payload, [
                {
                    transformFn: timestamp_2.transformRESTTimestampToSDKTimestamp,
                    paths: [
                        { path: 'results.item.createdDate' },
                        { path: 'results.item.updatedDate' },
                    ],
                },
            ]),
        };
        return metadata;
    }
    return __bulkCreateResources;
}
exports.bulkCreateResources = bulkCreateResources;
/** Retrieves a resource. */
function getResource(payload) {
    function __getResource({ host }) {
        const metadata = {
            entityFqdn: 'wix.bookings.resources.v2.resource',
            method: 'GET',
            methodFqn: 'wix.bookings.resources.v2.ResourcesService.GetResource',
            packageName: PACKAGE_NAME,
            url: resolveWixBookingsResourcesV2ResourcesServiceUrl({
                protoPath: '/v2/resources/{resourceId}',
                data: payload,
                host,
            }),
            params: (0, rest_modules_1.toURLSearchParams)(payload),
            transformResponse: (payload) => (0, transform_paths_1.transformPaths)(payload, [
                {
                    transformFn: timestamp_2.transformRESTTimestampToSDKTimestamp,
                    paths: [
                        { path: 'resource.createdDate' },
                        { path: 'resource.updatedDate' },
                    ],
                },
            ]),
        };
        return metadata;
    }
    return __getResource;
}
exports.getResource = getResource;
/**
 * Updates a resource.
 *
 *
 * Each time the resource is updated, `revision` increments by 1. You must include the current revision of the resource when updating it.
 * This ensures you're working with the latest service information and prevents unintended overwrites.
 */
function updateResource(payload) {
    function __updateResource({ host }) {
        const serializedData = (0, transform_paths_1.transformPaths)(payload, [
            {
                transformFn: field_mask_1.transformSDKFieldMaskToRESTFieldMask,
                paths: [{ path: 'mask' }],
            },
            {
                transformFn: timestamp_1.transformSDKTimestampToRESTTimestamp,
                paths: [
                    { path: 'resource.createdDate' },
                    { path: 'resource.updatedDate' },
                ],
            },
        ]);
        const metadata = {
            entityFqdn: 'wix.bookings.resources.v2.resource',
            method: 'PATCH',
            methodFqn: 'wix.bookings.resources.v2.ResourcesService.UpdateResource',
            packageName: PACKAGE_NAME,
            url: resolveWixBookingsResourcesV2ResourcesServiceUrl({
                protoPath: '/v2/resources/{resource.id}',
                data: serializedData,
                host,
            }),
            data: serializedData,
            transformResponse: (payload) => (0, transform_paths_1.transformPaths)(payload, [
                {
                    transformFn: timestamp_2.transformRESTTimestampToSDKTimestamp,
                    paths: [
                        { path: 'resource.createdDate' },
                        { path: 'resource.updatedDate' },
                    ],
                },
            ]),
        };
        return metadata;
    }
    return __updateResource;
}
exports.updateResource = updateResource;
/**
 * Deletes a resource.
 *
 *
 * Deleting a resource cancels its event schedule and all its working hour
 * schedules that aren't shared with another resource. Learn more about
 * _how Bookings uses the Calendar APIs_
 * ([SDK](https://dev.wix.com/docs/sdk/backend-modules/calendar/wix-bookings-integration) | [REST](https://dev.wix.com/docs/rest/business-management/calendar/wix-bookings-integration)).
 */
function deleteResource(payload) {
    function __deleteResource({ host }) {
        const metadata = {
            entityFqdn: 'wix.bookings.resources.v2.resource',
            method: 'DELETE',
            methodFqn: 'wix.bookings.resources.v2.ResourcesService.DeleteResource',
            packageName: PACKAGE_NAME,
            url: resolveWixBookingsResourcesV2ResourcesServiceUrl({
                protoPath: '/v2/resources/{resourceId}',
                data: payload,
                host,
            }),
            params: (0, rest_modules_1.toURLSearchParams)(payload),
        };
        return metadata;
    }
    return __deleteResource;
}
exports.deleteResource = deleteResource;
/**
 * Deletes multiple resources.
 *
 *
 * Refer to *Delete Resource*
 * ([SDK](https://dev.wix.com/docs/sdk/backend-modules/bookings/resources/delete-resource) | [REST](https://dev.wix.com/docs/rest/business-solutions/bookings/resources/resources-v2/delete-resource))
 * for more details.
 */
function bulkDeleteResources(payload) {
    function __bulkDeleteResources({ host }) {
        const metadata = {
            entityFqdn: 'wix.bookings.resources.v2.resource',
            method: 'POST',
            methodFqn: 'wix.bookings.resources.v2.ResourcesService.BulkDeleteResources',
            packageName: PACKAGE_NAME,
            url: resolveWixBookingsResourcesV2ResourcesServiceUrl({
                protoPath: '/v2/bulk/resources/delete',
                data: payload,
                host,
            }),
            data: payload,
            transformResponse: (payload) => (0, transform_paths_1.transformPaths)(payload, [
                {
                    transformFn: timestamp_2.transformRESTTimestampToSDKTimestamp,
                    paths: [
                        { path: 'results.item.createdDate' },
                        { path: 'results.item.updatedDate' },
                    ],
                },
            ]),
        };
        return metadata;
    }
    return __bulkDeleteResources;
}
exports.bulkDeleteResources = bulkDeleteResources;
/**
 * Retrieves a list of resources matching the provided search criteria.
 *
 *
 * Refer to the *supported filters article*
 * ([SDK](https://dev.wix.com/docs/sdk/backend-modules/bookings/resources/supported-filters) | [REST](https://dev.wix.com/docs/rest/business-solutions/bookings/resources/resources-v2/filtering-and-sorting))
 * for a complete list of supported filters and sorting options.
 */
function searchResources(payload) {
    function __searchResources({ host }) {
        const serializedData = (0, transform_paths_1.transformPaths)(payload, [
            {
                transformFn: float_1.transformSDKFloatToRESTFloat,
                paths: [
                    { path: 'search.aggregations.range.buckets.from' },
                    { path: 'search.aggregations.range.buckets.to' },
                    {
                        path: 'search.aggregations.nested.nestedAggregations.range.buckets.from',
                    },
                    {
                        path: 'search.aggregations.nested.nestedAggregations.range.buckets.to',
                    },
                ],
            },
        ]);
        const metadata = {
            entityFqdn: 'wix.bookings.resources.v2.resource',
            method: 'POST',
            methodFqn: 'wix.bookings.resources.v2.ResourcesService.SearchResources',
            packageName: PACKAGE_NAME,
            url: resolveWixBookingsResourcesV2ResourcesServiceUrl({
                protoPath: '/v2/resources/search',
                data: serializedData,
                host,
            }),
            data: serializedData,
            transformResponse: (payload) => (0, transform_paths_1.transformPaths)(payload, [
                {
                    transformFn: timestamp_2.transformRESTTimestampToSDKTimestamp,
                    paths: [
                        { path: 'resources.createdDate' },
                        { path: 'resources.updatedDate' },
                    ],
                },
                {
                    transformFn: float_2.transformRESTFloatToSDKFloat,
                    paths: [
                        { path: 'aggregationData.results.ranges.results.from' },
                        { path: 'aggregationData.results.ranges.results.to' },
                        {
                            path: 'aggregationData.results.groupedByValue.results.nestedResults.ranges.results.from',
                        },
                        {
                            path: 'aggregationData.results.groupedByValue.results.nestedResults.ranges.results.to',
                        },
                        {
                            path: 'aggregationData.results.nested.results.results.*.range.from',
                        },
                        {
                            path: 'aggregationData.results.nested.results.results.*.range.to',
                        },
                        { path: 'aggregationData.results.scalar.value' },
                        {
                            path: 'aggregationData.results.groupedByValue.results.nestedResults.scalar.value',
                        },
                        {
                            path: 'aggregationData.results.nested.results.results.*.scalar.value',
                        },
                    ],
                },
            ]),
        };
        return metadata;
    }
    return __searchResources;
}
exports.searchResources = searchResources;
/**
 * Creates a query to retrieve a list of resources.
 *
 * The `queryResources()` function builds a query to retrieve a list of resources and returns a `ResourcesQueryBuilder` object.
 *
 * The returned object contains the query definition, which is typically used to run the query using the [find()](https://dev.wix.com/docs/sdk/backend-modules/bookings/resources/resources-query-builder/find) function.
 *
 * You can refine the query by chaining `ResourcesQueryBuilder` functions onto the query. `ResourcesQueryBuilder` functions enable you to sort, filter, and control the results that `queryResources()` returns.
 *
 * `queryResources()` runs with the following `ResourcesQueryBuilder` default that you can override:
 *
 * + `limit` is `50`.
 * + Sorted by `id` in ascending order.
 *
 * The functions that are chained to `queryResources()` are applied in the order they are called. For example, if you apply `ascending("typeId")` and then `ascending("name")`, the results are sorted first by the `"typeId"`, and then, if there are multiple results with the same `"typeId"`, the items are sorted by `"name"`.
 *
 * The following `ResourcesQueryBuilder` functions are supported for the `queryResources()` function. For a full description of the resource object, see the object returned for the [items](https://dev.wix.com/docs/sdk/backend-modules/bookings/resources/resources-query-result/items) property in `ResourcesQueryResult`.
 */
function queryResources(payload) {
    function __queryResources({ host }) {
        const metadata = {
            entityFqdn: 'wix.bookings.resources.v2.resource',
            method: 'POST',
            methodFqn: 'wix.bookings.resources.v2.ResourcesService.QueryResources',
            packageName: PACKAGE_NAME,
            url: resolveWixBookingsResourcesV2ResourcesServiceUrl({
                protoPath: '/v2/resources/query',
                data: payload,
                host,
            }),
            data: payload,
            transformResponse: (payload) => (0, transform_paths_1.transformPaths)(payload, [
                {
                    transformFn: timestamp_2.transformRESTTimestampToSDKTimestamp,
                    paths: [
                        { path: 'resources.createdDate' },
                        { path: 'resources.updatedDate' },
                    ],
                },
            ]),
        };
        return metadata;
    }
    return __queryResources;
}
exports.queryResources = queryResources;
/**
 * Counts resources according to given criteria.
 *
 *
 * Refer to the *supported filters article*
 * ([SDK](https://dev.wix.com/docs/sdk/backend-modules/bookings/resources/supported-filters) | [REST](https://dev.wix.com/docs/rest/business-solutions/bookings/resources/resources-v2/filtering-and-sorting))
 * for a complete list of supported filters and sorting options.
 */
function countResources(payload) {
    function __countResources({ host }) {
        const metadata = {
            entityFqdn: 'wix.bookings.resources.v2.resource',
            method: 'POST',
            methodFqn: 'wix.bookings.resources.v2.ResourcesService.CountResources',
            packageName: PACKAGE_NAME,
            url: resolveWixBookingsResourcesV2ResourcesServiceUrl({
                protoPath: '/v2/resources/count',
                data: payload,
                host,
            }),
            data: payload,
        };
        return metadata;
    }
    return __countResources;
}
exports.countResources = countResources;
//# sourceMappingURL=bookings-resources-v2-resource-resources.http.js.map