import { RequestOptionsFactory } from '@wix/sdk-types';
/** Retrieves attendance information. */
export declare function getAttendance(payload: object): RequestOptionsFactory<any>;
/**
 * Sets or updates attendance information for a booking session. This
 * information is stored in an `attendance` object.
 *
 * If an `attendance` object already exists for the session, it's updated.
 * Otherwise, a new object is created.
 *
 * By default, `numberOfAttendees` is set to `1`, but you can specify a higher
 * number if multiple participants attended. Do not set `numberOfAttendees` to
 * `0` to indicate no attendance, instead specify `{"status": "NOT_ATTENDED"}`.
 *
 * Validation guidelines:
 *
 * + The call succeeds for mismatches between `numberOfAttendees`
 * and `status`. For example, make sure that your code doesn't specify
 * `{"status": "NOT_ATTENDED"}` with `{"numberOfAttendees": 5}`.
 * + The API also allows `numberOfAttendees` to exceed the booking's
 * `numberOfParticipants`. Use higher values only when scenarios like
 * walk-ins justify the exception.
 */
export declare function setAttendance(payload: object): RequestOptionsFactory<any>;
/**
 * Sets or updates attendance information for multiple booking sessions.
 *
 *
 * Refer to Set Attendance for detailed behavior of individual attendance
 * entries.
 *
 * The call fails entirely if any entry in `attendanceDetails` is missing a
 * required field.
 *
 * If attendance details are provided for a non-existent session, the call
 * succeeds for valid sessions while marking the unavailable session as a
 * failure in the response.
 */
export declare function bulkSetAttendance(payload: object): RequestOptionsFactory<any>;
/**
 * Creates a query to retrieve a list of attendances.
 *
 * The `queryAttendances()` function builds a query to retrieve a list of attendances and returns a `AttendancesQueryBuilder` object.
 *
 * The returned object contains the query definition, which is typically used to call the query using the [find()](https://dev.wix.com/docs/sdk/backend-modules/bookings/attendance/attendances-query-builder/find) function.
 *
 * You can refine the query by chaining `AttendancesQueryBuilder` functions onto the query. `AttendancesQueryBuilder` functions enable you to sort, filter, and control the results that `queryAttendances()` returns.
 *
 * `queryAttendances()` uses the following `AttendancesQueryBuilder` default values that you can override:
 *
 * + `limit` is `50`.
 * + Sorted by `id` in ascending order.
 *
 * The functions that are chained to `queryAttendances()` are applied in the order they are called. For example, if you apply `ascending("status")` and then `ascending("numberOfAttendees")`, the results are sorted first by the `"status"`, and then, if there are multiple results with the same `"status"`, the items are sorted by `"numberOfAttendees"`.
 *
 * The following `AttendancesQueryBuilder` functions are supported for the `queryAttendances()` function. For a full description of the tip settings object, see the object returned for the [items](https://dev.wix.com/docs/sdk/backend-modules/bookings/attendance/attendances-query-result/items) property in `AttendancesQueryResult`.
 */
export declare function queryAttendance(payload: object): RequestOptionsFactory<any>;
