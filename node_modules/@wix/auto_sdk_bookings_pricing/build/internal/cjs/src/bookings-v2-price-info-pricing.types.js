"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.IdentityType = exports.Actor = exports.Platform = exports.SelectedPaymentOption = exports.PaymentStatus = exports.BookingStatus = exports.ValueType = exports.LocationType = exports.MultiServiceBookingType = void 0;
/**
 * A multi-service booking is considered available if all individual bookings are available as returned from List Multi Service Availability Time Slots.
 * Currently, `SEPARATE_BOOKINGS` and `PARALLEL_BOOKINGS` are not supported.
 * Multi-service booking is available if each of its bookings is available separately.
 * For `SEQUENTIAL_BOOKINGS`, see `List Multi Service Availability Time Slots` documentation.
 */
var MultiServiceBookingType;
(function (MultiServiceBookingType) {
    MultiServiceBookingType["SEQUENTIAL_BOOKINGS"] = "SEQUENTIAL_BOOKINGS";
    MultiServiceBookingType["SEPARATE_BOOKINGS"] = "SEPARATE_BOOKINGS";
    MultiServiceBookingType["PARALLEL_BOOKINGS"] = "PARALLEL_BOOKINGS";
})(MultiServiceBookingType || (exports.MultiServiceBookingType = MultiServiceBookingType = {}));
var LocationType;
(function (LocationType) {
    LocationType["UNDEFINED"] = "UNDEFINED";
    LocationType["OWNER_BUSINESS"] = "OWNER_BUSINESS";
    LocationType["OWNER_CUSTOM"] = "OWNER_CUSTOM";
    LocationType["CUSTOM"] = "CUSTOM";
})(LocationType || (exports.LocationType = LocationType = {}));
var ValueType;
(function (ValueType) {
    /** Short text. This is the default value type. */
    ValueType["SHORT_TEXT"] = "SHORT_TEXT";
    /** Long text. */
    ValueType["LONG_TEXT"] = "LONG_TEXT";
    /** A text that represents the check box value. If selected the value is `true`, otherwise `false`. */
    ValueType["CHECK_BOX"] = "CHECK_BOX";
})(ValueType || (exports.ValueType = ValueType = {}));
/** Booking status. */
var BookingStatus;
(function (BookingStatus) {
    /**
     * The booking was created, but the customer hasn't completed the related
     * eCommerce order yet.
     */
    BookingStatus["CREATED"] = "CREATED";
    /**
     * The merchant has confirmed the booking and it appears in the
     * business calendar. Merchants can set up their *services*
     * ([SDK](https://dev.wix.com/docs/sdk/backend-modules/bookings/services/setup) | [REST](https://dev.wix.com/docs/rest/business-solutions/bookings/services/services-v2/introduction))
     * to automatically confirm all `PENDING` bookings.
     */
    BookingStatus["CONFIRMED"] = "CONFIRMED";
    /**
     * The customer has canceled the booking. Depending on the relevant service's
     * _policy snapshot_
     * ([SDK](https://dev.wix.com/docs/sdk/backend-modules/bookings/booking-policy-snapshots/introduction) | [REST](https://dev.wix.com/docs/rest/business-solutions/bookings/policies/booking-policy-snapshots/introduction))
     * they may have to pay a _cancellation fee_
     * ([SDK](https://dev.wix.com/docs/sdk/backend-modules/bookings/booking-fees/introduction) | [REST](https://dev.wix.com/docs/rest/business-solutions/bookings/pricing/booking-fees/introduction)).
     */
    BookingStatus["CANCELED"] = "CANCELED";
    /**
     * The merchant must manually confirm the booking before it appears
     * in the business calendar.
     */
    BookingStatus["PENDING"] = "PENDING";
    /** The merchant has declined the booking before the customer was charged. */
    BookingStatus["DECLINED"] = "DECLINED";
    /**
     * The booking is on a waitlist.
     * Currently, you can't call Register to Waitlist
     * ([REST](https://dev.wix.com/docs/rest/business-solutions/bookings/bookings/waitlist/register-to-waitlist))
     * for course or appointment bookings, even though this is supported in live sites.
     * You can call Register to Waitlist only for class session bookings.
     */
    BookingStatus["WAITING_LIST"] = "WAITING_LIST";
})(BookingStatus || (exports.BookingStatus = BookingStatus = {}));
/**
 * Payment status.
 * Automatically updated when using eCommerce checkout APIs.
 */
var PaymentStatus;
(function (PaymentStatus) {
    /** Undefined payment status. */
    PaymentStatus["UNDEFINED"] = "UNDEFINED";
    /** The booking isn't paid. */
    PaymentStatus["NOT_PAID"] = "NOT_PAID";
    /** The booking is fully paid. */
    PaymentStatus["PAID"] = "PAID";
    /** The booking is partially paid. */
    PaymentStatus["PARTIALLY_PAID"] = "PARTIALLY_PAID";
    /** The booking is refunded. */
    PaymentStatus["REFUNDED"] = "REFUNDED";
    /** The booking is free of charge. */
    PaymentStatus["EXEMPT"] = "EXEMPT";
})(PaymentStatus || (exports.PaymentStatus = PaymentStatus = {}));
/**
 * Selected payment option.
 *
 * One of the payment options offered by the service.
 * This field is set when the user selects an option during booking.
 * If left undefined, the payment option is resolved by the service configuration on checkout.
 */
var SelectedPaymentOption;
(function (SelectedPaymentOption) {
    /** Undefined payment option. */
    SelectedPaymentOption["UNDEFINED"] = "UNDEFINED";
    /** Offline payment. */
    SelectedPaymentOption["OFFLINE"] = "OFFLINE";
    /** Online payment. */
    SelectedPaymentOption["ONLINE"] = "ONLINE";
    /** Payment using a Wix Pricing Plan. */
    SelectedPaymentOption["MEMBERSHIP"] = "MEMBERSHIP";
    /**
     * Customers can pay only in person with a Wix Pricing Plan, while the Wix user
     * must manually redeem the pricing plan in the dashboard.
     */
    SelectedPaymentOption["MEMBERSHIP_OFFLINE"] = "MEMBERSHIP_OFFLINE";
})(SelectedPaymentOption || (exports.SelectedPaymentOption = SelectedPaymentOption = {}));
var Platform;
(function (Platform) {
    Platform["UNDEFINED_PLATFORM"] = "UNDEFINED_PLATFORM";
    Platform["WEB"] = "WEB";
    Platform["MOBILE_APP"] = "MOBILE_APP";
})(Platform || (exports.Platform = Platform = {}));
var Actor;
(function (Actor) {
    Actor["UNDEFINED_ACTOR"] = "UNDEFINED_ACTOR";
    Actor["BUSINESS"] = "BUSINESS";
    Actor["CUSTOMER"] = "CUSTOMER";
})(Actor || (exports.Actor = Actor = {}));
var IdentityType;
(function (IdentityType) {
    IdentityType["UNKNOWN"] = "UNKNOWN";
    IdentityType["ANONYMOUS_VISITOR"] = "ANONYMOUS_VISITOR";
    IdentityType["MEMBER"] = "MEMBER";
    IdentityType["WIX_USER"] = "WIX_USER";
    IdentityType["APP"] = "APP";
})(IdentityType || (exports.IdentityType = IdentityType = {}));
//# sourceMappingURL=bookings-v2-price-info-pricing.types.js.map