import { toURLSearchParams } from '@wix/sdk-runtime/rest-modules';
import { resolveUrl } from '@wix/sdk-runtime/rest-modules';
function resolveComWixpressBookingsAvailabilityAvailabilityCalendarUrl(opts) {
    const domainToMappings = {
        'api._api_base_domain_': [
            {
                srcPath: '/availability-calendar',
                destPath: '',
            },
        ],
        _: [
            {
                srcPath: '/_api/availability-calendar/v1/availability/query',
                destPath: '/v1/availability/query',
            },
            {
                srcPath: '/_api/availability-calendar/v2/availability/schedule',
                destPath: '/v2/availability/schedule',
            },
            {
                srcPath: '/_api/availability-calendar/v1/availability/multislot',
                destPath: '/v1/availability/multislot',
            },
        ],
        '*.dev.wix-code.com': [
            {
                srcPath: '/_api/availability-calendar/v1/availability/query',
                destPath: '/v1/availability/query',
            },
            {
                srcPath: '/_api/availability-calendar/v1/availability/multislot',
                destPath: '/v1/availability/multislot',
            },
        ],
        'editor._base_domain_': [
            {
                srcPath: '/_api/availability-calendar/v1/availability/query',
                destPath: '/v1/availability/query',
            },
            {
                srcPath: '/_api/availability-calendar/v1/availability/multislot',
                destPath: '/v1/availability/multislot',
            },
            {
                srcPath: '/v1/availability/multislot',
                destPath: '/v1/availability/multislot',
            },
        ],
        'blocks._base_domain_': [
            {
                srcPath: '/_api/availability-calendar/v1/availability/query',
                destPath: '/v1/availability/query',
            },
            {
                srcPath: '/_api/availability-calendar/v1/availability/multislot',
                destPath: '/v1/availability/multislot',
            },
            {
                srcPath: '/v1/availability/multislot',
                destPath: '/v1/availability/multislot',
            },
        ],
        'create.editorx': [
            {
                srcPath: '/_api/availability-calendar/v1/availability/query',
                destPath: '/v1/availability/query',
            },
            {
                srcPath: '/_api/availability-calendar/v1/availability/multislot',
                destPath: '/v1/availability/multislot',
            },
            {
                srcPath: '/v1/availability/multislot',
                destPath: '/v1/availability/multislot',
            },
        ],
        'editor.wixapps.net': [
            {
                srcPath: '/_api/availability-calendar/v1/availability/query',
                destPath: '/v1/availability/query',
            },
        ],
        'editor-flow.wixapps.net': [
            {
                srcPath: '/_api/availability-calendar/v1/availability/query',
                destPath: '/v1/availability/query',
            },
        ],
        'www.wixapis.com': [
            {
                srcPath: '/availability-calendar/v1/availability/query',
                destPath: '/v1/availability/query',
            },
            {
                srcPath: '/bookings/availability-calendar/v1/availability/query',
                destPath: '/v1/availability/query',
            },
            {
                srcPath: '/bookings/v1/availability/query',
                destPath: '/v1/availability/query',
            },
        ],
        'manage._base_domain_': [
            {
                srcPath: '/_api/availability-calendar/v1/availability/query',
                destPath: '/v1/availability/query',
            },
            {
                srcPath: '/_api/availability-calendar',
                destPath: '',
            },
            {
                srcPath: '/_api/availability-calendar/v2/availability/schedule',
                destPath: '/v2/availability/schedule',
            },
        ],
        'www._base_domain_': [
            {
                srcPath: '/_api/availability-calendar/v1/availability/query',
                destPath: '/v1/availability/query',
            },
            {
                srcPath: '/_api/availability-calendar/v1/availability/multislot',
                destPath: '/v1/availability/multislot',
            },
        ],
        'bookings.wixapps.net': [
            {
                srcPath: '/_api/availability-calendar/v1/availability/query',
                destPath: '/v1/availability/query',
            },
        ],
        'bo._base_domain_': [
            {
                srcPath: '/_api/availability-calendar/v1/availability/query',
                destPath: '/v1/availability/query',
            },
        ],
        'wixbo.ai': [
            {
                srcPath: '/_api/availability-calendar/v1/availability/query',
                destPath: '/v1/availability/query',
            },
        ],
        'wix-bo.com': [
            {
                srcPath: '/_api/availability-calendar/v1/availability/query',
                destPath: '/v1/availability/query',
            },
        ],
    };
    return resolveUrl(Object.assign(opts, { domainToMappings }));
}
const PACKAGE_NAME = '@wix/auto_sdk_bookings_availability-calendar';
/**
 * Retrieves appointment slots or class events that match specified filters.
 *
 * <blockquote>
 *
 * Query Availability doesn't use a query builder, instead it uses
 * [API query language](https://dev.wix.com/docs/sdk/articles/work-with-the-sdk/api-query-language).
 *
 * </blockquote>
 *
 * ## Course limitations
 *
 * Course events can't be retrieved with this method. Follow this
 * *sample flow* ([SDK](https://dev.wix.com/docs/sdk/backend-modules/bookings/bookings/sample-flows#backend-modules_bookings_bookings_book-a-course) | [REST](https://dev.wix.com/docs/rest/business-solutions/bookings/sample-booking-flows#book-a-course))
 * to check course availability.
 *
 * ## Query filter
 *
 * You must include `serviceId` in your query filter. For performance, also specify
 * both `startDate` and `endDate`. Refer to the
 * *supported filters article* ([SDK](https://dev.wix.com/docs/sdk/backend-modules/bookings/availability-calendar/supported-filters-and-sorting) | [REST](https://dev.wix.com/docs/rest/business-solutions/bookings/time-slots/availability-calendar/supported-fields-filters-and-sorting))
 * for a complete list of supported filters.
 *
 * ## Limit the number of slots returned per day
 *
 * To limit the maximum number of appointment slots returned for each date,
 * specify `slotsPerDay`. For example,  specifying `{"slotsPerDay": 3}` returns
 * a maximum of 3 appointment slots/class events for each day that's within the query
 * filter's date range.
 *
 * ## Unavailable slots
 *
 * By default, both available and unavailable appointment slots/ class events
 * are returned. To retrieve only available slots/events, specify
 * `{"bookable": true}` in the filter.
 *
 * ## Sorting
 *
 * Slots/events can be sorted only by `startDate`. Unavailable slots/events
 * always appear after available ones.
 *
 * ## Availability calculation
 *
 * Wix Bookings calculates availability differently for appointment-based
 * services and classes.
 *
 * ### Appointment availability
 *
 * An appointment slot is `bookable` if:
 * - The slot's `startDate` is later than or equal to `query.filter.startDate`.
 * - The slot's `endDate` is before or equal to `query.filter.endDate`.
 * - The service's `onlineBooking.enabled` is `true`.
 * - The service's early/late booking policies are either not enabled or the
 *   current time is within the defined limits.
 *
 * ### Class event availability
 *
 * A class event is `bookable` if:
 * - The event's `startDate` is later than or equal to `query.filter.startDate`.
 * - The event's `endDate` is before or equal to `query.filter.endDate`.
 * - The event's `remainingCapacity` is greater than `0`.
 * - The service's `onlineBooking.enabled` is `true`.
 * - The service's early/late booking policies are either not enabled or the
 *   current time is within the defined limits.
 *
 * If you want to restrict returned class events to those with a minimum number
 * of remaining spots, specify `openSpots` in the filter. By default, all class
 * events, even those with no open spot, are returned.
 *
 * ## Daylight Savings Time (DST)
 *
 * Due to DST, some local times may not exist or may occur twice. For example,
 * in Santiago, Chile, on September 7, 2025, 0:05 AM doesn't exist because the
 * clock advances from 0:00 AM to 1:00 AM.
 *
 * *Query Availability* automatically adjusts for these gaps. Non-existent times
 * are moved forward by 1 hour, while existing times remain unchanged. For
 * instance, if you call *Query Availability* with a `startDate` of
 * `2025-09-07T00:00:01.000` and an `endDate` of `2025-09-08T00:00:02.000`, the
 * adjusted query will use `2025-09-07T01:00:01.000` as the new start time.
 */
export function queryAvailability(payload) {
    function __queryAvailability({ host }) {
        const metadata = {
            entityFqdn: 'wix.bookings.availability.v1.slot_availability',
            method: 'POST',
            methodFqn: 'com.wixpress.bookings.availability.AvailabilityCalendar.QueryAvailability',
            packageName: PACKAGE_NAME,
            url: resolveComWixpressBookingsAvailabilityAvailabilityCalendarUrl({
                protoPath: '/v1/availability/query',
                data: payload,
                host,
            }),
            data: payload,
        };
        return metadata;
    }
    return __queryAvailability;
}
/**
 * Returns availability for a given schedule ID
 * The availability for a course is calculated by:
 * - Checking for total spots by the schedule's capacity
 * - Checking for open spots by subtracting the current number of participants from the total spots
 * current number of participants is calculated by summing the number of participants of all bookings booked to the schedule
 * @deprecated
 */
export function getScheduleAvailability(payload) {
    function __getScheduleAvailability({ host }) {
        const metadata = {
            entityFqdn: 'wix.bookings.availability.v1.slot_availability',
            method: 'GET',
            methodFqn: 'com.wixpress.bookings.availability.AvailabilityCalendar.GetScheduleAvailability',
            packageName: PACKAGE_NAME,
            url: resolveComWixpressBookingsAvailabilityAvailabilityCalendarUrl({
                protoPath: '/v2/availability/schedule/{scheduleId}',
                data: payload,
                host,
            }),
            params: toURLSearchParams(payload),
        };
        return metadata;
    }
    return __getScheduleAvailability;
}
export function calculateMultiSlotAvailability(payload) {
    function __calculateMultiSlotAvailability({ host }) {
        const metadata = {
            entityFqdn: 'wix.bookings.availability.v1.slot_availability',
            method: 'POST',
            methodFqn: 'com.wixpress.bookings.availability.AvailabilityCalendar.CalculateMultiSlotAvailability',
            packageName: PACKAGE_NAME,
            url: resolveComWixpressBookingsAvailabilityAvailabilityCalendarUrl({
                protoPath: '/v1/availability/multislot',
                data: payload,
                host,
            }),
            data: payload,
        };
        return metadata;
    }
    return __calculateMultiSlotAvailability;
}
//# sourceMappingURL=bookings-availability-v1-slot-availability-availability-calendar.http.js.map