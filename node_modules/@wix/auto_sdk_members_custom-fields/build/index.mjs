// src/members-v1-custom-field-custom-fields.universal.ts
import { transformError as sdkTransformError } from "@wix/sdk-runtime/transform-error";
import {
  renameKeysFromSDKRequestToRESTRequest,
  renameKeysFromRESTResponseToSDKResponse
} from "@wix/sdk-runtime/rename-all-nested-keys";

// src/members-v1-custom-field-custom-fields.http.ts
import { toURLSearchParams } from "@wix/sdk-runtime/rest-modules";
import { transformSDKTimestampToRESTTimestamp } from "@wix/sdk-runtime/transformations/timestamp";
import { transformRESTTimestampToSDKTimestamp } from "@wix/sdk-runtime/transformations/timestamp";
import { transformPaths } from "@wix/sdk-runtime/transformations/transform-paths";
import { resolveUrl } from "@wix/sdk-runtime/rest-modules";
function resolveComWixpressMembersCustomfieldsCustomFieldsUrl(opts) {
  const domainToMappings = {
    "manage._base_domain_": [
      {
        srcPath: "/_api/members/v1/custom-fields",
        destPath: "/v1/custom-fields"
      }
    ],
    _: [
      {
        srcPath: "/_api/members/v1/custom-fields",
        destPath: "/v1/custom-fields"
      }
    ],
    "www._base_domain_": [
      {
        srcPath: "/_api/members/v1/custom-fields",
        destPath: "/v1/custom-fields"
      }
    ],
    "www.wixapis.com": [
      {
        srcPath: "/members/v1/custom-fields",
        destPath: "/v1/custom-fields"
      }
    ],
    "editor-flow.wixapps.net": [
      {
        srcPath: "/_api/members/v1/custom-fields",
        destPath: "/v1/custom-fields"
      }
    ],
    "api._api_base_domain_": [
      {
        srcPath: "/members/v1/custom-fields",
        destPath: ""
      }
    ],
    "editor.wixapps.net": [
      {
        srcPath: "/_api/members/v1/custom-fields",
        destPath: "/v1/custom-fields"
      }
    ]
  };
  return resolveUrl(Object.assign(opts, { domainToMappings }));
}
var PACKAGE_NAME = "@wix/auto_sdk_members_custom-fields";
function createCustomField(payload) {
  function __createCustomField({ host }) {
    const serializedData = transformPaths(payload, [
      {
        transformFn: transformSDKTimestampToRESTTimestamp,
        paths: [{ path: "field.createdDate" }, { path: "field.updatedDate" }]
      }
    ]);
    const metadata = {
      entityFqdn: "wix.members.v1.custom_field",
      method: "POST",
      methodFqn: "com.wixpress.members.customfields.CustomFields.CreateCustomField",
      packageName: PACKAGE_NAME,
      url: resolveComWixpressMembersCustomfieldsCustomFieldsUrl({
        protoPath: "/v1/custom-fields",
        data: serializedData,
        host
      }),
      data: serializedData,
      transformResponse: (payload2) => transformPaths(payload2, [
        {
          transformFn: transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "field.createdDate" },
            { path: "field.updatedDate" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __createCustomField;
}
function getCustomField(payload) {
  function __getCustomField({ host }) {
    const metadata = {
      entityFqdn: "wix.members.v1.custom_field",
      method: "GET",
      methodFqn: "com.wixpress.members.customfields.CustomFields.GetCustomField",
      packageName: PACKAGE_NAME,
      url: resolveComWixpressMembersCustomfieldsCustomFieldsUrl({
        protoPath: "/v1/custom-fields/{id}",
        data: payload,
        host
      }),
      params: toURLSearchParams(payload),
      transformResponse: (payload2) => transformPaths(payload2, [
        {
          transformFn: transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "field.createdDate" },
            { path: "field.updatedDate" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __getCustomField;
}
function listCustomFields(payload) {
  function __listCustomFields({ host }) {
    const metadata = {
      entityFqdn: "wix.members.v1.custom_field",
      method: "GET",
      methodFqn: "com.wixpress.members.customfields.CustomFields.ListCustomFields",
      packageName: PACKAGE_NAME,
      url: resolveComWixpressMembersCustomfieldsCustomFieldsUrl({
        protoPath: "/v1/custom-fields",
        data: payload,
        host
      }),
      params: toURLSearchParams(payload),
      transformResponse: (payload2) => transformPaths(payload2, [
        {
          transformFn: transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "fields.createdDate" },
            { path: "fields.updatedDate" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __listCustomFields;
}
function updateCustomField(payload) {
  function __updateCustomField({ host }) {
    const serializedData = transformPaths(payload, [
      {
        transformFn: transformSDKTimestampToRESTTimestamp,
        paths: [{ path: "field.createdDate" }, { path: "field.updatedDate" }]
      }
    ]);
    const metadata = {
      entityFqdn: "wix.members.v1.custom_field",
      method: "PATCH",
      methodFqn: "com.wixpress.members.customfields.CustomFields.UpdateCustomField",
      packageName: PACKAGE_NAME,
      url: resolveComWixpressMembersCustomfieldsCustomFieldsUrl({
        protoPath: "/v1/custom-fields/{field.id}",
        data: serializedData,
        host
      }),
      data: serializedData,
      transformResponse: (payload2) => transformPaths(payload2, [
        {
          transformFn: transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "field.createdDate" },
            { path: "field.updatedDate" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __updateCustomField;
}
function deleteCustomField(payload) {
  function __deleteCustomField({ host }) {
    const metadata = {
      entityFqdn: "wix.members.v1.custom_field",
      method: "DELETE",
      methodFqn: "com.wixpress.members.customfields.CustomFields.DeleteCustomField",
      packageName: PACKAGE_NAME,
      url: resolveComWixpressMembersCustomfieldsCustomFieldsUrl({
        protoPath: "/v1/custom-fields/{id}",
        data: payload,
        host
      }),
      params: toURLSearchParams(payload)
    };
    return metadata;
  }
  return __deleteCustomField;
}
function hideCustomField(payload) {
  function __hideCustomField({ host }) {
    const metadata = {
      entityFqdn: "wix.members.v1.custom_field",
      method: "POST",
      methodFqn: "com.wixpress.members.customfields.CustomFields.HideCustomField",
      packageName: PACKAGE_NAME,
      url: resolveComWixpressMembersCustomfieldsCustomFieldsUrl({
        protoPath: "/v1/custom-fields/{id}/hide",
        data: payload,
        host
      }),
      data: payload
    };
    return metadata;
  }
  return __hideCustomField;
}
function updateCustomFieldsOrder(payload) {
  function __updateCustomFieldsOrder({ host }) {
    const metadata = {
      entityFqdn: "wix.members.v1.custom_field",
      method: "POST",
      methodFqn: "com.wixpress.members.customfields.CustomFields.UpdateCustomFieldsOrder",
      packageName: PACKAGE_NAME,
      url: resolveComWixpressMembersCustomfieldsCustomFieldsUrl({
        protoPath: "/v1/custom-fields/order",
        data: payload,
        host
      }),
      data: payload,
      transformResponse: (payload2) => transformPaths(payload2, [
        {
          transformFn: transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "fields.createdDate" },
            { path: "fields.updatedDate" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __updateCustomFieldsOrder;
}

// src/members-v1-custom-field-custom-fields.universal.ts
var Privacy = /* @__PURE__ */ ((Privacy2) => {
  Privacy2["UNKNOWN"] = "UNKNOWN";
  Privacy2["PUBLIC"] = "PUBLIC";
  Privacy2["PRIVATE"] = "PRIVATE";
  return Privacy2;
})(Privacy || {});
var Type = /* @__PURE__ */ ((Type2) => {
  Type2["UNKNOWN"] = "UNKNOWN";
  Type2["TEXT"] = "TEXT";
  Type2["NUMBER"] = "NUMBER";
  Type2["DATE"] = "DATE";
  Type2["URL"] = "URL";
  Type2["SOCIAL"] = "SOCIAL";
  return Type2;
})(Type || {});
var SocialTypeType = /* @__PURE__ */ ((SocialTypeType2) => {
  SocialTypeType2["UNKNOWN"] = "UNKNOWN";
  SocialTypeType2["FACEBOOK"] = "FACEBOOK";
  SocialTypeType2["INSTAGRAM"] = "INSTAGRAM";
  SocialTypeType2["LINKEDIN"] = "LINKEDIN";
  SocialTypeType2["TWITTER"] = "TWITTER";
  SocialTypeType2["YOUTUBE"] = "YOUTUBE";
  SocialTypeType2["PINTEREST"] = "PINTEREST";
  SocialTypeType2["TIKTOK"] = "TIKTOK";
  SocialTypeType2["DEVIANTART"] = "DEVIANTART";
  SocialTypeType2["SOUNDCLOUD"] = "SOUNDCLOUD";
  SocialTypeType2["TUMBLR"] = "TUMBLR";
  SocialTypeType2["VIMEO"] = "VIMEO";
  SocialTypeType2["VKONTAKTE"] = "VKONTAKTE";
  SocialTypeType2["ODNOKLASSNIKI"] = "ODNOKLASSNIKI";
  SocialTypeType2["OTHER"] = "OTHER";
  return SocialTypeType2;
})(SocialTypeType || {});
var Origin = /* @__PURE__ */ ((Origin2) => {
  Origin2["UNKNOWN"] = "UNKNOWN";
  Origin2["CUSTOM"] = "CUSTOM";
  Origin2["CONTACT"] = "CONTACT";
  Origin2["SYSTEM"] = "SYSTEM";
  return Origin2;
})(Origin || {});
var AppliesTo = /* @__PURE__ */ ((AppliesTo2) => {
  AppliesTo2["ALL_MEMBERS"] = "ALL_MEMBERS";
  AppliesTo2["SELECTED_MEMBERS"] = "SELECTED_MEMBERS";
  return AppliesTo2;
})(AppliesTo || {});
var Section = /* @__PURE__ */ ((Section2) => {
  Section2["GENERAL"] = "GENERAL";
  Section2["SOCIAL"] = "SOCIAL";
  Section2["DISPLAY_INFO"] = "DISPLAY_INFO";
  Section2["ADDRESS"] = "ADDRESS";
  return Section2;
})(Section || {});
var State = /* @__PURE__ */ ((State2) => {
  State2["UNKNOWN"] = "UNKNOWN";
  State2["ENABLED"] = "ENABLED";
  State2["DISABLED"] = "DISABLED";
  State2["PENDING"] = "PENDING";
  State2["DEMO"] = "DEMO";
  return State2;
})(State || {});
var SiteCreatedContext = /* @__PURE__ */ ((SiteCreatedContext2) => {
  SiteCreatedContext2["OTHER"] = "OTHER";
  SiteCreatedContext2["FROM_TEMPLATE"] = "FROM_TEMPLATE";
  SiteCreatedContext2["DUPLICATE_BY_SITE_TRANSFER"] = "DUPLICATE_BY_SITE_TRANSFER";
  SiteCreatedContext2["DUPLICATE"] = "DUPLICATE";
  SiteCreatedContext2["OLD_SITE_TRANSFER"] = "OLD_SITE_TRANSFER";
  SiteCreatedContext2["FLASH"] = "FLASH";
  return SiteCreatedContext2;
})(SiteCreatedContext || {});
var Namespace = /* @__PURE__ */ ((Namespace2) => {
  Namespace2["UNKNOWN_NAMESPACE"] = "UNKNOWN_NAMESPACE";
  Namespace2["WIX"] = "WIX";
  Namespace2["SHOUT_OUT"] = "SHOUT_OUT";
  Namespace2["ALBUMS"] = "ALBUMS";
  Namespace2["WIX_STORES_TEST_DRIVE"] = "WIX_STORES_TEST_DRIVE";
  Namespace2["HOTELS"] = "HOTELS";
  Namespace2["CLUBS"] = "CLUBS";
  Namespace2["ONBOARDING_DRAFT"] = "ONBOARDING_DRAFT";
  Namespace2["DEV_SITE"] = "DEV_SITE";
  Namespace2["LOGOS"] = "LOGOS";
  Namespace2["VIDEO_MAKER"] = "VIDEO_MAKER";
  Namespace2["PARTNER_DASHBOARD"] = "PARTNER_DASHBOARD";
  Namespace2["DEV_CENTER_COMPANY"] = "DEV_CENTER_COMPANY";
  Namespace2["HTML_DRAFT"] = "HTML_DRAFT";
  Namespace2["SITELESS_BUSINESS"] = "SITELESS_BUSINESS";
  Namespace2["CREATOR_ECONOMY"] = "CREATOR_ECONOMY";
  Namespace2["DASHBOARD_FIRST"] = "DASHBOARD_FIRST";
  Namespace2["ANYWHERE"] = "ANYWHERE";
  Namespace2["HEADLESS"] = "HEADLESS";
  Namespace2["ACCOUNT_MASTER_CMS"] = "ACCOUNT_MASTER_CMS";
  Namespace2["RISE"] = "RISE";
  Namespace2["BRANDED_FIRST"] = "BRANDED_FIRST";
  Namespace2["NOWNIA"] = "NOWNIA";
  Namespace2["UGC_TEMPLATE"] = "UGC_TEMPLATE";
  Namespace2["CODUX"] = "CODUX";
  Namespace2["MEDIA_DESIGN_CREATOR"] = "MEDIA_DESIGN_CREATOR";
  Namespace2["SHARED_BLOG_ENTERPRISE"] = "SHARED_BLOG_ENTERPRISE";
  Namespace2["STANDALONE_FORMS"] = "STANDALONE_FORMS";
  Namespace2["STANDALONE_EVENTS"] = "STANDALONE_EVENTS";
  Namespace2["MIMIR"] = "MIMIR";
  return Namespace2;
})(Namespace || {});
var DeleteStatus = /* @__PURE__ */ ((DeleteStatus2) => {
  DeleteStatus2["UNKNOWN"] = "UNKNOWN";
  DeleteStatus2["TRASH"] = "TRASH";
  DeleteStatus2["DELETED"] = "DELETED";
  DeleteStatus2["PENDING_PURGE"] = "PENDING_PURGE";
  DeleteStatus2["PURGED_EXTERNALLY"] = "PURGED_EXTERNALLY";
  return DeleteStatus2;
})(DeleteStatus || {});
var WebhookIdentityType = /* @__PURE__ */ ((WebhookIdentityType2) => {
  WebhookIdentityType2["UNKNOWN"] = "UNKNOWN";
  WebhookIdentityType2["ANONYMOUS_VISITOR"] = "ANONYMOUS_VISITOR";
  WebhookIdentityType2["MEMBER"] = "MEMBER";
  WebhookIdentityType2["WIX_USER"] = "WIX_USER";
  WebhookIdentityType2["APP"] = "APP";
  return WebhookIdentityType2;
})(WebhookIdentityType || {});
async function createCustomField2(field) {
  const { httpClient, sideEffects } = arguments[1];
  const payload = renameKeysFromSDKRequestToRESTRequest({ field });
  const reqOpts = createCustomField(payload);
  sideEffects?.onSiteCall?.();
  try {
    const result = await httpClient.request(reqOpts);
    sideEffects?.onSuccess?.(result);
    return renameKeysFromRESTResponseToSDKResponse(result.data)?.field;
  } catch (err) {
    const transformedError = sdkTransformError(
      err,
      {
        spreadPathsToArguments: {},
        explicitPathsToArguments: { field: "$[0]" },
        singleArgumentUnchanged: false
      },
      ["field"]
    );
    sideEffects?.onError?.(err);
    throw transformedError;
  }
}
async function getCustomField2(_id) {
  const { httpClient, sideEffects } = arguments[1];
  const payload = renameKeysFromSDKRequestToRESTRequest({ id: _id });
  const reqOpts = getCustomField(payload);
  sideEffects?.onSiteCall?.();
  try {
    const result = await httpClient.request(reqOpts);
    sideEffects?.onSuccess?.(result);
    return renameKeysFromRESTResponseToSDKResponse(result.data);
  } catch (err) {
    const transformedError = sdkTransformError(
      err,
      {
        spreadPathsToArguments: {},
        explicitPathsToArguments: { id: "$[0]" },
        singleArgumentUnchanged: false
      },
      ["_id"]
    );
    sideEffects?.onError?.(err);
    throw transformedError;
  }
}
async function listCustomFields2(options) {
  const { httpClient, sideEffects } = arguments[1];
  const payload = renameKeysFromSDKRequestToRESTRequest({
    paging: options?.paging
  });
  const reqOpts = listCustomFields(payload);
  sideEffects?.onSiteCall?.();
  try {
    const result = await httpClient.request(reqOpts);
    sideEffects?.onSuccess?.(result);
    return renameKeysFromRESTResponseToSDKResponse(result.data);
  } catch (err) {
    const transformedError = sdkTransformError(
      err,
      {
        spreadPathsToArguments: {},
        explicitPathsToArguments: { paging: "$[0].paging" },
        singleArgumentUnchanged: false
      },
      ["options"]
    );
    sideEffects?.onError?.(err);
    throw transformedError;
  }
}
async function updateCustomField2(_id, field) {
  const { httpClient, sideEffects } = arguments[2];
  const payload = renameKeysFromSDKRequestToRESTRequest({
    field: { ...field, id: _id }
  });
  const reqOpts = updateCustomField(payload);
  sideEffects?.onSiteCall?.();
  try {
    const result = await httpClient.request(reqOpts);
    sideEffects?.onSuccess?.(result);
    return renameKeysFromRESTResponseToSDKResponse(result.data)?.field;
  } catch (err) {
    const transformedError = sdkTransformError(
      err,
      {
        spreadPathsToArguments: { field: "$[1]" },
        explicitPathsToArguments: { "field.id": "$[0]" },
        singleArgumentUnchanged: false
      },
      ["_id", "field"]
    );
    sideEffects?.onError?.(err);
    throw transformedError;
  }
}
async function deleteCustomField2(_id, revision) {
  const { httpClient, sideEffects } = arguments[2];
  const payload = renameKeysFromSDKRequestToRESTRequest({
    id: _id,
    revision
  });
  const reqOpts = deleteCustomField(payload);
  sideEffects?.onSiteCall?.();
  try {
    const result = await httpClient.request(reqOpts);
    sideEffects?.onSuccess?.(result);
  } catch (err) {
    const transformedError = sdkTransformError(
      err,
      {
        spreadPathsToArguments: {},
        explicitPathsToArguments: { id: "$[0]", revision: "$[1]" },
        singleArgumentUnchanged: false
      },
      ["_id", "revision"]
    );
    sideEffects?.onError?.(err);
    throw transformedError;
  }
}
async function hideCustomField2(_id, revision) {
  const { httpClient, sideEffects } = arguments[2];
  const payload = renameKeysFromSDKRequestToRESTRequest({
    id: _id,
    revision
  });
  const reqOpts = hideCustomField(payload);
  sideEffects?.onSiteCall?.();
  try {
    const result = await httpClient.request(reqOpts);
    sideEffects?.onSuccess?.(result);
  } catch (err) {
    const transformedError = sdkTransformError(
      err,
      {
        spreadPathsToArguments: {},
        explicitPathsToArguments: { id: "$[0]", revision: "$[1]" },
        singleArgumentUnchanged: false
      },
      ["_id", "revision"]
    );
    sideEffects?.onError?.(err);
    throw transformedError;
  }
}
async function updateCustomFieldsOrder2(fieldIds, options) {
  const { httpClient, sideEffects } = arguments[2];
  const payload = renameKeysFromSDKRequestToRESTRequest({
    fieldIds,
    section: options?.section
  });
  const reqOpts = updateCustomFieldsOrder(payload);
  sideEffects?.onSiteCall?.();
  try {
    const result = await httpClient.request(reqOpts);
    sideEffects?.onSuccess?.(result);
    return renameKeysFromRESTResponseToSDKResponse(result.data);
  } catch (err) {
    const transformedError = sdkTransformError(
      err,
      {
        spreadPathsToArguments: {},
        explicitPathsToArguments: { fieldIds: "$[0]", section: "$[1].section" },
        singleArgumentUnchanged: false
      },
      ["fieldIds", "options"]
    );
    sideEffects?.onError?.(err);
    throw transformedError;
  }
}

// src/members-v1-custom-field-custom-fields.public.ts
function createCustomField3(httpClient) {
  return (field) => createCustomField2(
    field,
    // @ts-ignore
    { httpClient }
  );
}
function getCustomField3(httpClient) {
  return (_id) => getCustomField2(
    _id,
    // @ts-ignore
    { httpClient }
  );
}
function listCustomFields3(httpClient) {
  return (options) => listCustomFields2(
    options,
    // @ts-ignore
    { httpClient }
  );
}
function updateCustomField3(httpClient) {
  return (_id, field) => updateCustomField2(
    _id,
    field,
    // @ts-ignore
    { httpClient }
  );
}
function deleteCustomField3(httpClient) {
  return (_id, revision) => deleteCustomField2(
    _id,
    revision,
    // @ts-ignore
    { httpClient }
  );
}
function hideCustomField3(httpClient) {
  return (_id, revision) => hideCustomField2(
    _id,
    revision,
    // @ts-ignore
    { httpClient }
  );
}
function updateCustomFieldsOrder3(httpClient) {
  return (fieldIds, options) => updateCustomFieldsOrder2(
    fieldIds,
    options,
    // @ts-ignore
    { httpClient }
  );
}

// src/members-v1-custom-field-custom-fields.context.ts
import { createRESTModule } from "@wix/sdk-runtime/rest-modules";
var createCustomField4 = /* @__PURE__ */ createRESTModule(createCustomField3);
var getCustomField4 = /* @__PURE__ */ createRESTModule(getCustomField3);
var listCustomFields4 = /* @__PURE__ */ createRESTModule(listCustomFields3);
var updateCustomField4 = /* @__PURE__ */ createRESTModule(updateCustomField3);
var deleteCustomField4 = /* @__PURE__ */ createRESTModule(deleteCustomField3);
var hideCustomField4 = /* @__PURE__ */ createRESTModule(hideCustomField3);
var updateCustomFieldsOrder4 = /* @__PURE__ */ createRESTModule(updateCustomFieldsOrder3);
export {
  AppliesTo,
  DeleteStatus,
  Namespace,
  Origin,
  Privacy,
  Section,
  SiteCreatedContext,
  SocialTypeType,
  State,
  Type,
  WebhookIdentityType,
  createCustomField4 as createCustomField,
  deleteCustomField4 as deleteCustomField,
  getCustomField4 as getCustomField,
  hideCustomField4 as hideCustomField,
  listCustomFields4 as listCustomFields,
  updateCustomField4 as updateCustomField,
  updateCustomFieldsOrder4 as updateCustomFieldsOrder
};
//# sourceMappingURL=index.mjs.map