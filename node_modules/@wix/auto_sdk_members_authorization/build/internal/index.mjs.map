{"version":3,"sources":["../../src/members-v1-role-authorization.universal.ts","../../src/members-v1-role-authorization.http.ts","../../src/members-v1-role-authorization.public.ts","../../src/members-v1-role-authorization.context.ts"],"sourcesContent":["import { transformError as sdkTransformError } from '@wix/sdk-runtime/transform-error';\nimport {\n  renameKeysFromSDKRequestToRESTRequest,\n  renameKeysFromRESTResponseToSDKResponse,\n} from '@wix/sdk-runtime/rename-all-nested-keys';\nimport { HttpClient, NonNullablePaths } from '@wix/sdk-types';\nimport * as ambassadorWixMembersV1Role from './members-v1-role-authorization.http.js';\n\nexport interface Role {\n  roleKey?: string;\n  title?: string;\n}\n\nexport interface AssignRoleRequest {\n  /** @format GUID */\n  memberId: string;\n  roleKey: string;\n}\n\nexport interface AssignRoleResponse {\n  roleKey?: string;\n}\n\nexport interface UnassignRoleRequest {\n  /** @format GUID */\n  memberId: string;\n  roleKey: string;\n}\n\nexport interface UnassignRoleResponse {\n  roleKey?: string;\n}\n\nexport interface GetRolesRequest {\n  /** @format GUID */\n  memberId: string;\n}\n\nexport interface GetRolesResponse {\n  roles?: Role[];\n}\n\nexport interface QueryRolesRequest {\n  /** Query options. */\n  query?: Query;\n}\n\nexport interface Query {\n  /** A filter object. See documentation [here](https://bo.wix.com/wix-docs/rnd/platformization-guidelines/api-query-language#platformization-guidelines_api-query-language_defining-in-protobuf) */\n  filter?: any;\n}\n\nexport interface QueryRolesResponse {\n  /** Map of members that met the query filter criteria. */\n  rolesByMemberId?: Record<string, MemberRole>;\n}\n\nexport interface MemberRole {\n  roles?: Role[];\n}\n\nexport interface PolicyAssignedToContributor {\n  /** @format GUID */\n  accountId?: string;\n  /** @format GUID */\n  metaSiteId?: string;\n  policyIds?: string[];\n}\n\nexport interface Empty {}\n\nexport interface PolicyRemovedFromContributor {\n  /** @format GUID */\n  accountId?: string;\n  /** @format GUID */\n  metaSiteId?: string;\n  policyIds?: string[];\n}\n\nexport interface PolicyUpdatedForContributor {\n  /** @format GUID */\n  accountId?: string;\n  /** @format GUID */\n  metaSiteId?: string;\n  oldPolicyIds?: string[];\n  newPolicyIds?: string[];\n}\n\ntype RoleNonNullablePaths = `roleKey` | `title`;\n\n/** @public\n * @documentationMaturity preview\n * @requiredField memberId\n * @requiredField roleKey\n * @permissionId MEMBERS.MEMBER_ROLES_MANAGE\n * @applicableIdentity MEMBER\n * @fqn com.wixpress.members.memberroles.MemberRoles.AssignRole\n */\nexport async function assignRole(\n  memberId: string,\n  roleKey: string\n): Promise<NonNullablePaths<AssignRoleResponse, `roleKey`>> {\n  // @ts-ignore\n  const { httpClient, sideEffects } = arguments[2] as {\n    httpClient: HttpClient;\n    sideEffects?: any;\n  };\n\n  const payload = renameKeysFromSDKRequestToRESTRequest({\n    memberId: memberId,\n    roleKey: roleKey,\n  });\n\n  const reqOpts = ambassadorWixMembersV1Role.assignRole(payload);\n\n  sideEffects?.onSiteCall?.();\n  try {\n    const result = await httpClient.request(reqOpts);\n    sideEffects?.onSuccess?.(result);\n\n    return renameKeysFromRESTResponseToSDKResponse(result.data)!;\n  } catch (err: any) {\n    const transformedError = sdkTransformError(\n      err,\n      {\n        spreadPathsToArguments: {},\n        explicitPathsToArguments: { memberId: '$[0]', roleKey: '$[1]' },\n        singleArgumentUnchanged: false,\n      },\n      ['memberId', 'roleKey']\n    );\n    sideEffects?.onError?.(err);\n\n    throw transformedError;\n  }\n}\n\n/** @public\n * @documentationMaturity preview\n * @requiredField memberId\n * @requiredField roleKey\n * @permissionId MEMBERS.MEMBER_ROLES_MANAGE\n * @applicableIdentity MEMBER\n * @fqn com.wixpress.members.memberroles.MemberRoles.UnassignRole\n */\nexport async function unassignRole(\n  memberId: string,\n  roleKey: string\n): Promise<NonNullablePaths<UnassignRoleResponse, `roleKey`>> {\n  // @ts-ignore\n  const { httpClient, sideEffects } = arguments[2] as {\n    httpClient: HttpClient;\n    sideEffects?: any;\n  };\n\n  const payload = renameKeysFromSDKRequestToRESTRequest({\n    memberId: memberId,\n    roleKey: roleKey,\n  });\n\n  const reqOpts = ambassadorWixMembersV1Role.unassignRole(payload);\n\n  sideEffects?.onSiteCall?.();\n  try {\n    const result = await httpClient.request(reqOpts);\n    sideEffects?.onSuccess?.(result);\n\n    return renameKeysFromRESTResponseToSDKResponse(result.data)!;\n  } catch (err: any) {\n    const transformedError = sdkTransformError(\n      err,\n      {\n        spreadPathsToArguments: {},\n        explicitPathsToArguments: { memberId: '$[0]', roleKey: '$[1]' },\n        singleArgumentUnchanged: false,\n      },\n      ['memberId', 'roleKey']\n    );\n    sideEffects?.onError?.(err);\n\n    throw transformedError;\n  }\n}\n\n/** @public\n * @documentationMaturity preview\n * @requiredField memberId\n * @permissionId MEMBERS.ROLES_READ\n * @applicableIdentity VISITOR\n * @fqn com.wixpress.members.memberroles.MemberRoles.GetRoles\n */\nexport async function getRoles(\n  memberId: string\n): Promise<\n  NonNullablePaths<\n    GetRolesResponse,\n    {\n      [P in RoleNonNullablePaths]: `roles.${number}.${P}`;\n    }[RoleNonNullablePaths]\n  >\n> {\n  // @ts-ignore\n  const { httpClient, sideEffects } = arguments[1] as {\n    httpClient: HttpClient;\n    sideEffects?: any;\n  };\n\n  const payload = renameKeysFromSDKRequestToRESTRequest({ memberId: memberId });\n\n  const reqOpts = ambassadorWixMembersV1Role.getRoles(payload);\n\n  sideEffects?.onSiteCall?.();\n  try {\n    const result = await httpClient.request(reqOpts);\n    sideEffects?.onSuccess?.(result);\n\n    return renameKeysFromRESTResponseToSDKResponse(result.data)!;\n  } catch (err: any) {\n    const transformedError = sdkTransformError(\n      err,\n      {\n        spreadPathsToArguments: {},\n        explicitPathsToArguments: { memberId: '$[0]' },\n        singleArgumentUnchanged: false,\n      },\n      ['memberId']\n    );\n    sideEffects?.onError?.(err);\n\n    throw transformedError;\n  }\n}\n\n/** @public\n * @documentationMaturity preview\n * @permissionId MEMBERS.ROLES_READ\n * @applicableIdentity VISITOR\n * @fqn com.wixpress.members.memberroles.MemberRoles.QueryRoles\n */\nexport async function queryRoles(\n  options?: QueryRolesOptions\n): Promise<QueryRolesResponse> {\n  // @ts-ignore\n  const { httpClient, sideEffects } = arguments[1] as {\n    httpClient: HttpClient;\n    sideEffects?: any;\n  };\n\n  const payload = renameKeysFromSDKRequestToRESTRequest({\n    query: options?.query,\n  });\n\n  const reqOpts = ambassadorWixMembersV1Role.queryRoles(payload);\n\n  sideEffects?.onSiteCall?.();\n  try {\n    const result = await httpClient.request(reqOpts);\n    sideEffects?.onSuccess?.(result);\n\n    return renameKeysFromRESTResponseToSDKResponse(result.data)!;\n  } catch (err: any) {\n    const transformedError = sdkTransformError(\n      err,\n      {\n        spreadPathsToArguments: {},\n        explicitPathsToArguments: { query: '$[0].query' },\n        singleArgumentUnchanged: false,\n      },\n      ['options']\n    );\n    sideEffects?.onError?.(err);\n\n    throw transformedError;\n  }\n}\n\nexport interface QueryRolesOptions {\n  /** Query options. */\n  query?: Query;\n}\n","import { toURLSearchParams } from '@wix/sdk-runtime/rest-modules';\nimport { resolveUrl } from '@wix/sdk-runtime/rest-modules';\nimport { ResolveUrlOpts } from '@wix/sdk-runtime/rest-modules';\nimport { RequestOptionsFactory } from '@wix/sdk-types';\n\nfunction resolveComWixpressMembersMemberrolesMemberRolesUrl(\n  opts: Omit<ResolveUrlOpts, 'domainToMappings'>\n) {\n  const domainToMappings = {\n    'api._api_base_domain_': [\n      {\n        srcPath: '/members/v1/roles',\n        destPath: '',\n      },\n    ],\n    _: [\n      {\n        srcPath: '/_api/members/v1/roles',\n        destPath: '/v1/roles',\n      },\n    ],\n    'www._base_domain_': [\n      {\n        srcPath: '/_api/members/v1/roles',\n        destPath: '/v1/roles',\n      },\n    ],\n    'members.wixapps.net': [\n      {\n        srcPath: '/_api/members/v1/roles',\n        destPath: '/v1/roles',\n      },\n    ],\n    'www.wixapis.com': [\n      {\n        srcPath: '/members/v1/roles',\n        destPath: '/v1/roles',\n      },\n    ],\n    'editor._base_domain_': [\n      {\n        srcPath: '/_api/members/v1/roles',\n        destPath: '/v1/roles',\n      },\n    ],\n    'blocks._base_domain_': [\n      {\n        srcPath: '/_api/members/v1/roles',\n        destPath: '/v1/roles',\n      },\n    ],\n    'create.editorx': [\n      {\n        srcPath: '/_api/members/v1/roles',\n        destPath: '/v1/roles',\n      },\n    ],\n    '*.dev.wix-code.com': [\n      {\n        srcPath: '/_api/members/v1/roles',\n        destPath: '/v1/roles',\n      },\n    ],\n    'manage._base_domain_': [\n      {\n        srcPath: '/_api/members/v1/roles',\n        destPath: '/v1/roles',\n      },\n    ],\n  };\n\n  return resolveUrl(Object.assign(opts, { domainToMappings }));\n}\n\nconst PACKAGE_NAME = '@wix/auto_sdk_members_authorization';\n\nexport function assignRole(payload: object): RequestOptionsFactory<any> {\n  function __assignRole({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.members.v1.role',\n      method: 'POST' as any,\n      methodFqn: 'com.wixpress.members.memberroles.MemberRoles.AssignRole',\n      packageName: PACKAGE_NAME,\n      url: resolveComWixpressMembersMemberrolesMemberRolesUrl({\n        protoPath: '/v1/roles/members/{memberId}',\n        data: payload,\n        host,\n      }),\n      data: payload,\n    };\n\n    return metadata;\n  }\n\n  return __assignRole;\n}\n\nexport function unassignRole(payload: object): RequestOptionsFactory<any> {\n  function __unassignRole({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.members.v1.role',\n      method: 'DELETE' as any,\n      methodFqn: 'com.wixpress.members.memberroles.MemberRoles.UnassignRole',\n      packageName: PACKAGE_NAME,\n      url: resolveComWixpressMembersMemberrolesMemberRolesUrl({\n        protoPath: '/v1/roles/members/{memberId}',\n        data: payload,\n        host,\n      }),\n      params: toURLSearchParams(payload),\n    };\n\n    return metadata;\n  }\n\n  return __unassignRole;\n}\n\nexport function getRoles(payload: object): RequestOptionsFactory<any> {\n  function __getRoles({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.members.v1.role',\n      method: 'GET' as any,\n      methodFqn: 'com.wixpress.members.memberroles.MemberRoles.GetRoles',\n      packageName: PACKAGE_NAME,\n      url: resolveComWixpressMembersMemberrolesMemberRolesUrl({\n        protoPath: '/v1/roles/members/{memberId}',\n        data: payload,\n        host,\n      }),\n      params: toURLSearchParams(payload),\n    };\n\n    return metadata;\n  }\n\n  return __getRoles;\n}\n\nexport function queryRoles(payload: object): RequestOptionsFactory<any> {\n  function __queryRoles({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.members.v1.role',\n      method: 'POST' as any,\n      methodFqn: 'com.wixpress.members.memberroles.MemberRoles.QueryRoles',\n      packageName: PACKAGE_NAME,\n      url: resolveComWixpressMembersMemberrolesMemberRolesUrl({\n        protoPath: '/v1/roles/members/query',\n        data: payload,\n        host,\n      }),\n      data: payload,\n    };\n\n    return metadata;\n  }\n\n  return __queryRoles;\n}\n","import { HttpClient } from '@wix/sdk-types';\nimport {\n  AssignRoleResponse,\n  GetRolesResponse,\n  QueryRolesOptions,\n  QueryRolesResponse,\n  UnassignRoleResponse,\n  assignRole as universalAssignRole,\n  getRoles as universalGetRoles,\n  queryRoles as universalQueryRoles,\n  unassignRole as universalUnassignRole,\n} from './members-v1-role-authorization.universal.js';\n\nexport const __metadata = { PACKAGE_NAME: '@wix/members' };\n\nexport function assignRole(httpClient: HttpClient): AssignRoleSignature {\n  return (memberId: string, roleKey: string) =>\n    universalAssignRole(\n      memberId,\n      roleKey,\n      // @ts-ignore\n      { httpClient }\n    );\n}\n\ninterface AssignRoleSignature {\n  /** */\n  (memberId: string, roleKey: string): Promise<AssignRoleResponse>;\n}\n\nexport function unassignRole(httpClient: HttpClient): UnassignRoleSignature {\n  return (memberId: string, roleKey: string) =>\n    universalUnassignRole(\n      memberId,\n      roleKey,\n      // @ts-ignore\n      { httpClient }\n    );\n}\n\ninterface UnassignRoleSignature {\n  /** */\n  (memberId: string, roleKey: string): Promise<UnassignRoleResponse>;\n}\n\nexport function getRoles(httpClient: HttpClient): GetRolesSignature {\n  return (memberId: string) =>\n    universalGetRoles(\n      memberId,\n      // @ts-ignore\n      { httpClient }\n    );\n}\n\ninterface GetRolesSignature {\n  /** */\n  (memberId: string): Promise<GetRolesResponse>;\n}\n\nexport function queryRoles(httpClient: HttpClient): QueryRolesSignature {\n  return (options?: QueryRolesOptions) =>\n    universalQueryRoles(\n      options,\n      // @ts-ignore\n      { httpClient }\n    );\n}\n\ninterface QueryRolesSignature {\n  /** */\n  (options?: QueryRolesOptions | undefined): Promise<QueryRolesResponse>;\n}\n\nexport {\n  AssignRoleRequest,\n  AssignRoleResponse,\n  Empty,\n  GetRolesRequest,\n  GetRolesResponse,\n  MemberRole,\n  PolicyAssignedToContributor,\n  PolicyRemovedFromContributor,\n  PolicyUpdatedForContributor,\n  Query,\n  QueryRolesOptions,\n  QueryRolesRequest,\n  QueryRolesResponse,\n  Role,\n  UnassignRoleRequest,\n  UnassignRoleResponse,\n} from './members-v1-role-authorization.universal.js';\n","import {\n  assignRole as publicAssignRole,\n  unassignRole as publicUnassignRole,\n  getRoles as publicGetRoles,\n  queryRoles as publicQueryRoles,\n} from './members-v1-role-authorization.public.js';\nimport { createRESTModule } from '@wix/sdk-runtime/rest-modules';\nimport { BuildRESTFunction, MaybeContext } from '@wix/sdk-types';\n\nexport const assignRole: MaybeContext<\n  BuildRESTFunction<typeof publicAssignRole> & typeof publicAssignRole\n> = /*#__PURE__*/ createRESTModule(publicAssignRole);\nexport const unassignRole: MaybeContext<\n  BuildRESTFunction<typeof publicUnassignRole> & typeof publicUnassignRole\n> = /*#__PURE__*/ createRESTModule(publicUnassignRole);\nexport const getRoles: MaybeContext<\n  BuildRESTFunction<typeof publicGetRoles> & typeof publicGetRoles\n> = /*#__PURE__*/ createRESTModule(publicGetRoles);\nexport const queryRoles: MaybeContext<\n  BuildRESTFunction<typeof publicQueryRoles> & typeof publicQueryRoles\n> = /*#__PURE__*/ createRESTModule(publicQueryRoles);\n\nexport {\n  Role,\n  AssignRoleRequest,\n  AssignRoleResponse,\n  UnassignRoleRequest,\n  UnassignRoleResponse,\n  GetRolesRequest,\n  GetRolesResponse,\n  QueryRolesRequest,\n  Query,\n  QueryRolesResponse,\n  MemberRole,\n  PolicyAssignedToContributor,\n  Empty,\n  PolicyRemovedFromContributor,\n  PolicyUpdatedForContributor,\n  QueryRolesOptions,\n} from './members-v1-role-authorization.universal.js';\n"],"mappings":"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","names":["assignRole","unassignRole","getRoles","queryRoles","assignRole","unassignRole","getRoles","queryRoles","assignRole","unassignRole","getRoles","queryRoles"]}