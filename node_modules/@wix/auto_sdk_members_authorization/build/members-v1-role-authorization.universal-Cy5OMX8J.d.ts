interface Role {
    roleKey?: string;
    title?: string;
}
interface AssignRoleRequest {
    /** @format GUID */
    memberId: string;
    roleKey: string;
}
interface AssignRoleResponse {
    roleKey?: string;
}
interface UnassignRoleRequest {
    /** @format GUID */
    memberId: string;
    roleKey: string;
}
interface UnassignRoleResponse {
    roleKey?: string;
}
interface GetRolesRequest {
    /** @format GUID */
    memberId: string;
}
interface GetRolesResponse {
    roles?: Role[];
}
interface QueryRolesRequest {
    /** Query options. */
    query?: Query;
}
interface Query {
    /** A filter object. See documentation [here](https://bo.wix.com/wix-docs/rnd/platformization-guidelines/api-query-language#platformization-guidelines_api-query-language_defining-in-protobuf) */
    filter?: any;
}
interface QueryRolesResponse {
    /** Map of members that met the query filter criteria. */
    rolesByMemberId?: Record<string, MemberRole>;
}
interface MemberRole {
    roles?: Role[];
}
interface PolicyAssignedToContributor {
    /** @format GUID */
    accountId?: string;
    /** @format GUID */
    metaSiteId?: string;
    policyIds?: string[];
}
interface Empty {
}
interface PolicyRemovedFromContributor {
    /** @format GUID */
    accountId?: string;
    /** @format GUID */
    metaSiteId?: string;
    policyIds?: string[];
}
interface PolicyUpdatedForContributor {
    /** @format GUID */
    accountId?: string;
    /** @format GUID */
    metaSiteId?: string;
    oldPolicyIds?: string[];
    newPolicyIds?: string[];
}
interface QueryRolesOptions {
    /** Query options. */
    query?: Query;
}

export type { AssignRoleResponse as A, Empty as E, GetRolesResponse as G, MemberRole as M, PolicyAssignedToContributor as P, QueryRolesOptions as Q, Role as R, UnassignRoleResponse as U, QueryRolesResponse as a, AssignRoleRequest as b, UnassignRoleRequest as c, GetRolesRequest as d, QueryRolesRequest as e, Query as f, PolicyRemovedFromContributor as g, PolicyUpdatedForContributor as h };
