export var ServiceType;
(function (ServiceType) {
    /** Appointment-based service. */
    ServiceType["APPOINTMENT"] = "APPOINTMENT";
    /** Class service. */
    ServiceType["CLASS"] = "CLASS";
    /** Course service. */
    ServiceType["COURSE"] = "COURSE";
})(ServiceType || (ServiceType = {}));
export var RateType;
(function (RateType) {
    /** Unknown rate type. */
    RateType["UNKNOWN_RATE_TYPE"] = "UNKNOWN_RATE_TYPE";
    /** The service has a fixed price. */
    RateType["FIXED"] = "FIXED";
    /** The service has a custom price, expressed as a price description. */
    RateType["CUSTOM"] = "CUSTOM";
    /** This service is offered with a set of different prices based on different terms. */
    RateType["VARIED"] = "VARIED";
    /** This service is offered free of charge. */
    RateType["NO_FEE"] = "NO_FEE";
})(RateType || (RateType = {}));
export var LocationTypeEnumLocationType;
(function (LocationTypeEnumLocationType) {
    LocationTypeEnumLocationType["UNKNOWN_LOCATION_TYPE"] = "UNKNOWN_LOCATION_TYPE";
    /**
     * Location set by the business that is not a standard business *location*
     * ([SDK](https://dev.wix.com/docs/sdk/backend-modules/business-tools/locations/introduction) | [REST](https://dev.wix.com/docs/rest/business-management/locations/introduction)).
     */
    LocationTypeEnumLocationType["CUSTOM"] = "CUSTOM";
    /**
     * Business *location*
     * ([SDK](https://dev.wix.com/docs/sdk/backend-modules/business-tools/locations/introduction) | [REST](https://dev.wix.com/docs/rest/business-management/locations/introduction)).
     */
    LocationTypeEnumLocationType["BUSINESS"] = "BUSINESS";
    /**
     * The customer specifies any address when booking. Available only for
     * appointment-based services.
     */
    LocationTypeEnumLocationType["CUSTOMER"] = "CUSTOMER";
})(LocationTypeEnumLocationType || (LocationTypeEnumLocationType = {}));
export var WebhookIdentityType;
(function (WebhookIdentityType) {
    WebhookIdentityType["UNKNOWN"] = "UNKNOWN";
    WebhookIdentityType["ANONYMOUS_VISITOR"] = "ANONYMOUS_VISITOR";
    WebhookIdentityType["MEMBER"] = "MEMBER";
    WebhookIdentityType["WIX_USER"] = "WIX_USER";
    WebhookIdentityType["APP"] = "APP";
})(WebhookIdentityType || (WebhookIdentityType = {}));
export var V2RequestedFields;
(function (V2RequestedFields) {
    /** Unknown requested field. */
    V2RequestedFields["UNKNOWN_REQUESTED_FIELD"] = "UNKNOWN_REQUESTED_FIELD";
    /** When passed, `service.staff_members` is returned. */
    V2RequestedFields["STAFF_MEMBER_DETAILS"] = "STAFF_MEMBER_DETAILS";
    /** When passed, `service.service_resources.resource_type.name` is returned. */
    V2RequestedFields["RESOURCE_TYPE_DETAILS"] = "RESOURCE_TYPE_DETAILS";
})(V2RequestedFields || (V2RequestedFields = {}));
export var SortOrder;
(function (SortOrder) {
    SortOrder["ASC"] = "ASC";
    SortOrder["DESC"] = "DESC";
})(SortOrder || (SortOrder = {}));
export var SortType;
(function (SortType) {
    SortType["COUNT"] = "COUNT";
    SortType["VALUE"] = "VALUE";
})(SortType || (SortType = {}));
export var SortDirection;
(function (SortDirection) {
    SortDirection["DESC"] = "DESC";
    SortDirection["ASC"] = "ASC";
})(SortDirection || (SortDirection = {}));
export var MissingValues;
(function (MissingValues) {
    MissingValues["EXCLUDE"] = "EXCLUDE";
    MissingValues["INCLUDE"] = "INCLUDE";
})(MissingValues || (MissingValues = {}));
export var ScalarType;
(function (ScalarType) {
    ScalarType["UNKNOWN_SCALAR_TYPE"] = "UNKNOWN_SCALAR_TYPE";
    ScalarType["COUNT_DISTINCT"] = "COUNT_DISTINCT";
    ScalarType["MIN"] = "MIN";
    ScalarType["MAX"] = "MAX";
})(ScalarType || (ScalarType = {}));
export var NestedAggregationType;
(function (NestedAggregationType) {
    NestedAggregationType["UNKNOWN_AGGREGATION_TYPE"] = "UNKNOWN_AGGREGATION_TYPE";
    NestedAggregationType["VALUE"] = "VALUE";
    NestedAggregationType["RANGE"] = "RANGE";
    NestedAggregationType["SCALAR"] = "SCALAR";
    NestedAggregationType["DATE_HISTOGRAM"] = "DATE_HISTOGRAM";
})(NestedAggregationType || (NestedAggregationType = {}));
export var DateHistogramAggregationInterval;
(function (DateHistogramAggregationInterval) {
    /** Unknown interval. */
    DateHistogramAggregationInterval["UNKNOWN_INTERVAL"] = "UNKNOWN_INTERVAL";
    /** Yearly interval. */
    DateHistogramAggregationInterval["YEAR"] = "YEAR";
    /** Monthly interval. */
    DateHistogramAggregationInterval["MONTH"] = "MONTH";
    /** Weekly interval. */
    DateHistogramAggregationInterval["WEEK"] = "WEEK";
    /** Daily interval. */
    DateHistogramAggregationInterval["DAY"] = "DAY";
    /** Hourly interval. */
    DateHistogramAggregationInterval["HOUR"] = "HOUR";
    /** Minute interval. */
    DateHistogramAggregationInterval["MINUTE"] = "MINUTE";
    /** Second interval. */
    DateHistogramAggregationInterval["SECOND"] = "SECOND";
})(DateHistogramAggregationInterval || (DateHistogramAggregationInterval = {}));
export var AggregationType;
(function (AggregationType) {
    AggregationType["UNKNOWN_AGGREGATION_TYPE"] = "UNKNOWN_AGGREGATION_TYPE";
    AggregationType["VALUE"] = "VALUE";
    AggregationType["RANGE"] = "RANGE";
    AggregationType["SCALAR"] = "SCALAR";
    AggregationType["DATE_HISTOGRAM"] = "DATE_HISTOGRAM";
    AggregationType["NESTED"] = "NESTED";
})(AggregationType || (AggregationType = {}));
export var Mode;
(function (Mode) {
    /** Any */
    Mode["OR"] = "OR";
    /** All */
    Mode["AND"] = "AND";
})(Mode || (Mode = {}));
export var RequestedFields;
(function (RequestedFields) {
    /** Unknown requested conditional field. */
    RequestedFields["UNKNOWN_REQUESTED_FIELD"] = "UNKNOWN_REQUESTED_FIELD";
    /** Whether to return the site's default booking form. */
    RequestedFields["DEFAULT_BOOKING_FORM"] = "DEFAULT_BOOKING_FORM";
})(RequestedFields || (RequestedFields = {}));
export var Action;
(function (Action) {
    Action["UNKNOWN_ACTION_TYPE"] = "UNKNOWN_ACTION_TYPE";
    /** Retain all future sessions at their current location. This is the default. */
    Action["KEEP_AT_CURRENT_LOCATION"] = "KEEP_AT_CURRENT_LOCATION";
    /** Move future events to a new location. */
    Action["MOVE_TO_LOCATION"] = "MOVE_TO_LOCATION";
    /**
     * Cancel all future events at the removed location.
     * Currently not supported.
     */
    Action["DELETE"] = "DELETE";
})(Action || (Action = {}));
export var InvalidSlugError;
(function (InvalidSlugError) {
    /** Unknown slug error. */
    InvalidSlugError["UNKNOWN_SLUG_ERROR"] = "UNKNOWN_SLUG_ERROR";
    /** Slug contains illegal characters. */
    InvalidSlugError["SLUG_CONTAINS_ILLEGAL_CHARACTERS"] = "SLUG_CONTAINS_ILLEGAL_CHARACTERS";
    /** Slug is already associated with another service. */
    InvalidSlugError["SLUG_ALREADY_EXISTS"] = "SLUG_ALREADY_EXISTS";
})(InvalidSlugError || (InvalidSlugError = {}));
export var CloneErrors;
(function (CloneErrors) {
    /**
     * Failed to clone the original service's *options and variants*
     * ([SDK](https://dev.wix.com/docs/sdk/backend-modules/bookings/service-options-and-variants/introduction) | [REST](https://dev.wix.com/docs/rest/business-solutions/bookings/services/service-options-and-variants/introduction)).
     */
    CloneErrors["OPTIONS_AND_VARIANTS"] = "OPTIONS_AND_VARIANTS";
    /** Failed to clone the original service's *booking form*. */
    CloneErrors["FORM"] = "FORM";
})(CloneErrors || (CloneErrors = {}));
export var CategoryStatus;
(function (CategoryStatus) {
    /** The category was created. */
    CategoryStatus["CREATED"] = "CREATED";
    /** The category was deleted. */
    CategoryStatus["DELETED"] = "DELETED";
})(CategoryStatus || (CategoryStatus = {}));
export var CategoryNotificationEvent;
(function (CategoryNotificationEvent) {
    /** Category was updated. */
    CategoryNotificationEvent["Updated"] = "Updated";
    /** Category was deleted. */
    CategoryNotificationEvent["Deleted"] = "Deleted";
    /** Category was created. */
    CategoryNotificationEvent["Created"] = "Created";
})(CategoryNotificationEvent || (CategoryNotificationEvent = {}));
export var Day;
(function (Day) {
    /** Undefined. */
    Day["UNDEFINED"] = "UNDEFINED";
    /** Monday. */
    Day["MON"] = "MON";
    /** Tuesday. */
    Day["TUE"] = "TUE";
    /** Wednesday. */
    Day["WED"] = "WED";
    /** Thursday. */
    Day["THU"] = "THU";
    /** Friday. */
    Day["FRI"] = "FRI";
    /** Saturday. */
    Day["SAT"] = "SAT";
    /** Sunday. */
    Day["SUN"] = "SUN";
})(Day || (Day = {}));
export var Transparency;
(function (Transparency) {
    Transparency["UNDEFINED"] = "UNDEFINED";
    /** The schedule can have available slots during the linked schedule's sessions. */
    Transparency["FREE"] = "FREE";
    /** The schedule can't have available slots during the linked schedule's sessions. */
    Transparency["BUSY"] = "BUSY";
})(Transparency || (Transparency = {}));
export var RecurringIntervalType;
(function (RecurringIntervalType) {
    /** The default value. Sessions for this interval will be of type EVENT. */
    RecurringIntervalType["UNDEFINED"] = "UNDEFINED";
    /** A recurring interval of events. */
    RecurringIntervalType["EVENT"] = "EVENT";
    /** Deprecated. */
    RecurringIntervalType["TIME_AVAILABILITY"] = "TIME_AVAILABILITY";
    /** A recurring interval for availability. */
    RecurringIntervalType["AVAILABILITY"] = "AVAILABILITY";
})(RecurringIntervalType || (RecurringIntervalType = {}));
export var LocationType;
(function (LocationType) {
    LocationType["UNDEFINED"] = "UNDEFINED";
    LocationType["OWNER_BUSINESS"] = "OWNER_BUSINESS";
    LocationType["OWNER_CUSTOM"] = "OWNER_CUSTOM";
    LocationType["CUSTOM"] = "CUSTOM";
})(LocationType || (LocationType = {}));
/** For future use */
export var LocationStatus;
(function (LocationStatus) {
    LocationStatus["ACTIVE"] = "ACTIVE";
    LocationStatus["INACTIVE"] = "INACTIVE";
})(LocationStatus || (LocationStatus = {}));
/** For future use */
export var LocationsLocationType;
(function (LocationsLocationType) {
    LocationsLocationType["UNKNOWN"] = "UNKNOWN";
    LocationsLocationType["BRANCH"] = "BRANCH";
    LocationsLocationType["OFFICES"] = "OFFICES";
    LocationsLocationType["RECEPTION"] = "RECEPTION";
    LocationsLocationType["HEADQUARTERS"] = "HEADQUARTERS";
    LocationsLocationType["INVENTORY"] = "INVENTORY";
})(LocationsLocationType || (LocationsLocationType = {}));
/** Enumerates the days of the week. */
export var DayOfWeek;
(function (DayOfWeek) {
    DayOfWeek["MONDAY"] = "MONDAY";
    DayOfWeek["TUESDAY"] = "TUESDAY";
    DayOfWeek["WEDNESDAY"] = "WEDNESDAY";
    DayOfWeek["THURSDAY"] = "THURSDAY";
    DayOfWeek["FRIDAY"] = "FRIDAY";
    DayOfWeek["SATURDAY"] = "SATURDAY";
    DayOfWeek["SUNDAY"] = "SUNDAY";
})(DayOfWeek || (DayOfWeek = {}));
export var ApprovalStatus;
(function (ApprovalStatus) {
    /** Default. */
    ApprovalStatus["UNDEFINED"] = "UNDEFINED";
    /** Pending business approval. */
    ApprovalStatus["PENDING"] = "PENDING";
    /** Approved by the business. */
    ApprovalStatus["APPROVED"] = "APPROVED";
    /** Declined by the business. */
    ApprovalStatus["DECLINED"] = "DECLINED";
})(ApprovalStatus || (ApprovalStatus = {}));
export var ScheduleStatus;
(function (ScheduleStatus) {
    /** Undefined schedule status. */
    ScheduleStatus["UNDEFINED"] = "UNDEFINED";
    /** The schedule was created. */
    ScheduleStatus["CREATED"] = "CREATED";
    /** The schedule was cancelled. */
    ScheduleStatus["CANCELLED"] = "CANCELLED";
})(ScheduleStatus || (ScheduleStatus = {}));
export var ConferenceType;
(function (ConferenceType) {
    /** Undefined conference type. */
    ConferenceType["UNDEFINED"] = "UNDEFINED";
    /** API-generated online meeting. */
    ConferenceType["ONLINE_MEETING_PROVIDER"] = "ONLINE_MEETING_PROVIDER";
    /** User-defined meeting. */
    ConferenceType["CUSTOM"] = "CUSTOM";
})(ConferenceType || (ConferenceType = {}));
export var CalendarType;
(function (CalendarType) {
    /** There is no information about the external calendar type. */
    CalendarType["UNDEFINED"] = "UNDEFINED";
    /** [Google Calendar](https://developers.google.com/calendar/api/guides/overview). */
    CalendarType["GOOGLE"] = "GOOGLE";
    /** Apple iCalendar. */
    CalendarType["I_CAL"] = "I_CAL";
    /** __Deprecated__. Use `MICROSOFT` instead. */
    CalendarType["OUTLOOK"] = "OUTLOOK";
    /** __Deprecated__. Use `MICROSOFT` instead. */
    CalendarType["OFFICE_365"] = "OFFICE_365";
    /** Microsoft Calendar. For example, Office 365 calendar or Outlook calendar. */
    CalendarType["MICROSOFT"] = "MICROSOFT";
    /** A different type of external calendar, not listed here. */
    CalendarType["OTHER"] = "OTHER";
})(CalendarType || (CalendarType = {}));
export var Status;
(function (Status) {
    /** Undefined status. */
    Status["UNDEFINED"] = "UNDEFINED";
    /** Session is confirmed. Default status. */
    Status["CONFIRMED"] = "CONFIRMED";
    /**
     * Session is cancelled.
     * A cancelled session can be the cancellation of a recurring session that should no longer be displayed or a deleted single session.
     * The ListSessions returns cancelled sessions only if 'includeDelete' flag is set to true.
     */
    Status["CANCELLED"] = "CANCELLED";
})(Status || (Status = {}));
export var SessionType;
(function (SessionType) {
    SessionType["UNDEFINED"] = "UNDEFINED";
    /**
     * Creates an event on the calendar for the owner of the schedule that the session belongs to.
     * Default type.
     */
    SessionType["EVENT"] = "EVENT";
    /** Represents a resource's available working hours. */
    SessionType["WORKING_HOURS"] = "WORKING_HOURS";
    /** Deprecated. Please use WORKING_HOURS. */
    SessionType["TIME_AVAILABILITY"] = "TIME_AVAILABILITY";
    /** Deprecated. Represents a resource's available hours. Please use WORKING_HOURS. */
    SessionType["AVAILABILITY"] = "AVAILABILITY";
})(SessionType || (SessionType = {}));
export var ResourceStatus;
(function (ResourceStatus) {
    /** Undefined resource status. */
    ResourceStatus["UNDEFINED"] = "UNDEFINED";
    /** The resource was created. */
    ResourceStatus["CREATED"] = "CREATED";
    /** The resource was deleted. */
    ResourceStatus["DELETED"] = "DELETED";
    /** The resource was updated. */
    ResourceStatus["UPDATED"] = "UPDATED";
})(ResourceStatus || (ResourceStatus = {}));
export var ResourceNotificationEvent;
(function (ResourceNotificationEvent) {
    /** Undefined resource event. */
    ResourceNotificationEvent["UNDEFINED"] = "UNDEFINED";
    /** The resource was updated. */
    ResourceNotificationEvent["Updated"] = "Updated";
    /** The resource was deleted. */
    ResourceNotificationEvent["Deleted"] = "Deleted";
    /** The resource was created. */
    ResourceNotificationEvent["Created"] = "Created";
    /** The schedule was updated. */
    ResourceNotificationEvent["Schedule_Updated"] = "Schedule_Updated";
})(ResourceNotificationEvent || (ResourceNotificationEvent = {}));
export var BenefitType;
(function (BenefitType) {
    /** Should never be used */
    BenefitType["UNDEFINED"] = "UNDEFINED";
    /** Limited benefit type */
    BenefitType["LIMITED"] = "LIMITED";
    /** Unlimited benefit type */
    BenefitType["UNLIMITED"] = "UNLIMITED";
})(BenefitType || (BenefitType = {}));
export var Event;
(function (Event) {
    Event["Updated"] = "Updated";
    Event["Deleted"] = "Deleted";
    Event["Created"] = "Created";
})(Event || (Event = {}));
export var CrudType;
(function (CrudType) {
    CrudType["INVALID_CRUD_TYPE"] = "INVALID_CRUD_TYPE";
    CrudType["CREATE"] = "CREATE";
    CrudType["UPDATE"] = "UPDATE";
    CrudType["DELETE"] = "DELETE";
    /** Unfortunately this action is used by hibernate save in wix-war */
    CrudType["CREATE_OR_UPDATE"] = "CREATE_OR_UPDATE";
})(CrudType || (CrudType = {}));
/** Where the extra text should be displayed: before, after or instead of the actual address. */
export var PlacementType;
(function (PlacementType) {
    PlacementType["BEFORE"] = "BEFORE";
    PlacementType["AFTER"] = "AFTER";
    PlacementType["REPLACE"] = "REPLACE";
})(PlacementType || (PlacementType = {}));
export var ResolutionMethod;
(function (ResolutionMethod) {
    ResolutionMethod["QUERY_PARAM"] = "QUERY_PARAM";
    ResolutionMethod["SUBDOMAIN"] = "SUBDOMAIN";
    ResolutionMethod["SUBDIRECTORY"] = "SUBDIRECTORY";
})(ResolutionMethod || (ResolutionMethod = {}));
//# sourceMappingURL=bookings-services-v2-service-services.types.js.map