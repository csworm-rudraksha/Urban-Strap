import { createService as publicCreateService, getService as publicGetService, updateService as publicUpdateService, bulkUpdateServices as publicBulkUpdateServices, bulkUpdateServicesByFilter as publicBulkUpdateServicesByFilter, deleteService as publicDeleteService, bulkDeleteServices as publicBulkDeleteServices, bulkDeleteServicesByFilter as publicBulkDeleteServicesByFilter, queryServices as publicQueryServices, searchServices as publicSearchServices, queryPolicies as publicQueryPolicies, queryBookingForms as publicQueryBookingForms, countServices as publicCountServices, queryLocations as publicQueryLocations, queryCategories as publicQueryCategories, setServiceLocations as publicSetServiceLocations, enablePricingPlansForService as publicEnablePricingPlansForService, disablePricingPlansForService as publicDisablePricingPlansForService, setCustomSlug as publicSetCustomSlug, validateSlug as publicValidateSlug, cloneService as publicCloneService, } from './bookings-services-v2-service-services.public.js';
import { createRESTModule } from '@wix/sdk-runtime/rest-modules';
import { createEventModule } from '@wix/sdk-runtime/event-definition-modules';
import { onServiceCreated as publicOnServiceCreated } from './bookings-services-v2-service-services.public.js';
import { onServiceDeleted as publicOnServiceDeleted } from './bookings-services-v2-service-services.public.js';
import { onServiceUpdated as publicOnServiceUpdated } from './bookings-services-v2-service-services.public.js';
export const createService = /*#__PURE__*/ createRESTModule(publicCreateService);
export const getService = /*#__PURE__*/ createRESTModule(publicGetService);
export const updateService = /*#__PURE__*/ createRESTModule(publicUpdateService);
export const bulkUpdateServices = /*#__PURE__*/ createRESTModule(publicBulkUpdateServices);
export const bulkUpdateServicesByFilter = /*#__PURE__*/ createRESTModule(publicBulkUpdateServicesByFilter);
export const deleteService = /*#__PURE__*/ createRESTModule(publicDeleteService);
export const bulkDeleteServices = /*#__PURE__*/ createRESTModule(publicBulkDeleteServices);
export const bulkDeleteServicesByFilter = /*#__PURE__*/ createRESTModule(publicBulkDeleteServicesByFilter);
export const queryServices = /*#__PURE__*/ createRESTModule(publicQueryServices);
export const searchServices = /*#__PURE__*/ createRESTModule(publicSearchServices);
export const queryPolicies = /*#__PURE__*/ createRESTModule(publicQueryPolicies);
export const queryBookingForms = /*#__PURE__*/ createRESTModule(publicQueryBookingForms);
export const countServices = /*#__PURE__*/ createRESTModule(publicCountServices);
export const queryLocations = /*#__PURE__*/ createRESTModule(publicQueryLocations);
export const queryCategories = /*#__PURE__*/ createRESTModule(publicQueryCategories);
export const setServiceLocations = /*#__PURE__*/ createRESTModule(publicSetServiceLocations);
export const enablePricingPlansForService = /*#__PURE__*/ createRESTModule(publicEnablePricingPlansForService);
export const disablePricingPlansForService = /*#__PURE__*/ createRESTModule(publicDisablePricingPlansForService);
export const setCustomSlug = /*#__PURE__*/ createRESTModule(publicSetCustomSlug);
export const validateSlug = /*#__PURE__*/ createRESTModule(publicValidateSlug);
export const cloneService = /*#__PURE__*/ createRESTModule(publicCloneService);
/**
 * Triggered when a service is created.
 */
export const onServiceCreated = createEventModule(publicOnServiceCreated);
/**
 * Triggered when a service is deleted.
 */
export const onServiceDeleted = createEventModule(publicOnServiceDeleted);
/**
 * Triggered when a service is updated.
 */
export const onServiceUpdated = createEventModule(publicOnServiceUpdated);
export { ServiceType, RateType, LocationTypeEnumLocationType, WebhookIdentityType, V2RequestedFields, SortOrder, SortType, SortDirection, MissingValues, ScalarType, NestedAggregationType, DateHistogramAggregationInterval, AggregationType, Mode, RequestedFields, Action, InvalidSlugError, CloneErrors, CategoryStatus, CategoryNotificationEvent, Day, Transparency, RecurringIntervalType, LocationType, LocationStatus, LocationsLocationType, DayOfWeek, ApprovalStatus, ScheduleStatus, ConferenceType, CalendarType, Status, SessionType, ResourceStatus, ResourceNotificationEvent, BenefitType, Event, CrudType, PlacementType, ResolutionMethod, } from './bookings-services-v2-service-services.universal.js';
//# sourceMappingURL=bookings-services-v2-service-services.context.js.map