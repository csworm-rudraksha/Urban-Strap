import { toURLSearchParams } from '@wix/sdk-runtime/rest-modules';
import { transformSDKFieldMaskToRESTFieldMask } from '@wix/sdk-runtime/transformations/field-mask';
import { transformPaths } from '@wix/sdk-runtime/transformations/transform-paths';
import { resolveUrl } from '@wix/sdk-runtime/rest-modules';
function resolveComWixBookingsExternalcalendarApiV2ExternalCalendarServiceUrl(opts) {
    const domainToMappings = {
        'api._api_base_domain_': [
            {
                srcPath: '/external-calendar-2',
                destPath: '',
            },
        ],
        'manage._base_domain_': [
            {
                srcPath: '/_api/bookings/v2/external-calendar',
                destPath: '/v2/external-calendar',
            },
            {
                srcPath: '/_api/bookings/v2/external-calendars',
                destPath: '/v2/external-calendars',
            },
        ],
        'www.wixapis.com': [
            {
                srcPath: '/bookings/v2/external-calendars',
                destPath: '/v2/external-calendars',
            },
        ],
    };
    return resolveUrl(Object.assign(opts, { domainToMappings }));
}
const PACKAGE_NAME = '@wix/auto_sdk_bookings_external-calendars';
/**
 * Retrieves a list of external calendar providers supported on the Wix site.
 *
 *
 * The list of external calendar providers includes:
 *
 * + External calendar providers that are supported by default, such as Google, Apple, and Microsoft.
 * + External calenders for which the site owner has enabled integration by installing an app.
 *
 * For each provider, check `features.connectMethods` to find out whether to use
 * _Connect By Credentials_
 * ([SDK](https://dev.wix.com/docs/sdk/backend-modules/bookings/external-calendars/connect-by-credentials) | [REST](https://dev.wix.com/docs/rest/business-solutions/bookings/calendar/external-calendar-v2/connect-by-credentials))
 * or _Connect By OAuth_
 * ([SDK](https://dev.wix.com/docs/sdk/backend-modules/bookings/external-calendars/connect-by-oauth) | [REST](https://dev.wix.com/docs/rest/business-solutions/bookings/calendar/external-calendar-v2/connect-by-o-auth))
 * to establish a connection.
 */
export function listProviders(payload) {
    function __listProviders({ host }) {
        const metadata = {
            entityFqdn: 'wix.bookings.calendar.v2.external_calendar',
            method: 'GET',
            methodFqn: 'com.wix.bookings.externalcalendar.api.v2.ExternalCalendarService.ListProviders',
            packageName: PACKAGE_NAME,
            url: resolveComWixBookingsExternalcalendarApiV2ExternalCalendarServiceUrl({ protoPath: '/v2/external-calendars/providers', data: payload, host }),
            params: toURLSearchParams(payload),
            fallback: [
                {
                    method: 'GET',
                    url: resolveComWixBookingsExternalcalendarApiV2ExternalCalendarServiceUrl({
                        protoPath: '/v2/external-calendars/providers',
                        data: payload,
                        host,
                    }),
                    params: toURLSearchParams(payload),
                },
            ],
        };
        return metadata;
    }
    return __listProviders;
}
/**
 * Retrieves an external calendar connection by ID.
 *
 *
 * The `syncConfig` property contains configuration details about event import
 * from and event export to the external calendar.
 */
export function getConnection(payload) {
    function __getConnection({ host }) {
        const metadata = {
            entityFqdn: 'wix.bookings.calendar.v2.external_calendar',
            method: 'GET',
            methodFqn: 'com.wix.bookings.externalcalendar.api.v2.ExternalCalendarService.GetConnection',
            packageName: PACKAGE_NAME,
            url: resolveComWixBookingsExternalcalendarApiV2ExternalCalendarServiceUrl({
                protoPath: '/v2/external-calendars/connections/{connectionId}',
                data: payload,
                host,
            }),
            params: toURLSearchParams(payload),
            fallback: [
                {
                    method: 'GET',
                    url: resolveComWixBookingsExternalcalendarApiV2ExternalCalendarServiceUrl({
                        protoPath: '/v2/external-calendars/connections/{connectionId}',
                        data: payload,
                        host,
                    }),
                    params: toURLSearchParams(payload),
                },
            ],
        };
        return metadata;
    }
    return __getConnection;
}
/**
 * Retrieves a list of external calendar connections.
 *
 *
 * ## Filter
 *
 * You can filter by *schedule ID*
 * ([SDK](https://dev.wix.com/docs/sdk/backend-modules/calendar/schedules/introduction) | [REST](https://dev.wix.com/docs/rest/business-management/calendar/schedules-v3/introduction)).
 *
 * ## Partial success
 *
 * By default, the call fails if details for at least 1 connection can't be
 * retrieved from the external provider. However, you can specify
 * `{"partialFailure": true}` to allow the call to succeed, if details for at
 * least 1 connection can be retrieved.
 */
export function listConnections(payload) {
    function __listConnections({ host }) {
        const metadata = {
            entityFqdn: 'wix.bookings.calendar.v2.external_calendar',
            method: 'GET',
            methodFqn: 'com.wix.bookings.externalcalendar.api.v2.ExternalCalendarService.ListConnections',
            packageName: PACKAGE_NAME,
            url: resolveComWixBookingsExternalcalendarApiV2ExternalCalendarServiceUrl({ protoPath: '/v2/external-calendars/connections', data: payload, host }),
            params: toURLSearchParams(payload),
        };
        return metadata;
    }
    return __listConnections;
}
/**
 * Connects a *Wix schedule*
 * ([SDK](https://dev.wix.com/docs/sdk/backend-modules/calendar/schedules/introduction) | [REST](https://dev.wix.com/docs/rest/business-management/calendar/schedules-v3/introduction))
 * to an external calendar account following [OAuth authorization protocol](https://oauth.net/2/).
 *
 *
 * ## Authorization flow
 *
 * The full authorization flow looks like this:
 *
 * 1. Call *Connect By OAuth* with the appropriate parameters.
 * 2. Redirect the owner of the external calendar account to the returned
 * `oAUthUrl`.
 * 3. The account owner authorizes access.
 * 4. The account owner is automatically redirected to the URL you've provided
 * in `redirectUrl` of the *Connect By OAuth* call.
 * 5. Save the new `connectionId`. You find it as a query parameter in the URL
 * to which the account owner is redirected.
 *
 * See *this sample flow*
 * ([SDK](https://dev.wix.com/docs/sdk/backend-modules/bookings/external-calendars/sample-flows#connect-an-external-calendar-by-oauth) | [REST](https://dev.wix.com/docs/rest/business-solutions/bookings/calendar/external-calendar-v2/sample-flows#connect-an-external-calendar-by-oauth))
 * for more details.
 *
 * ## Failure consequences
 *
 * If the attempt to connect fails, the account owner is still redirected to
 * the URL you specify in `redirectUrl`, but it incudes an `error` query
 * parameter set to 1 of the following values:
 *
 * - `reject`: The external calendar owner has rejected the authorization request.
 * - `unsupported`: Connecting to the user's external account type is not supported by the provider.
 * - `internal`: An error unrelated to the client or the request that prevents the server from fulfilling the request.
 *
 * ## Next steps
 *
 * After connecting an external calendar account to a Wix schedule, you can do
 * the following.
 *
 * ### Check the 2-way-sync settings
 *
 * Call *List Connections*
 * ([SDK](https://dev.wix.com/docs/sdk/backend-modules/bookings/external-calendars/list-connections) | [REST](https://dev.wix.com/docs/rest/business-solutions/bookings/calendar/external-calendar-v2/list-connections))
 * and filter by the relevant schedule ID.
 *
 * If needed, call *Update Sync Config*
 * ([SDK](https://dev.wix.com/docs/sdk/backend-modules/bookings/external-calendars/update-sync-config) | [REST](https://dev.wix.com/docs/rest/business-solutions/bookings/calendar/external-calendar-v2/update-sync-config))
 * to adjust the syncing configuration.
 *
 * ### Retrieve external calendar events
 *
 * Once a connection is successfully created, you can call *List Events*
 * ([SDK](https://dev.wix.com/docs/sdk/backend-modules/bookings/external-calendars/list-events) | [REST](https://dev.wix.com/docs/rest/business-solutions/bookings/calendar/external-calendar-v2/list-events))
 * to obtain an up-to-date list of events in the connected external calendars.
 *
 * ## When to call Connect By Credentials instead
 *
 * You can call *Connect By Credentials*
 * ([SDK](https://dev.wix.com/docs/sdk/backend-modules/bookings/external-calendars/connect-by-credentials) | [REST](https://dev.wix.com/docs/rest/business-solutions/bookings/calendar/external-calendar-v2/connect-by-credentials))
 * if:
 *
 * + The external calendar provider doesn't support OAuth.
 * + You don't want to redirect the account owner.
 *
 * Call *List Providers*
 * ([SDK](https://dev.wix.com/docs/sdk/backend-modules/bookings/external-calendars/list-providers) | [REST](https://dev.wix.com/docs/rest/business-solutions/bookings/calendar/external-calendar-v2/list-providers))
 * for a complete list of external calendar providers supported on the Wix site,
 * including which authorization methods they support.
 */
export function connectByOAuth(payload) {
    function __connectByOAuth({ host }) {
        const metadata = {
            entityFqdn: 'wix.bookings.calendar.v2.external_calendar',
            method: 'POST',
            methodFqn: 'com.wix.bookings.externalcalendar.api.v2.ExternalCalendarService.ConnectByOAuth',
            packageName: PACKAGE_NAME,
            url: resolveComWixBookingsExternalcalendarApiV2ExternalCalendarServiceUrl({
                protoPath: '/v2/external-calendars/connections:connectByOAuth',
                data: payload,
                host,
            }),
            data: payload,
        };
        return metadata;
    }
    return __connectByOAuth;
}
/**
 * Connects a *Wix schedule*
 * ([SDK](https://dev.wix.com/docs/sdk/backend-modules/calendar/schedules/introduction) | [REST](https://dev.wix.com/docs/rest/business-management/calendar/schedules-v3/introduction))
 * to an external calendar account using credentials.
 *
 *
 * ## Next steps
 *
 * After connecting an external calendar account to a Wix schedule, you can do
 * the following.
 *
 * ### Check the 2-way-sync settings
 *
 * Call *List Connections*
 * ([SDK](https://dev.wix.com/docs/sdk/backend-modules/bookings/external-calendars/list-connections) | [REST](https://dev.wix.com/docs/rest/business-solutions/bookings/calendar/external-calendar-v2/list-connections))
 * and filter by the relevant schedule ID.
 *
 * If needed, call *Update Sync Config*
 * ([SDK](https://dev.wix.com/docs/sdk/backend-modules/bookings/external-calendars/update-sync-config) | [REST](https://dev.wix.com/docs/rest/business-solutions/bookings/calendar/external-calendar-v2/update-sync-config))
 * to adjust the syncing configuration.
 *
 * ### Retrieve external calendar events
 *
 * Once a connection is successfully created, you can call *List Events*
 * ([SDK](https://dev.wix.com/docs/sdk/backend-modules/bookings/external-calendars/list-events) | [REST](https://dev.wix.com/docs/rest/business-solutions/bookings/calendar/external-calendar-v2/list-events))
 * to obtain an up-to-date list of events in the connected external calendars.
 *
 * ## When to call Connect By OAuth instead
 *
 * You could call *Connect By OAuth*
 * ([SDK](https://dev.wix.com/docs/sdk/backend-modules/bookings/external-calendars/connect-by-oauth) | [REST](https://dev.wix.com/docs/rest/business-solutions/bookings/calendar/external-calendar-v2/connect-by-o-auth))
 * if:
 *
 * + The external calendar provider doesn't support authorization by credentials.
 * + You don't have access to the external calendar account credentials.
 * + You want the account owner to approve the connection.
 *
 * Call *List Providers*
 * ([SDK](https://dev.wix.com/docs/sdk/backend-modules/bookings/external-calendars/list-providers) | [REST](https://dev.wix.com/docs/rest/business-solutions/bookings/calendar/external-calendar-v2/list-providers))
 * for a complete list of external calendar providers supported on the Wix site,
 * including which authorization methods they support.
 */
export function connectByCredentials(payload) {
    function __connectByCredentials({ host }) {
        const metadata = {
            entityFqdn: 'wix.bookings.calendar.v2.external_calendar',
            method: 'POST',
            methodFqn: 'com.wix.bookings.externalcalendar.api.v2.ExternalCalendarService.ConnectByCredentials',
            packageName: PACKAGE_NAME,
            url: resolveComWixBookingsExternalcalendarApiV2ExternalCalendarServiceUrl({
                protoPath: '/v2/external-calendars/connections:connectByCredentials',
                data: payload,
                host,
            }),
            data: payload,
        };
        return metadata;
    }
    return __connectByCredentials;
}
/** Retrieves details about the external calendar accounts associated with the specified connection. */
export function listCalendars(payload) {
    function __listCalendars({ host }) {
        const metadata = {
            entityFqdn: 'wix.bookings.calendar.v2.external_calendar',
            method: 'GET',
            methodFqn: 'com.wix.bookings.externalcalendar.api.v2.ExternalCalendarService.ListCalendars',
            packageName: PACKAGE_NAME,
            url: resolveComWixBookingsExternalcalendarApiV2ExternalCalendarServiceUrl({
                protoPath: '/v2/external-calendars/connections/{connectionId}/calendars',
                data: payload,
                host,
            }),
            params: toURLSearchParams(payload),
            fallback: [
                {
                    method: 'GET',
                    url: resolveComWixBookingsExternalcalendarApiV2ExternalCalendarServiceUrl({
                        protoPath: '/v2/external-calendars/connections/{connectionId}/calendars',
                        data: payload,
                        host,
                    }),
                    params: toURLSearchParams(payload),
                },
            ],
        };
        return metadata;
    }
    return __listCalendars;
}
/**
 * Updates the import and export settings for an external calendar connection's
 * events.
 *
 *
 * A connection's `syncConfig` object determines:
 *
 * + Whether events from 1 or more accounts belonging to the external
 * calendar are imported to the connected *Wix schedule*.
 * ([SDK](https://dev.wix.com/docs/sdk/backend-modules/calendar/schedules/introduction) | [REST](https://dev.wix.com/docs/rest/business-management/calendar/schedules-v3/introduction)).
 * If importing events is enabled, you can call _List Events_
 * ([SDK](https://dev.wix.com/docs/sdk/backend-modules/bookings/external-calendars/list-events) | [REST](https://dev.wix.com/docs/rest/business-solutions/bookings/calendar/external-calendar-v2/list-events))
 * to retrieve external calendar events.
 * + Whether events from the Wix schedule are exported to 1 or more accounts
 * belonging to the external calendar.
 *
 * To check the current import and export settings, you can call
 * _Get Connection_
 * ([SDK](https://dev.wix.com/docs/sdk/backend-modules/bookings/external-calendars/get-connection) | [REST](https://dev.wix.com/docs/rest/business-solutions/bookings/calendar/external-calendar-v2/get-connection))
 * or _List Connections_
 * ([SDK](https://dev.wix.com/docs/sdk/backend-modules/bookings/external-calendars/list-connections) | [REST](https://dev.wix.com/docs/rest/business-solutions/bookings/calendar/external-calendar-v2/list-connections)).
 */
export function updateSyncConfig(payload) {
    function __updateSyncConfig({ host }) {
        const serializedData = transformPaths(payload, [
            {
                transformFn: transformSDKFieldMaskToRESTFieldMask,
                paths: [{ path: 'fieldMask' }],
            },
        ]);
        const metadata = {
            entityFqdn: 'wix.bookings.calendar.v2.external_calendar',
            method: 'PATCH',
            methodFqn: 'com.wix.bookings.externalcalendar.api.v2.ExternalCalendarService.UpdateSyncConfig',
            packageName: PACKAGE_NAME,
            url: resolveComWixBookingsExternalcalendarApiV2ExternalCalendarServiceUrl({
                protoPath: '/v2/external-calendars/connections/{connectionId}/sync-config',
                data: serializedData,
                host,
            }),
            data: serializedData,
        };
        return metadata;
    }
    return __updateSyncConfig;
}
/**
 * Disconnects a Wix schedule from an external calendar and deletes all Wix
 * calendar *events*
 * ([SDK](https://dev.wix.com/docs/sdk/backend-modules/calendar/events/introduction) | [REST](https://dev.wix.com/docs/rest/business-management/calendar/events-v3/introduction))
 * from the external calendar.
 *
 *
 * When an external calendar is disconnected, the connection's `status`
 * changes to `DISCONNECTED`.
 *
 * After disconnecting, _List Events_
 * ([SDK](https://dev.wix.com/docs/sdk/backend-modules/bookings/external-calendars/list-events) | [REST](https://dev.wix.com/docs/rest/business-solutions/bookings/calendar/external-calendar-v2/list-events))
 * no longer returns events from the disconnected external calendar.
 */
export function disconnect(payload) {
    function __disconnect({ host }) {
        const metadata = {
            entityFqdn: 'wix.bookings.calendar.v2.external_calendar',
            method: 'POST',
            methodFqn: 'com.wix.bookings.externalcalendar.api.v2.ExternalCalendarService.Disconnect',
            packageName: PACKAGE_NAME,
            url: resolveComWixBookingsExternalcalendarApiV2ExternalCalendarServiceUrl({
                protoPath: '/v2/external-calendars/connections/{connectionId}/disconnect',
                data: payload,
                host,
            }),
            data: payload,
        };
        return metadata;
    }
    return __disconnect;
}
/**
 * Retrieves a list of events from all external calendar accounts, based on
 * the provided filtering and paging.
 *
 *
 * ## Filters
 *
 * You must filter by specifying both `from` and `to` dates, unless you specify
 * `cursorPaging.cursor`.
 *
 * Additionally, you can specify `scheduleIds` or `userIds` to further limit
 * which events are returned. By default, events related to all schedules and
 * Wix users are returned.
 *
 * ## Sorting
 *
 * Returned events are sorted by start date in ascending order. You can't
 * adjust the sorting.
 *
 * ## Personal data
 *
 * By default, the following `event` fields aren't returned:
 *
 * + `calendarName`.
 * + `title`.
 * + `scheduleOwnerName`.
 *
 * You can retrieve these fields, by specifying `{"fieldsets": "OWN_PI"}`.
 *
 * ## Partial success
 *
 * By default, the call fails if events for at least 1 connection can't be
 * retrieved from an external provider. However, you can specify
 * `{"partialFailure": true}` to allow the call to succeed, if details for at
 * least 1 connection can be retrieved.
 */
export function listEvents(payload) {
    function __listEvents({ host }) {
        const metadata = {
            entityFqdn: 'wix.bookings.calendar.v2.external_calendar',
            method: 'GET',
            methodFqn: 'com.wix.bookings.externalcalendar.api.v2.ExternalCalendarService.ListEvents',
            packageName: PACKAGE_NAME,
            url: resolveComWixBookingsExternalcalendarApiV2ExternalCalendarServiceUrl({ protoPath: '/v2/external-calendars/events', data: payload, host }),
            params: toURLSearchParams(payload),
        };
        return metadata;
    }
    return __listEvents;
}
//# sourceMappingURL=bookings-calendar-v2-external-calendar-external-calendars.http.js.map