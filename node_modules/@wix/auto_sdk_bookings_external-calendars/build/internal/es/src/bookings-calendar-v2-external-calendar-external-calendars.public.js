import { connectByCredentials as universalConnectByCredentials, connectByOAuth as universalConnectByOAuth, disconnect as universalDisconnect, getConnection as universalGetConnection, listCalendars as universalListCalendars, listConnections as universalListConnections, listEvents as universalListEvents, listProviders as universalListProviders, updateSyncConfig as universalUpdateSyncConfig, } from './bookings-calendar-v2-external-calendar-external-calendars.universal.js';
export const __metadata = { PACKAGE_NAME: '@wix/bookings' };
export function listProviders(httpClient) {
    return () => universalListProviders(
    // @ts-ignore
    { httpClient });
}
export function getConnection(httpClient) {
    return (connectionId) => universalGetConnection(connectionId, 
    // @ts-ignore
    { httpClient });
}
export function listConnections(httpClient) {
    return (options) => universalListConnections(options, 
    // @ts-ignore
    { httpClient });
}
export function connectByOAuth(httpClient) {
    return (providerId, scheduleId, redirectUrl) => universalConnectByOAuth(providerId, scheduleId, redirectUrl, 
    // @ts-ignore
    { httpClient });
}
export function connectByCredentials(httpClient) {
    return (providerId, scheduleId, email, password) => universalConnectByCredentials(providerId, scheduleId, email, password, 
    // @ts-ignore
    { httpClient });
}
export function listCalendars(httpClient) {
    return (connectionId) => universalListCalendars(connectionId, 
    // @ts-ignore
    { httpClient });
}
export function updateSyncConfig(httpClient) {
    return (connectionId, syncConfig) => universalUpdateSyncConfig(connectionId, syncConfig, 
    // @ts-ignore
    { httpClient });
}
export function disconnect(httpClient) {
    return (connectionId) => universalDisconnect(connectionId, 
    // @ts-ignore
    { httpClient });
}
export function listEvents(httpClient) {
    return (options) => universalListEvents(options, 
    // @ts-ignore
    { httpClient });
}
export { ApprovalStatus, CalendarType, ConferenceType, ConnectMethod, Day, DayOfWeek, ErrorReason, ListEventFromCalendars, LocationStatus, LocationType, LocationsLocationType, RecurringIntervalType, ScheduleStatus, SessionStatus, SessionType, Status, SyncToCalendar, SyncToErrorReason, Transparency, } from './bookings-calendar-v2-external-calendar-external-calendars.universal.js';
//# sourceMappingURL=bookings-calendar-v2-external-calendar-external-calendars.public.js.map