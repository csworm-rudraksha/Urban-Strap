import { c as GetMemberPrivacySettingsRequest$1, G as GetMemberPrivacySettingsResponse$1, d as SetMemberPrivacySettingsRequest$1, S as SetMemberPrivacySettingsResponse$1 } from './members-v1-member-privacy-settings-member-privacy-settings.universal-Ug-rkqm7.js';

/** Settings that determine who can see site members' profiles and who is allowed to make member profiles public. */
interface MemberPrivacySettings {
    /**
     * Member privacy settings ID.
     * @format GUID
     * @readonly
     */
    id?: string | null;
    /** Who can see the public member profiles. */
    publicMemberVisibility?: Visibility;
    /** Who can make the member profile public. */
    publicMemberCandidates?: Candidates;
    /** Revision number, which increments by 1 each time the member privacy settings are updated. To prevent conflicting changes, the existing revision must be used when updating member privacy settings. */
    revision?: string | null;
    /**
     * Date and time when the member privacy settings were updated.
     * @readonly
     */
    updatedDate?: Date | null;
}
declare enum Visibility {
    /** Unknown member visibility. This value isn't used. */
    UNKNOWN = "UNKNOWN",
    /** The members' profiles are only visible to logged-in site members. */
    VISIBLE_TO_MEMBERS_ONLY = "VISIBLE_TO_MEMBERS_ONLY",
    /** All site visitors can see the members' profiles. */
    VISIBLE_TO_ALL = "VISIBLE_TO_ALL"
}
declare enum Candidates {
    /** Unknown public member candidate. This value isn't used. */
    UNKNOWN = "UNKNOWN",
    /** All members have private profiles with no option to make them public. */
    NO_ONE = "NO_ONE",
    /** All members can make the profile public. */
    ANYONE = "ANYONE"
}
interface GetMemberPrivacySettingsRequest {
}
interface GetMemberPrivacySettingsResponse {
    /** Retrieved member privacy settings. */
    memberPrivacySettings?: MemberPrivacySettings;
}
interface SetMemberPrivacySettingsRequest {
    /** Member privacy settings details. */
    memberPrivacySettings: MemberPrivacySettings;
}
interface SetMemberPrivacySettingsResponse {
    /** Member privacy settings. */
    memberPrivacySettings?: MemberPrivacySettings;
}

type __PublicMethodMetaInfo<K = string, M = unknown, T = unknown, S = unknown, Q = unknown, R = unknown> = {
    getUrl: (context: any) => string;
    httpMethod: K;
    path: string;
    pathParams: M;
    __requestType: T;
    __originalRequestType: S;
    __responseType: Q;
    __originalResponseType: R;
};
declare function getMemberPrivacySettings(): __PublicMethodMetaInfo<'GET', {}, GetMemberPrivacySettingsRequest$1, GetMemberPrivacySettingsRequest, GetMemberPrivacySettingsResponse$1, GetMemberPrivacySettingsResponse>;
declare function setMemberPrivacySettings(): __PublicMethodMetaInfo<'POST', {}, SetMemberPrivacySettingsRequest$1, SetMemberPrivacySettingsRequest, SetMemberPrivacySettingsResponse$1, SetMemberPrivacySettingsResponse>;

export { type __PublicMethodMetaInfo, getMemberPrivacySettings, setMemberPrivacySettings };
