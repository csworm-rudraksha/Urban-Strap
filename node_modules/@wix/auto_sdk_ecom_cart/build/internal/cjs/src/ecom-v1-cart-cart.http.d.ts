import { RequestOptionsFactory } from '@wix/sdk-types';
/**
 * Creates a cart.
 *
 * > **Note:** When adding catalog line items, the `lineItems.catalogReference.appId` and `lineItems.catalogReference.catalogItemId` fields are required.
 */
export declare function createCart(payload: object): RequestOptionsFactory<any>;
/**
 * Updates a cart's properties.
 *
 * > **Note:** When updating line items, the `lineItems.catalogReference.appId` and `lineItems.catalogReference.catalogItemId` fields are required.
 */
export declare function updateCart(payload: object): RequestOptionsFactory<any>;
/** Retrieves a cart. */
export declare function getCart(payload: object): RequestOptionsFactory<any>;
/** Retrieves the cart associated with a specified checkout. */
export declare function getCartByCheckoutId(payload: object): RequestOptionsFactory<any>;
/**
 * Adds catalog ([SDK](https://dev.wix.com/docs/sdk/backend-modules/stores/catalog-v3/e-commerce-integration) | [REST](https://dev.wix.com/docs/rest/business-solutions/stores/catalog/e-commerce-integration)) line items to a cart.
 *
 * >**Note:** When adding catalog line items to a cart, the `lineItems.catalogReference.appId` and `lineItems.catalogReference.catalogItemId` fields are required.
 */
export declare function addToCart(payload: object): RequestOptionsFactory<any>;
/** Removes line items from a cart. */
export declare function removeLineItems(payload: object): RequestOptionsFactory<any>;
/**
 * Creates a checkout from a cart.
 *
 * If a checkout for the specified cart already exists, that checkout is
 * updated with any new information from the cart.
 *
 * > **Note:** `channelType` is a required field.
 */
export declare function createCheckout(payload: object): RequestOptionsFactory<any>;
/** Removes the coupon from a cart. */
export declare function removeCoupon(payload: object): RequestOptionsFactory<any>;
/**
 * Updates the quantity of one or more line items in a cart.
 *
 * This method is only for updating the quantity of line items.
 * To entirely remove a line item from the cart, use Remove Line Items.
 * To add a new line item to the cart, use Add To Cart.
 *
 * This method checks the amount of stock remaining for this line item.
 * If the specified quantity is greater than the remaining stock,
 * then the quantity returned in the response is the total amount of remaining stock.
 */
export declare function updateLineItemsQuantity(payload: object): RequestOptionsFactory<any>;
/**
 * Estimates the subtotal and total for current site visitorâ€™s cart.
 *
 * Totals include tax and are based on the selected carrier service, shipping address, and billing information.
 *
 * > **Note:** Not passing any optional parameters will only estimate the cart items price totals.
 */
export declare function estimateTotals(payload: object): RequestOptionsFactory<any>;
/** Deletes a cart. */
export declare function deleteCart(payload: object): RequestOptionsFactory<any>;
/** Removes the location associated with a cart. */
export declare function removeBusinessLocation(payload: object): RequestOptionsFactory<any>;
